{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/casual/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/casual/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/casual/source/weixin.jpg","path":"weixin.jpg","modified":1,"renderable":1},{"_id":"themes/casual/source/css/icon.css","path":"css/icon.css","modified":1,"renderable":1},{"_id":"themes/casual/source/font/bdfont-symbol.svg","path":"font/bdfont-symbol.svg","modified":1,"renderable":1},{"_id":"themes/casual/source/font/bdfont.svg","path":"font/bdfont.svg","modified":1,"renderable":1},{"_id":"themes/casual/source/font/bdfont.eot","path":"font/bdfont.eot","modified":1,"renderable":1},{"_id":"themes/casual/source/font/bdfont.ttf","path":"font/bdfont.ttf","modified":1,"renderable":1},{"_id":"themes/casual/source/font/bdfont.woff","path":"font/bdfont.woff","modified":1,"renderable":1},{"_id":"themes/casual/source/font/sourcesanspro.woff","path":"font/sourcesanspro.woff","modified":1,"renderable":1},{"_id":"themes/casual/source/font/sourcesanspro.woff2","path":"font/sourcesanspro.woff2","modified":1,"renderable":1},{"_id":"themes/casual/source/image/default_thumbnail.jpg","path":"image/default_thumbnail.jpg","modified":1,"renderable":1},{"_id":"themes/casual/source/js/posfixed.js","path":"js/posfixed.js","modified":1,"renderable":1},{"_id":"themes/casual/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/casual/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/casual/source/scss/casual.scss","path":"scss/casual.scss","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/0-DevEnvBaseOnDocker.md","hash":"48ca5981ff7de074d73f5cc76eff5ea47c5905b3","modified":1601649540290},{"_id":"source/_posts/003-Docker运行图形界面程序.md","hash":"a243c2a84c5530907b7bed1a14676b81108166c5","modified":1601647821431},{"_id":"source/_posts/001-使用emby构建家庭媒体中心.md","hash":"a4a106d42ab88b05bcdbbacbe6037a6f29f2c9b0","modified":1601647821389},{"_id":"source/_posts/002-使用docker构建vim-golang开发环境.md","hash":"ea5be08b1501848f92a4c089382daeb9372397e6","modified":1601647821403},{"_id":"source/_posts/004-构建基于Git的知识管理体系.md","hash":"89605e975fe7b68e9137f199a777ced2edd2a968","modified":1601647821461},{"_id":"source/_posts/006-MTP培训笔记读后感.md","hash":"536cfb28afee92b3255ac41a5d6809f26e611904","modified":1601647821490},{"_id":"source/_posts/008-搭建家庭媒体中心.md","hash":"ef657cf6b6947e71ce412113f2bbb468c8c56ec3","modified":1601647821517},{"_id":"source/_posts/005-高标准做事.md","hash":"b2abfeddcc8b27ae5e92f997aca4bfaf2a34aec5","modified":1601647821477},{"_id":"source/_posts/007-Docker简易使用教程.md","hash":"c523c1960cc4a6e041f193647a5c7b8d11386bf6","modified":1601647821504},{"_id":"source/_posts/010-Linux字体.md","hash":"6de015aa7b5128afe6fcfdceb23172ed8015eb40","modified":1601647821541},{"_id":"source/_posts/009-月度考勤统计SQL脚本.md","hash":"fdc0154542b04645af1b50bc0b4ca42fdf133e3b","modified":1601647821529},{"_id":"source/_posts/011-Linux系统启动慢排查手册.md","hash":"1b40ce8253307b23923ecefa8debbdfe6642bfab","modified":1601647821554},{"_id":"source/_posts/012-Tmux使用入门.md","hash":"8fb72cfe2d57c2ea2e01d704bbb934994b1c554e","modified":1601647821566},{"_id":"source/_posts/013-vim脚本提取文件名.md","hash":"416688106ee50dd71d0d0b9092868172d8a513a9","modified":1601647821578},{"_id":"source/_posts/016-Linux命令行常用快捷键.md","hash":"a9753233cd26a4af22ea1d29223029eb2a573347","modified":1601647821637},{"_id":"source/_posts/017-年终总结如何写.md","hash":"97ba9773683ca710fa0167daa844ec33b278195c","modified":1601647821673},{"_id":"source/_posts/014-vim插件管理.md","hash":"a191c7984015f0a461562eb3ce0b68cf8bf2e34a","modified":1601647821588},{"_id":"source/_posts/015-Emacs常用技巧.md","hash":"14f1dcda8876e9078ac3965436318a419efb8ab4","modified":1601647821602},{"_id":"source/_posts/019-设计模式学习笔记.md","hash":"140bfc1ab1296d020c35e3bb2dce139dde1c4cea","modified":1601647821719},{"_id":"source/_posts/018-如何写好年终总结.md","hash":"0135bf3fa92c00458916052a63bef8a3f8f71cac","modified":1601647821688},{"_id":"source/_posts/019-vim分屏标签.md","hash":"1563e03abb92ce58a44ec7ad71b5a2239c2853e1","modified":1601647821703},{"_id":"source/_posts/020-Emacs性能问题排查.md","hash":"fa14529529db19bc6f368644910daf741add841e","modified":1601647821734},{"_id":"source/_posts/022-Git使用技巧.md","hash":"6954a3b023ed48717c4d56a97fc44f1c332cc936","modified":1601647821762},{"_id":"source/_posts/021-Linux系统剪贴板.md","hash":"d4ab2f8d4d8a2bfa4c38cb36cabe3958e862a900","modified":1601647821750},{"_id":"source/_posts/023-Vim使用技巧-执行外部命令.md","hash":"c303a635aab4d9b95ff2d1a88f43aab9edd7d653","modified":1601647821776},{"_id":"source/_posts/026-Mac常用软件.md","hash":"acd98b168ede5ab4317eec4442430cc003eeb550","modified":1601647821842},{"_id":"source/_posts/024-Vim脚本编写入门.md","hash":"1d26a4960b107334b1b207add745159f338b00ca","modified":1601647821793},{"_id":"source/_posts/025-Vim基本操作.md","hash":"460ce6cd67dc3ed2dcea92446437a0406310e3b1","modified":1601647821823},{"_id":"source/_posts/027-vagrant使用入门.md","hash":"c3ee0a713d1e3e9c5f19ae30f4df01243500ec4d","modified":1601647821864},{"_id":"source/_posts/028-网盘你真的需要吗.md","hash":"04abdcebdf82e24e5cff2a75f44d8dd55cc77249","modified":1601647821877},{"_id":"source/_posts/029-etcd初级入门.md","hash":"f44e29120b72140ad6aa5c04f024b894a2754693","modified":1601647821889},{"_id":"source/_posts/EverSynClientTestMd.md","hash":"d90e23293db72b0bd7e88c8246bd567fa007e84e","modified":1601647821916},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1601649320866},{"_id":"themes/casual/LICENSE","hash":"d804746842369f789048934a90158d84fb994531","modified":1601650895923},{"_id":"themes/casual/README.md","hash":"1f49ac69291b97bf25b7580d81994f7a97eb05bd","modified":1601650895924},{"_id":"themes/casual/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1601650895921},{"_id":"themes/casual/_config.yml","hash":"da497e1bd4cd393f8d8a4a5ef4b927176bec5e5e","modified":1601650895926},{"_id":"themes/casual/gulpfile.js","hash":"4858cd0be52ba8b9ed77da19024f16cbdb072309","modified":1601650895926},{"_id":"themes/casual/languages/zh-cn.yml","hash":"6f02c15e9180a557a493d8a355898bff4bb2f35e","modified":1601650895928},{"_id":"themes/casual/package.json","hash":"07919c1bb3f7a72cc9c5b91980b29518506aff48","modified":1601650895933},{"_id":"themes/casual/support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1601650895947},{"_id":"themes/casual/languages/en.yml","hash":"dab3b0b6f7aeabda66a186c16478a50ad9f052c9","modified":1601650895928},{"_id":"themes/casual/layout/about.jade","hash":"01481cb53104ffdf1f16adca6c329810a8a27e23","modified":1601650895929},{"_id":"themes/casual/layout/index.jade","hash":"4dff4a7f21b6bd3637c29338c700d31626e1bef3","modified":1601650895929},{"_id":"themes/casual/layout/archive.jade","hash":"5098c2ce7552c4d4a99ffdd472b27ae88d943627","modified":1601650895929},{"_id":"themes/casual/layout/post.jade","hash":"50cc64a143950ff3ee6ea550b653fc7b675ab892","modified":1601650895932},{"_id":"themes/casual/layout/resume.jade","hash":"e2b354dd4e2fe30648e5ff8ddbf5ee127ed3a153","modified":1601650895933},{"_id":"themes/casual/source/404.html","hash":"e3d5ebd6084ef205f744090be592ba0d4ba003a2","modified":1601650895933},{"_id":"themes/casual/source/favicon.png","hash":"0c53dc95d769916545f9d14d569d670a160790c9","modified":1601650895934},{"_id":"themes/casual/layout/mixins/paginator.jade","hash":"14c3a7438d85aababe9d7f5bda538e104b7811bb","modified":1601650895930},{"_id":"themes/casual/layout/mixins/post.jade","hash":"60df73591096b8c06cceba296053391e29767577","modified":1601650895930},{"_id":"themes/casual/layout/partial/comment.jade","hash":"2d2d8d9decb530c41be78aaa5179e92dd826af0a","modified":1601650895930},{"_id":"themes/casual/layout/partial/head.jade","hash":"1339a6f21846cb907efda9481555423b88e66e86","modified":1601650895931},{"_id":"themes/casual/layout/partial/header.jade","hash":"31652e550319fb6e7915bcd7645b30ecc221f819","modified":1601650895931},{"_id":"themes/casual/layout/partial/footer.jade","hash":"e3146e37820dde3441b8869e77e24a4d9400159c","modified":1601650895930},{"_id":"themes/casual/layout/partial/layout.jade","hash":"3c460229c3452dbef682241548daa21d94165cf9","modified":1601650895931},{"_id":"themes/casual/layout/partial/nav.jade","hash":"d81b7601dad8813fe5b7eb3c62507166831175df","modified":1601650895932},{"_id":"themes/casual/layout/partial/scripts.jade","hash":"611421f7b6a3bb615663d587bb30cb242f6b9584","modified":1601650895932},{"_id":"themes/casual/source/css/icon.css","hash":"6172fdb6e78942b625097070a04366b31f9104f4","modified":1601650895934},{"_id":"themes/casual/layout/partial/social.jade","hash":"8a909bc8c904b7731958b5083fb882b867369245","modified":1601650895932},{"_id":"themes/casual/layout/partial/sidebar.jade","hash":"0c387d0cab2a8bfc317c708c5ad5d36aa812d224","modified":1601650895932},{"_id":"themes/casual/source/font/bdfont-symbol.svg","hash":"1ef10e9765617e36f2cc67deae2bef3e1043d22a","modified":1601650895935},{"_id":"themes/casual/source/font/bdfont.svg","hash":"fddc0d9de1487ef311ead7e98d2542d44ce65a1c","modified":1601650895935},{"_id":"themes/casual/source/font/bdfont.eot","hash":"19f5432f3cbc3268bc6c4f6f0c1812a5882e557f","modified":1601650895935},{"_id":"themes/casual/source/font/bdfont.ttf","hash":"b57a87a17bd059004abb693489aaabecc944431d","modified":1601650895936},{"_id":"themes/casual/source/font/bdfont.woff","hash":"ccaee290b49abb083ae7ce91e393b28b7d097e64","modified":1601650895936},{"_id":"themes/casual/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1601650895937},{"_id":"themes/casual/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1601650895938},{"_id":"themes/casual/source/js/posfixed.js","hash":"44b62b4e6ce2bfe24c0eb8d57068b80ef6102266","modified":1601650895940},{"_id":"themes/casual/source/js/search.js","hash":"415cd33e2d5eecc3d78034958c68eefa7448af19","modified":1601650895940},{"_id":"themes/casual/source/js/utils.js","hash":"c42a61f844377e7836c377f4065b5914555dcc18","modified":1601650895941},{"_id":"themes/casual/source/scss/casual.scss","hash":"a29f845d207d2ff6f58035490bfeeee8585ae93f","modified":1601650895944},{"_id":"themes/casual/source/scss/_partial/base.scss","hash":"99a1547fe31b8eaad94371a8a1cb460173ffd24f","modified":1601650895941},{"_id":"themes/casual/source/scss/_partial/footer.scss","hash":"50518d4f0d36f0727948c85d01eb0af91ad10b45","modified":1601650895941},{"_id":"themes/casual/source/scss/_partial/header.scss","hash":"17e344620b2f5d16717046324269edf647166621","modified":1601650895942},{"_id":"themes/casual/source/scss/_partial/mq.scss","hash":"518a781f89e2438aa08abcb4ad5d07ecc0fe8eb4","modified":1601650895942},{"_id":"themes/casual/source/scss/_partial/post.scss","hash":"c8e0f2886b8c3a9f301f5d41a93c441842f984ea","modified":1601650895943},{"_id":"themes/casual/source/scss/_partial/resume.scss","hash":"ba54190455ccfa6f1c75f57cd616f69ecc2a2068","modified":1601650895943},{"_id":"themes/casual/source/scss/_partial/sidebar.scss","hash":"caf705f5e29139775fee6e0f9603b660e93c0b58","modified":1601650895943},{"_id":"themes/casual/source/scss/_partial/normalize.scss","hash":"23e40480757977906b182bf5ae1a970af027dc19","modified":1601650895942},{"_id":"themes/casual/source/weixin.jpg","hash":"10933b6642add60d3782a2c8e9e201194ea0b566","modified":1601650895946},{"_id":"themes/casual/source/image/default_thumbnail.jpg","hash":"13c27c0902ecdd9eb9b11ea8a711f7f6575bb92b","modified":1601650895939},{"_id":"public/atom.xml","hash":"2c8a89999e61206bb529e992e54c69993d0cfccf","modified":1601655100323},{"_id":"public/search.xml","hash":"86d14f56797d45f331e42e3fd2a9b19738bf18aa","modified":1601655100323},{"_id":"public/sitemap.xml","hash":"83b0a8b2d3d881821269a5ba9d0acb52eac2fe2e","modified":1601655100323},{"_id":"public/2020/10/02/0-DevEnvBaseOnDocker/index.html","hash":"ea3295a666c446fc0fa8895303e2d5534afd2d21","modified":1601655100323},{"_id":"public/2020/10/02/hello-world/index.html","hash":"991324e78f8fdbba17e59d1058ed11e0af211d03","modified":1601655100323},{"_id":"public/2020/10/02/EverSynClientTestMd/index.html","hash":"b9d56141b6a08122fb43ef5e6098747afcca99ac","modified":1601655100323},{"_id":"public/2020/10/02/029-etcd初级入门/index.html","hash":"e56e3e36dd1ac9847f12cd5eee23835c67ac2aa3","modified":1601655100323},{"_id":"public/2020/10/02/028-网盘你真的需要吗/index.html","hash":"0368dbcc79647353b6005151cfb77326a49bb007","modified":1601655100323},{"_id":"public/2020/10/02/027-vagrant使用入门/index.html","hash":"f30ee0cd5f59af66d4e9162636d09f46d14aa31c","modified":1601655100323},{"_id":"public/2020/10/02/026-Mac常用软件/index.html","hash":"fef0fdac77bfcc0dae7e356d6eb8466893dd60aa","modified":1601655100323},{"_id":"public/2020/10/02/025-Vim基本操作/index.html","hash":"0168c4530d97abf3f013bc4676c3e2b18719d55a","modified":1601655100323},{"_id":"public/2020/10/02/023-Vim使用技巧-执行外部命令/index.html","hash":"943e1c253416317aeedab7356b611dc08673a555","modified":1601655100323},{"_id":"public/2020/10/02/022-Git使用技巧/index.html","hash":"5b4d29da2560c5f5c8e4ebfb6e6fbfc5969c0361","modified":1601655100323},{"_id":"public/2020/10/02/021-Linux系统剪贴板/index.html","hash":"b583203856e1687e1ffcd37fc705b7e8f02dca55","modified":1601655100323},{"_id":"public/2020/10/02/020-Emacs性能问题排查/index.html","hash":"05e92882e0277cbca6c85292473e8fdffc1d0b4b","modified":1601655100323},{"_id":"public/2020/10/02/019-设计模式学习笔记/index.html","hash":"c34589e7ba0638978ed7e8614ba741272c6fe0f4","modified":1601655100323},{"_id":"public/2020/10/02/019-vim分屏标签/index.html","hash":"59b46113911bae0def86aad3dc0945b14563f1d3","modified":1601655100323},{"_id":"public/2020/10/02/017-年终总结如何写/index.html","hash":"2ded16245f7b63d2f0c77823960723f77761e106","modified":1601655100323},{"_id":"public/2020/10/02/016-Linux命令行常用快捷键/index.html","hash":"6f6c04e4f286cbd9893b6070ed247103923fa209","modified":1601655100323},{"_id":"public/2020/10/02/015-Emacs常用技巧/index.html","hash":"385bfe027711648895cf700cfcc2073f10ae5412","modified":1601655100323},{"_id":"public/2020/10/02/014-vim插件管理/index.html","hash":"1c6ce63df5d81511575003723064aa42078f5ee4","modified":1601655100323},{"_id":"public/2020/10/02/013-vim脚本提取文件名/index.html","hash":"68607d139b9cf49eec4c48d6c6db28be3a84a2d3","modified":1601655100323},{"_id":"public/2020/10/02/012-Tmux使用入门/index.html","hash":"352a48f3f0ae883964223018427816473876d05f","modified":1601655100323},{"_id":"public/2020/10/02/011-Linux系统启动慢排查手册/index.html","hash":"7c736e09fd3f7df61bb7e247d580e6e57050cdb7","modified":1601655100323},{"_id":"public/2020/10/02/010-Linux字体/index.html","hash":"e05d6eb06a698ca71c5abf64620dd07c8336238f","modified":1601655100323},{"_id":"public/2020/10/02/009-月度考勤统计SQL脚本/index.html","hash":"b2be944cbb06b15ad1848c71d95d775dfa5f5502","modified":1601655100323},{"_id":"public/2020/10/02/008-搭建家庭媒体中心/index.html","hash":"e7939abbb447ae89cfd793bc6760d752f21f0009","modified":1601655100323},{"_id":"public/2020/10/02/007-Docker简易使用教程/index.html","hash":"3bd5a44c88b6616c46315180d5140b912402e886","modified":1601655100323},{"_id":"public/2020/10/02/006-MTP培训笔记读后感/index.html","hash":"429876d16b9525b18055e2f4f7bc64d92f745709","modified":1601655100323},{"_id":"public/2020/10/02/005-高标准做事/index.html","hash":"27874e7ffb9c92ba6efbe1d946355d65f9b15ed3","modified":1601655100323},{"_id":"public/2020/10/02/004-构建基于Git的知识管理体系/index.html","hash":"a58c95dc4424c443660e2cc2e4584d1364fe1aff","modified":1601655100323},{"_id":"public/2020/10/02/003-Docker运行图形界面程序/index.html","hash":"1680521381a491b259416d6cf3f72f5ecc1ad7bd","modified":1601655100323},{"_id":"public/2020/10/02/001-使用emby构建家庭媒体中心/index.html","hash":"8463efb7508b1ce3cd61adceb9faa48db589db08","modified":1601655100323},{"_id":"public/archives/index.html","hash":"d12afbe0592eaf6978c7c69711497e09e1524c44","modified":1601655100323},{"_id":"public/archives/page/2/index.html","hash":"d5b97f86f60709189c5a793555a47ad5fff51458","modified":1601655100323},{"_id":"public/archives/page/3/index.html","hash":"97947d62981844cda0d17c944d3e06fa4fd96f2a","modified":1601655100323},{"_id":"public/archives/page/4/index.html","hash":"b1b59132749e6fd5b18f837ad0fc9d05c2b27ec5","modified":1601655100323},{"_id":"public/archives/2020/index.html","hash":"a5f8732475d9fe0cb2e7e160aa6575532478a727","modified":1601655100323},{"_id":"public/archives/2020/page/2/index.html","hash":"fe4cb06cc99595ef596e6abd441b2a951c108481","modified":1601655100323},{"_id":"public/archives/2020/page/3/index.html","hash":"802f7ed765e2e2fe93c4b2cebc653486d3dd0959","modified":1601655100323},{"_id":"public/archives/2020/page/4/index.html","hash":"4b6c832c6b4ab2ebdfde70aa73aee93843189075","modified":1601655100323},{"_id":"public/archives/2020/10/index.html","hash":"a5d195ff26c67743f868f26af634a491cf43f782","modified":1601655100323},{"_id":"public/archives/2020/10/page/2/index.html","hash":"dce97ce250f3764e50da23d32f2893c6220f7253","modified":1601655100323},{"_id":"public/archives/2020/10/page/3/index.html","hash":"17df3608d31066eed222c50433504ef2f13c8951","modified":1601655100323},{"_id":"public/archives/2020/10/page/4/index.html","hash":"f78725f847bdfcbc2022b08d8d01884842f237e9","modified":1601655100323},{"_id":"public/index.html","hash":"ab7265e53c8d4b445d54f9848417c268794521d3","modified":1601655100323},{"_id":"public/page/2/index.html","hash":"0d1af5ea54fd4dbeedd569e96d7c9857b15a8099","modified":1601655100323},{"_id":"public/page/3/index.html","hash":"c8b70d733065f78cfda638b145a3309d46cbcb65","modified":1601655100323},{"_id":"public/page/4/index.html","hash":"32bcfc3f53cdcd9a71b23523f161cb573c6d4623","modified":1601655100323},{"_id":"public/tags/Markdown-blog-2019-blog-2019-12/index.html","hash":"5c757968b86a5981f2c2d9d70cf37ef48880c2da","modified":1601655100323},{"_id":"public/tags/Markdown-blog/index.html","hash":"43336965061b40ca1dff7dbdc1fe7cfa6354f768","modified":1601655100323},{"_id":"public/tags/Markdown-blog/page/2/index.html","hash":"3a39d2227090cbe02c539364070efe7a526cb6e0","modified":1601655100323},{"_id":"public/tags/Markdown-blog/page/3/index.html","hash":"7f8ae22a086ce0f6eac372f97014ebfd607e90f8","modified":1601655100323},{"_id":"public/tags/Markdown-daily/index.html","hash":"983ce921d3a485a9874a8d043ab1abca765874f6","modified":1601655100323},{"_id":"public/tags/Markdown-blog-2020-blog-2020-01/index.html","hash":"bba739406193f79247d681b732d848e187df0134","modified":1601655100323},{"_id":"public/tags/Markdown-GitMdNote-blog-2020-01/index.html","hash":"d8f323c4ddf0f60dc565a3d667b85556f366faea","modified":1601655100323},{"_id":"public/2020/10/02/024-Vim脚本编写入门/index.html","hash":"20eae5dc5366e24856d2f05f197ef115188c7cc5","modified":1601655100323},{"_id":"public/2020/10/02/018-如何写好年终总结/index.html","hash":"30660c8d191e0db889cda0aa0e66bbda09e98eb9","modified":1601655100323},{"_id":"public/2020/10/02/002-使用docker构建vim-golang开发环境/index.html","hash":"20072357b215824e25c4f9fdf0037c131e35ba08","modified":1601655100323},{"_id":"public/favicon.png","hash":"0c53dc95d769916545f9d14d569d670a160790c9","modified":1601655100323},{"_id":"public/font/bdfont-symbol.svg","hash":"1ef10e9765617e36f2cc67deae2bef3e1043d22a","modified":1601655100323},{"_id":"public/font/bdfont.svg","hash":"fddc0d9de1487ef311ead7e98d2542d44ce65a1c","modified":1601655100323},{"_id":"public/font/bdfont.eot","hash":"19f5432f3cbc3268bc6c4f6f0c1812a5882e557f","modified":1601655100323},{"_id":"public/font/bdfont.ttf","hash":"b57a87a17bd059004abb693489aaabecc944431d","modified":1601655100323},{"_id":"public/font/bdfont.woff","hash":"ccaee290b49abb083ae7ce91e393b28b7d097e64","modified":1601655100323},{"_id":"public/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1601655100323},{"_id":"public/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1601655100323},{"_id":"public/image/default_thumbnail.jpg","hash":"13c27c0902ecdd9eb9b11ea8a711f7f6575bb92b","modified":1601655100323},{"_id":"public/weixin.jpg","hash":"10933b6642add60d3782a2c8e9e201194ea0b566","modified":1601655100323},{"_id":"public/404.html","hash":"e3d5ebd6084ef205f744090be592ba0d4ba003a2","modified":1601655100323},{"_id":"public/css/icon.css","hash":"6172fdb6e78942b625097070a04366b31f9104f4","modified":1601655100323},{"_id":"public/js/search.js","hash":"415cd33e2d5eecc3d78034958c68eefa7448af19","modified":1601655100323},{"_id":"public/js/posfixed.js","hash":"44b62b4e6ce2bfe24c0eb8d57068b80ef6102266","modified":1601655100323},{"_id":"public/js/utils.js","hash":"c42a61f844377e7836c377f4065b5914555dcc18","modified":1601655100323},{"_id":"public/scss/casual.css","hash":"801592ffcb2a923eb9d4fc0cf48c5246223a48a1","modified":1601655100323}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"使用emby构建家庭媒体中心","time":"2019-12-02 17:38","notebook":"blog","_content":"\n# 001-使用emby构建家庭媒体中心\n\n\n## 原理\n\n使用Docker快速构建媒体中心\n- `/media`媒体目录\n```\n$ docker run \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-p 8096:8096 \\\n-v /docker/emby/host/config:/config \\\n-v /host/media:/media \\\nnvllsvm/emby-unlocked\n```\n\ndocker run \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-p 8096:8096 \\\n-p 8200:8200 \\\n-p 1900:1900/udp \\\n-v /docker/emby/host/config:/config \\\n-v /host/media:/media/jiftle/storage/媒体库 \\\nnvllsvm/emby-unlocked\n","source":"_posts/001-使用emby构建家庭媒体中心.md","raw":"---\ntitle: 使用emby构建家庭媒体中心\ntime: 2019-12-02 17:38\ntags: Markdown,blog-2019,blog-2019-12\nnotebook: blog\n---\n\n# 001-使用emby构建家庭媒体中心\n\n\n## 原理\n\n使用Docker快速构建媒体中心\n- `/media`媒体目录\n```\n$ docker run \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-p 8096:8096 \\\n-v /docker/emby/host/config:/config \\\n-v /host/media:/media \\\nnvllsvm/emby-unlocked\n```\n\ndocker run \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-p 8096:8096 \\\n-p 8200:8200 \\\n-p 1900:1900/udp \\\n-v /docker/emby/host/config:/config \\\n-v /host/media:/media/jiftle/storage/媒体库 \\\nnvllsvm/emby-unlocked\n","slug":"001-使用emby构建家庭媒体中心","published":1,"date":"2020-10-02T14:10:21.386Z","updated":"2020-10-02T14:10:21.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3djd00008p7lfhx75vdv","content":"<h1 id=\"001-使用emby构建家庭媒体中心\"><a href=\"#001-使用emby构建家庭媒体中心\" class=\"headerlink\" title=\"001-使用emby构建家庭媒体中心\"></a>001-使用emby构建家庭媒体中心</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>使用Docker快速构建媒体中心</p>\n<ul>\n<li><code>/media</code>媒体目录<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run \\</span><br><span class=\"line\">-e PUID&#x3D;1000 \\</span><br><span class=\"line\">-e PGID&#x3D;1000 \\</span><br><span class=\"line\">-p 8096:8096 \\</span><br><span class=\"line\">-v &#x2F;docker&#x2F;emby&#x2F;host&#x2F;config:&#x2F;config \\</span><br><span class=\"line\">-v &#x2F;host&#x2F;media:&#x2F;media \\</span><br><span class=\"line\">nvllsvm&#x2F;emby-unlocked</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>docker run <br>-e PUID=1000 <br>-e PGID=1000 <br>-p 8096:8096 <br>-p 8200:8200 <br>-p 1900:1900/udp <br>-v /docker/emby/host/config:/config <br>-v /host/media:/media/jiftle/storage/媒体库 <br>nvllsvm/emby-unlocked</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"001-使用emby构建家庭媒体中心\"><a href=\"#001-使用emby构建家庭媒体中心\" class=\"headerlink\" title=\"001-使用emby构建家庭媒体中心\"></a>001-使用emby构建家庭媒体中心</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>使用Docker快速构建媒体中心</p>\n<ul>\n<li><code>/media</code>媒体目录<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run \\</span><br><span class=\"line\">-e PUID&#x3D;1000 \\</span><br><span class=\"line\">-e PGID&#x3D;1000 \\</span><br><span class=\"line\">-p 8096:8096 \\</span><br><span class=\"line\">-v &#x2F;docker&#x2F;emby&#x2F;host&#x2F;config:&#x2F;config \\</span><br><span class=\"line\">-v &#x2F;host&#x2F;media:&#x2F;media \\</span><br><span class=\"line\">nvllsvm&#x2F;emby-unlocked</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>docker run <br>-e PUID=1000 <br>-e PGID=1000 <br>-p 8096:8096 <br>-p 8200:8200 <br>-p 1900:1900/udp <br>-v /docker/emby/host/config:/config <br>-v /host/media:/media/jiftle/storage/媒体库 <br>nvllsvm/emby-unlocked</p>\n"},{"title":"使用Docker构建开发环境","time":"2019-12-02 17:38","notebook":"blog","_content":"# 使用Docker构建开发环境\n\n## Base Docker Images\n\n- Ubuntu 1804\n\n## 支持的系统\n\n- Linux(deepin)\n- MacOS(10.15)\n\n## Feature\n\n- vim 8.2\n- gvim\n- emacs 26.3\n- spacemacs\n- eclipse 3.8\n- gtk2.0\n- gtk3.0\n- eclipse 4.15\n\n## Docker和主机之间的互操作性\n\n- 目录共享\n- 剪贴板共享\n- GUI程序运行在主机桌面\n\n## 缺陷\n\n- 大型的GUI不能运行，依赖多，（不如直接安装虚拟机）\n- gvim中文输入法，不能解决\n  - emacs can input chinese , select input-method of use set-input-method\n\n\n","source":"_posts/0-DevEnvBaseOnDocker.md","raw":"---\ntitle: 使用Docker构建开发环境\ntime: 2019-12-02 17:38\ntags: Markdown,blog-2019,blog-2019-12\nnotebook: blog\n---\n# 使用Docker构建开发环境\n\n## Base Docker Images\n\n- Ubuntu 1804\n\n## 支持的系统\n\n- Linux(deepin)\n- MacOS(10.15)\n\n## Feature\n\n- vim 8.2\n- gvim\n- emacs 26.3\n- spacemacs\n- eclipse 3.8\n- gtk2.0\n- gtk3.0\n- eclipse 4.15\n\n## Docker和主机之间的互操作性\n\n- 目录共享\n- 剪贴板共享\n- GUI程序运行在主机桌面\n\n## 缺陷\n\n- 大型的GUI不能运行，依赖多，（不如直接安装虚拟机）\n- gvim中文输入法，不能解决\n  - emacs can input chinese , select input-method of use set-input-method\n\n\n","slug":"0-DevEnvBaseOnDocker","published":1,"date":"2020-10-02T14:39:00.289Z","updated":"2020-10-02T14:39:00.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3djx00018p7lfbhr5cfq","content":"<h1 id=\"使用Docker构建开发环境\"><a href=\"#使用Docker构建开发环境\" class=\"headerlink\" title=\"使用Docker构建开发环境\"></a>使用Docker构建开发环境</h1><h2 id=\"Base-Docker-Images\"><a href=\"#Base-Docker-Images\" class=\"headerlink\" title=\"Base Docker Images\"></a>Base Docker Images</h2><ul>\n<li>Ubuntu 1804</li>\n</ul>\n<h2 id=\"支持的系统\"><a href=\"#支持的系统\" class=\"headerlink\" title=\"支持的系统\"></a>支持的系统</h2><ul>\n<li>Linux(deepin)</li>\n<li>MacOS(10.15)</li>\n</ul>\n<h2 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h2><ul>\n<li>vim 8.2</li>\n<li>gvim</li>\n<li>emacs 26.3</li>\n<li>spacemacs</li>\n<li>eclipse 3.8</li>\n<li>gtk2.0</li>\n<li>gtk3.0</li>\n<li>eclipse 4.15</li>\n</ul>\n<h2 id=\"Docker和主机之间的互操作性\"><a href=\"#Docker和主机之间的互操作性\" class=\"headerlink\" title=\"Docker和主机之间的互操作性\"></a>Docker和主机之间的互操作性</h2><ul>\n<li>目录共享</li>\n<li>剪贴板共享</li>\n<li>GUI程序运行在主机桌面</li>\n</ul>\n<h2 id=\"缺陷\"><a href=\"#缺陷\" class=\"headerlink\" title=\"缺陷\"></a>缺陷</h2><ul>\n<li>大型的GUI不能运行，依赖多，（不如直接安装虚拟机）</li>\n<li>gvim中文输入法，不能解决<ul>\n<li>emacs can input chinese , select input-method of use set-input-method</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用Docker构建开发环境\"><a href=\"#使用Docker构建开发环境\" class=\"headerlink\" title=\"使用Docker构建开发环境\"></a>使用Docker构建开发环境</h1><h2 id=\"Base-Docker-Images\"><a href=\"#Base-Docker-Images\" class=\"headerlink\" title=\"Base Docker Images\"></a>Base Docker Images</h2><ul>\n<li>Ubuntu 1804</li>\n</ul>\n<h2 id=\"支持的系统\"><a href=\"#支持的系统\" class=\"headerlink\" title=\"支持的系统\"></a>支持的系统</h2><ul>\n<li>Linux(deepin)</li>\n<li>MacOS(10.15)</li>\n</ul>\n<h2 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h2><ul>\n<li>vim 8.2</li>\n<li>gvim</li>\n<li>emacs 26.3</li>\n<li>spacemacs</li>\n<li>eclipse 3.8</li>\n<li>gtk2.0</li>\n<li>gtk3.0</li>\n<li>eclipse 4.15</li>\n</ul>\n<h2 id=\"Docker和主机之间的互操作性\"><a href=\"#Docker和主机之间的互操作性\" class=\"headerlink\" title=\"Docker和主机之间的互操作性\"></a>Docker和主机之间的互操作性</h2><ul>\n<li>目录共享</li>\n<li>剪贴板共享</li>\n<li>GUI程序运行在主机桌面</li>\n</ul>\n<h2 id=\"缺陷\"><a href=\"#缺陷\" class=\"headerlink\" title=\"缺陷\"></a>缺陷</h2><ul>\n<li>大型的GUI不能运行，依赖多，（不如直接安装虚拟机）</li>\n<li>gvim中文输入法，不能解决<ul>\n<li>emacs can input chinese , select input-method of use set-input-method</li>\n</ul>\n</li>\n</ul>\n"},{"title":"使用docker构建vim-golang开发环境","time":"2019-12-05 23:38","notebook":"blog","_content":"\n# 使用docker构建vim-golang开发环境\n\n## 原理\n\ndocker可以构建一个属于自己的开发环境容器，需要使用时，下载镜像，开箱即用，避免每次都搭建开发环境，浪费不少的时间。\n\n## 路线图Road Map\n\n- vim-golang 开发环境\n- spacemacs Org-mode  --放弃，鸡肋  --已实现，转变思维不一定非要运行在GUI模式下\n\n## 目的(抓住主要矛盾,围绕目标来展开工作)\n\n- 搭建基于Docker的开箱即用的，工作和开发环境  --已实现\n- 支持golang开发  --已实现\n- 支持TypeScript的开发  --已实现\n\n## 需要解决的问题\n\n- vim插件vim-airline，状态栏图标不显示  --优先级，低   --已解决\n- 重新构建devenv-vim镜像，使用dockerfile技术构建，减小体积，去除冗余  --优先级，低 [#D]\n    - 已进行尝试，但是体积不能没有减小，反而增大了\n\n## 如何使用\n\n- 家里-运行\n```bash\ndocker run -itd \\\n`# 注释请忽略，----------- 工作目录映射 -------------` \\\n-w /home/john `# 默认工作目录` \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /media/jiftle/work/work/git/coding_net/grocery/dailylog:/home/john/dailylog `# 日志仓库目录` \\\n-v /media/jiftle/work/work/git:/home/john/git `# git仓库目录` \\\n`# 注释请忽略，----------- 用户密钥 -------------` \\\n-v ~/.ssh:/home/john/.ssh:ro `# .ssh密钥` \\\n`# 注释请忽略，----------- 端口映射 -------------` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# web程序调试端口` \\\n`# 注释请忽略，----------- 解决时区问题 -------------` \\\n-v /etc/localtime:/etc/localtime:ro \\\njiftle/devenv-vim:V1.0.0.B.6_191208\n```\n- 公司运行\n```\ndocker run -itd \\\n`# 注释请忽略，----------- 设置名称 -------------` \\\n--name=\"devenv-vim\" \\\n`# 注释请忽略，----------- 工作目录映射 -------------` \\\n-w /home/john `# 默认工作目录` \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /usrlocal/git:/home/john/git `# git仓库目录` \\\n`# 注释请忽略，----------- 用户密钥 -------------` \\\n-v ~/.ssh:/root/.ssh:ro `# .ssh密钥` \\\n`# 注释请忽略，----------- 端口映射 -------------` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# 调试运行，端口` \\\n`# 注释请忽略，----------- 解决时区问题 -------------` \\\n-v /etc/localtime:/etc/localtime:ro \\\n`# 注释请忽略，----------- 自动重启 -------------` \\\n--restart=always \\\n`# 共享主机剪贴板，因为剪贴板是x11的一部分` \\\n-e DISPLAY \\\n-v /tmp/.X11-unix:/tmp/.X11-unix \\\njiftle/devenv-vim:v0.3\n```\n- 附加进入容器`docker exec -it devenv-vim bash`\n\n## 容器保存为镜像\n\n- 提交容器的快照作为镜像\n```bash\ndocker commit -m='vim,git,vim-plug,ctags,tig,lang=C.UTF-8' -a='jiftle' 5d jiftle/devenv-vim:V1.0.0.B.1_191206\n```\n\n## 内存限制报错处理\n\n- docker run报错\n```\nYour kernel does not support cgroup swap limit capabilities\n```\n- 原因，内核需要设置cgroup参数\n- 处理步骤\n    - 修改配置grub配置文件`/etc/default/grub`\n    - 修改`GRUB_CMDLINE_LINE`参数为`GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\"`\n    - 更新Grub，`sudo update-grub`\n    - 重启机器\n\n## 注意事项\n\n- 需要映射的目录\n  - /home 主目录\n  - dailylog 日志目录\n  - devrepo 开发仓库\n\n## 存在问题\n\n- vim状态栏的字体图标不显示，乱码  --已解决，字体问题NerdFont可以解决\n    - 家里电脑正常\n\n## 日志\n\n- 12.5 周四\n  - 日志\n    - 开始尝试制作vim镜像，成功\n    - 安装git\n    - 安装vim插件\n    - 配置golang的开发环境\n  - 遗留问题\n    - 关于映射目录下软连接不能用的问题，因为软连接的路径指向的是宿主机的，不是容器里的，所以软连接失效了\n    - 尝试解决\n      - 方法1：常用的开发目录，都用卷标的方式引用下  --已解决\n      - 方法2：目标目录搞成软连接，软连接再映射到容器里\n- 12.8 周日\n  - V1.0.0.B.6版本\n    - 开发环境\n      - vim\n      - golang env\n      - node env\n      - YCM\n    - 工具\n      - curl\n      - wget\n      - git\n      - tig\n      - tree\n      - htop\n      - cmake\n      - python3\n- 12.9 周一\n  - 尝试x11docker，能够运行图形化程序，但是不是我想要的   --放弃这种方式\n- 12.25 周二\n    - 制作v0.5版本镜像，目标如下\n        - 支持多种配色       --ok\n        - 支持代码片段       --ok\n        - 加入自己开发的vim插件  --ok\n        - 为镜像设置默认的git配置账号和Email，名字要中性的，不要体现自己的名字，保护隐私  -ok\n- 2019-12-25 Wed.\n    - [x] GitMdBlog模板修改修改，列表页，文章页超级链接，打开新页面\n- 2019-12-27 周五\n    - v0.7版本\n        - spacemacs，集成完毕，without gui, run on the term\n        - vim markdown outline\n        - vim-orgmode，能够显示*.org文件，自动折叠功能，语法高亮\n        - spacemacs，Org-Mode，自定义GTD时间管理法可以用  --最大心愿实现\n    - v0.8版本\n        - tmux\n- 2020-05-24 周日\n    - 集成了emacs\n    - eclipse\n    - vim\n\n","source":"_posts/002-使用docker构建vim-golang开发环境.md","raw":"---\ntitle: 使用docker构建vim-golang开发环境\ntime: 2019-12-05 23:38\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 使用docker构建vim-golang开发环境\n\n## 原理\n\ndocker可以构建一个属于自己的开发环境容器，需要使用时，下载镜像，开箱即用，避免每次都搭建开发环境，浪费不少的时间。\n\n## 路线图Road Map\n\n- vim-golang 开发环境\n- spacemacs Org-mode  --放弃，鸡肋  --已实现，转变思维不一定非要运行在GUI模式下\n\n## 目的(抓住主要矛盾,围绕目标来展开工作)\n\n- 搭建基于Docker的开箱即用的，工作和开发环境  --已实现\n- 支持golang开发  --已实现\n- 支持TypeScript的开发  --已实现\n\n## 需要解决的问题\n\n- vim插件vim-airline，状态栏图标不显示  --优先级，低   --已解决\n- 重新构建devenv-vim镜像，使用dockerfile技术构建，减小体积，去除冗余  --优先级，低 [#D]\n    - 已进行尝试，但是体积不能没有减小，反而增大了\n\n## 如何使用\n\n- 家里-运行\n```bash\ndocker run -itd \\\n`# 注释请忽略，----------- 工作目录映射 -------------` \\\n-w /home/john `# 默认工作目录` \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /media/jiftle/work/work/git/coding_net/grocery/dailylog:/home/john/dailylog `# 日志仓库目录` \\\n-v /media/jiftle/work/work/git:/home/john/git `# git仓库目录` \\\n`# 注释请忽略，----------- 用户密钥 -------------` \\\n-v ~/.ssh:/home/john/.ssh:ro `# .ssh密钥` \\\n`# 注释请忽略，----------- 端口映射 -------------` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# web程序调试端口` \\\n`# 注释请忽略，----------- 解决时区问题 -------------` \\\n-v /etc/localtime:/etc/localtime:ro \\\njiftle/devenv-vim:V1.0.0.B.6_191208\n```\n- 公司运行\n```\ndocker run -itd \\\n`# 注释请忽略，----------- 设置名称 -------------` \\\n--name=\"devenv-vim\" \\\n`# 注释请忽略，----------- 工作目录映射 -------------` \\\n-w /home/john `# 默认工作目录` \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /usrlocal/git:/home/john/git `# git仓库目录` \\\n`# 注释请忽略，----------- 用户密钥 -------------` \\\n-v ~/.ssh:/root/.ssh:ro `# .ssh密钥` \\\n`# 注释请忽略，----------- 端口映射 -------------` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# 调试运行，端口` \\\n`# 注释请忽略，----------- 解决时区问题 -------------` \\\n-v /etc/localtime:/etc/localtime:ro \\\n`# 注释请忽略，----------- 自动重启 -------------` \\\n--restart=always \\\n`# 共享主机剪贴板，因为剪贴板是x11的一部分` \\\n-e DISPLAY \\\n-v /tmp/.X11-unix:/tmp/.X11-unix \\\njiftle/devenv-vim:v0.3\n```\n- 附加进入容器`docker exec -it devenv-vim bash`\n\n## 容器保存为镜像\n\n- 提交容器的快照作为镜像\n```bash\ndocker commit -m='vim,git,vim-plug,ctags,tig,lang=C.UTF-8' -a='jiftle' 5d jiftle/devenv-vim:V1.0.0.B.1_191206\n```\n\n## 内存限制报错处理\n\n- docker run报错\n```\nYour kernel does not support cgroup swap limit capabilities\n```\n- 原因，内核需要设置cgroup参数\n- 处理步骤\n    - 修改配置grub配置文件`/etc/default/grub`\n    - 修改`GRUB_CMDLINE_LINE`参数为`GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\"`\n    - 更新Grub，`sudo update-grub`\n    - 重启机器\n\n## 注意事项\n\n- 需要映射的目录\n  - /home 主目录\n  - dailylog 日志目录\n  - devrepo 开发仓库\n\n## 存在问题\n\n- vim状态栏的字体图标不显示，乱码  --已解决，字体问题NerdFont可以解决\n    - 家里电脑正常\n\n## 日志\n\n- 12.5 周四\n  - 日志\n    - 开始尝试制作vim镜像，成功\n    - 安装git\n    - 安装vim插件\n    - 配置golang的开发环境\n  - 遗留问题\n    - 关于映射目录下软连接不能用的问题，因为软连接的路径指向的是宿主机的，不是容器里的，所以软连接失效了\n    - 尝试解决\n      - 方法1：常用的开发目录，都用卷标的方式引用下  --已解决\n      - 方法2：目标目录搞成软连接，软连接再映射到容器里\n- 12.8 周日\n  - V1.0.0.B.6版本\n    - 开发环境\n      - vim\n      - golang env\n      - node env\n      - YCM\n    - 工具\n      - curl\n      - wget\n      - git\n      - tig\n      - tree\n      - htop\n      - cmake\n      - python3\n- 12.9 周一\n  - 尝试x11docker，能够运行图形化程序，但是不是我想要的   --放弃这种方式\n- 12.25 周二\n    - 制作v0.5版本镜像，目标如下\n        - 支持多种配色       --ok\n        - 支持代码片段       --ok\n        - 加入自己开发的vim插件  --ok\n        - 为镜像设置默认的git配置账号和Email，名字要中性的，不要体现自己的名字，保护隐私  -ok\n- 2019-12-25 Wed.\n    - [x] GitMdBlog模板修改修改，列表页，文章页超级链接，打开新页面\n- 2019-12-27 周五\n    - v0.7版本\n        - spacemacs，集成完毕，without gui, run on the term\n        - vim markdown outline\n        - vim-orgmode，能够显示*.org文件，自动折叠功能，语法高亮\n        - spacemacs，Org-Mode，自定义GTD时间管理法可以用  --最大心愿实现\n    - v0.8版本\n        - tmux\n- 2020-05-24 周日\n    - 集成了emacs\n    - eclipse\n    - vim\n\n","slug":"002-使用docker构建vim-golang开发环境","published":1,"date":"2020-10-02T14:10:21.399Z","updated":"2020-10-02T14:10:21.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dk000038p7l4qgq05k2","content":"<h1 id=\"使用docker构建vim-golang开发环境\"><a href=\"#使用docker构建vim-golang开发环境\" class=\"headerlink\" title=\"使用docker构建vim-golang开发环境\"></a>使用docker构建vim-golang开发环境</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>docker可以构建一个属于自己的开发环境容器，需要使用时，下载镜像，开箱即用，避免每次都搭建开发环境，浪费不少的时间。</p>\n<h2 id=\"路线图Road-Map\"><a href=\"#路线图Road-Map\" class=\"headerlink\" title=\"路线图Road Map\"></a>路线图Road Map</h2><ul>\n<li>vim-golang 开发环境</li>\n<li>spacemacs Org-mode  –放弃，鸡肋  –已实现，转变思维不一定非要运行在GUI模式下</li>\n</ul>\n<h2 id=\"目的-抓住主要矛盾-围绕目标来展开工作\"><a href=\"#目的-抓住主要矛盾-围绕目标来展开工作\" class=\"headerlink\" title=\"目的(抓住主要矛盾,围绕目标来展开工作)\"></a>目的(抓住主要矛盾,围绕目标来展开工作)</h2><ul>\n<li>搭建基于Docker的开箱即用的，工作和开发环境  –已实现</li>\n<li>支持golang开发  –已实现</li>\n<li>支持TypeScript的开发  –已实现</li>\n</ul>\n<h2 id=\"需要解决的问题\"><a href=\"#需要解决的问题\" class=\"headerlink\" title=\"需要解决的问题\"></a>需要解决的问题</h2><ul>\n<li>vim插件vim-airline，状态栏图标不显示  –优先级，低   –已解决</li>\n<li>重新构建devenv-vim镜像，使用dockerfile技术构建，减小体积，去除冗余  –优先级，低 [#D]<ul>\n<li>已进行尝试，但是体积不能没有减小，反而增大了</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><ul>\n<li>家里-运行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 工作目录映射 -------------` \\</span></span><br><span class=\"line\">-w /home/john `<span class=\"comment\"># 默认工作目录` \\</span></span><br><span class=\"line\">-v ~:/home/john `<span class=\"comment\"># 默认工作目录，映射` \\</span></span><br><span class=\"line\">-v /media/jiftle/work/work/git/coding_net/grocery/dailylog:/home/john/dailylog `<span class=\"comment\"># 日志仓库目录` \\</span></span><br><span class=\"line\">-v /media/jiftle/work/work/git:/home/john/git `<span class=\"comment\"># git仓库目录` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 用户密钥 -------------` \\</span></span><br><span class=\"line\">-v ~/.ssh:/home/john/.ssh:ro `<span class=\"comment\"># .ssh密钥` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 端口映射 -------------` \\</span></span><br><span class=\"line\">-p 8001:8001 `<span class=\"comment\"># 日志仓库，预览服务` \\</span></span><br><span class=\"line\">-p 8080:8080 `<span class=\"comment\"># web程序调试端口` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 解决时区问题 -------------` \\</span></span><br><span class=\"line\">-v /etc/localtime:/etc/localtime:ro \\</span><br><span class=\"line\">jiftle/devenv-vim:V1.0.0.B.6_191208</span><br></pre></td></tr></table></figure></li>\n<li>公司运行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 设置名称 -------------&#96; \\</span><br><span class=\"line\">--name&#x3D;&quot;devenv-vim&quot; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 工作目录映射 -------------&#96; \\</span><br><span class=\"line\">-w &#x2F;home&#x2F;john &#96;# 默认工作目录&#96; \\</span><br><span class=\"line\">-v ~:&#x2F;home&#x2F;john &#96;# 默认工作目录，映射&#96; \\</span><br><span class=\"line\">-v &#x2F;usrlocal&#x2F;git:&#x2F;home&#x2F;john&#x2F;git &#96;# git仓库目录&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 用户密钥 -------------&#96; \\</span><br><span class=\"line\">-v ~&#x2F;.ssh:&#x2F;root&#x2F;.ssh:ro &#96;# .ssh密钥&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 端口映射 -------------&#96; \\</span><br><span class=\"line\">-p 8001:8001 &#96;# 日志仓库，预览服务&#96; \\</span><br><span class=\"line\">-p 8080:8080 &#96;# 调试运行，端口&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 解决时区问题 -------------&#96; \\</span><br><span class=\"line\">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 自动重启 -------------&#96; \\</span><br><span class=\"line\">--restart&#x3D;always \\</span><br><span class=\"line\">&#96;# 共享主机剪贴板，因为剪贴板是x11的一部分&#96; \\</span><br><span class=\"line\">-e DISPLAY \\</span><br><span class=\"line\">-v &#x2F;tmp&#x2F;.X11-unix:&#x2F;tmp&#x2F;.X11-unix \\</span><br><span class=\"line\">jiftle&#x2F;devenv-vim:v0.3</span><br></pre></td></tr></table></figure></li>\n<li>附加进入容器<code>docker exec -it devenv-vim bash</code></li>\n</ul>\n<h2 id=\"容器保存为镜像\"><a href=\"#容器保存为镜像\" class=\"headerlink\" title=\"容器保存为镜像\"></a>容器保存为镜像</h2><ul>\n<li>提交容器的快照作为镜像<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit -m=<span class=\"string\">&#x27;vim,git,vim-plug,ctags,tig,lang=C.UTF-8&#x27;</span> -a=<span class=\"string\">&#x27;jiftle&#x27;</span> 5d jiftle/devenv-vim:V1.0.0.B.1_191206</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"内存限制报错处理\"><a href=\"#内存限制报错处理\" class=\"headerlink\" title=\"内存限制报错处理\"></a>内存限制报错处理</h2><ul>\n<li>docker run报错<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your kernel does not support cgroup swap limit capabilities</span><br></pre></td></tr></table></figure></li>\n<li>原因，内核需要设置cgroup参数</li>\n<li>处理步骤<ul>\n<li>修改配置grub配置文件<code>/etc/default/grub</code></li>\n<li>修改<code>GRUB_CMDLINE_LINE</code>参数为<code>GRUB_CMDLINE_LINUX=&quot;cgroup_enable=memory swapaccount=1&quot;</code></li>\n<li>更新Grub，<code>sudo update-grub</code></li>\n<li>重启机器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li>需要映射的目录<ul>\n<li>/home 主目录</li>\n<li>dailylog 日志目录</li>\n<li>devrepo 开发仓库</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h2><ul>\n<li>vim状态栏的字体图标不显示，乱码  –已解决，字体问题NerdFont可以解决<ul>\n<li>家里电脑正常</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h2><ul>\n<li>12.5 周四<ul>\n<li>日志<ul>\n<li>开始尝试制作vim镜像，成功</li>\n<li>安装git</li>\n<li>安装vim插件</li>\n<li>配置golang的开发环境</li>\n</ul>\n</li>\n<li>遗留问题<ul>\n<li>关于映射目录下软连接不能用的问题，因为软连接的路径指向的是宿主机的，不是容器里的，所以软连接失效了</li>\n<li>尝试解决<ul>\n<li>方法1：常用的开发目录，都用卷标的方式引用下  –已解决</li>\n<li>方法2：目标目录搞成软连接，软连接再映射到容器里</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>12.8 周日<ul>\n<li>V1.0.0.B.6版本<ul>\n<li>开发环境<ul>\n<li>vim</li>\n<li>golang env</li>\n<li>node env</li>\n<li>YCM</li>\n</ul>\n</li>\n<li>工具<ul>\n<li>curl</li>\n<li>wget</li>\n<li>git</li>\n<li>tig</li>\n<li>tree</li>\n<li>htop</li>\n<li>cmake</li>\n<li>python3</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>12.9 周一<ul>\n<li>尝试x11docker，能够运行图形化程序，但是不是我想要的   –放弃这种方式</li>\n</ul>\n</li>\n<li>12.25 周二<ul>\n<li>制作v0.5版本镜像，目标如下<ul>\n<li>支持多种配色       –ok</li>\n<li>支持代码片段       –ok</li>\n<li>加入自己开发的vim插件  –ok</li>\n<li>为镜像设置默认的git配置账号和Email，名字要中性的，不要体现自己的名字，保护隐私  -ok</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2019-12-25 Wed.<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> GitMdBlog模板修改修改，列表页，文章页超级链接，打开新页面</li>\n</ul>\n</li>\n<li>2019-12-27 周五<ul>\n<li>v0.7版本<ul>\n<li>spacemacs，集成完毕，without gui, run on the term</li>\n<li>vim markdown outline</li>\n<li>vim-orgmode，能够显示*.org文件，自动折叠功能，语法高亮</li>\n<li>spacemacs，Org-Mode，自定义GTD时间管理法可以用  –最大心愿实现</li>\n</ul>\n</li>\n<li>v0.8版本<ul>\n<li>tmux</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2020-05-24 周日<ul>\n<li>集成了emacs</li>\n<li>eclipse</li>\n<li>vim</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用docker构建vim-golang开发环境\"><a href=\"#使用docker构建vim-golang开发环境\" class=\"headerlink\" title=\"使用docker构建vim-golang开发环境\"></a>使用docker构建vim-golang开发环境</h1><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>docker可以构建一个属于自己的开发环境容器，需要使用时，下载镜像，开箱即用，避免每次都搭建开发环境，浪费不少的时间。</p>\n<h2 id=\"路线图Road-Map\"><a href=\"#路线图Road-Map\" class=\"headerlink\" title=\"路线图Road Map\"></a>路线图Road Map</h2><ul>\n<li>vim-golang 开发环境</li>\n<li>spacemacs Org-mode  –放弃，鸡肋  –已实现，转变思维不一定非要运行在GUI模式下</li>\n</ul>\n<h2 id=\"目的-抓住主要矛盾-围绕目标来展开工作\"><a href=\"#目的-抓住主要矛盾-围绕目标来展开工作\" class=\"headerlink\" title=\"目的(抓住主要矛盾,围绕目标来展开工作)\"></a>目的(抓住主要矛盾,围绕目标来展开工作)</h2><ul>\n<li>搭建基于Docker的开箱即用的，工作和开发环境  –已实现</li>\n<li>支持golang开发  –已实现</li>\n<li>支持TypeScript的开发  –已实现</li>\n</ul>\n<h2 id=\"需要解决的问题\"><a href=\"#需要解决的问题\" class=\"headerlink\" title=\"需要解决的问题\"></a>需要解决的问题</h2><ul>\n<li>vim插件vim-airline，状态栏图标不显示  –优先级，低   –已解决</li>\n<li>重新构建devenv-vim镜像，使用dockerfile技术构建，减小体积，去除冗余  –优先级，低 [#D]<ul>\n<li>已进行尝试，但是体积不能没有减小，反而增大了</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><ul>\n<li>家里-运行<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 工作目录映射 -------------` \\</span></span><br><span class=\"line\">-w /home/john `<span class=\"comment\"># 默认工作目录` \\</span></span><br><span class=\"line\">-v ~:/home/john `<span class=\"comment\"># 默认工作目录，映射` \\</span></span><br><span class=\"line\">-v /media/jiftle/work/work/git/coding_net/grocery/dailylog:/home/john/dailylog `<span class=\"comment\"># 日志仓库目录` \\</span></span><br><span class=\"line\">-v /media/jiftle/work/work/git:/home/john/git `<span class=\"comment\"># git仓库目录` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 用户密钥 -------------` \\</span></span><br><span class=\"line\">-v ~/.ssh:/home/john/.ssh:ro `<span class=\"comment\"># .ssh密钥` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 端口映射 -------------` \\</span></span><br><span class=\"line\">-p 8001:8001 `<span class=\"comment\"># 日志仓库，预览服务` \\</span></span><br><span class=\"line\">-p 8080:8080 `<span class=\"comment\"># web程序调试端口` \\</span></span><br><span class=\"line\">`<span class=\"comment\"># 注释请忽略，----------- 解决时区问题 -------------` \\</span></span><br><span class=\"line\">-v /etc/localtime:/etc/localtime:ro \\</span><br><span class=\"line\">jiftle/devenv-vim:V1.0.0.B.6_191208</span><br></pre></td></tr></table></figure></li>\n<li>公司运行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 设置名称 -------------&#96; \\</span><br><span class=\"line\">--name&#x3D;&quot;devenv-vim&quot; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 工作目录映射 -------------&#96; \\</span><br><span class=\"line\">-w &#x2F;home&#x2F;john &#96;# 默认工作目录&#96; \\</span><br><span class=\"line\">-v ~:&#x2F;home&#x2F;john &#96;# 默认工作目录，映射&#96; \\</span><br><span class=\"line\">-v &#x2F;usrlocal&#x2F;git:&#x2F;home&#x2F;john&#x2F;git &#96;# git仓库目录&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 用户密钥 -------------&#96; \\</span><br><span class=\"line\">-v ~&#x2F;.ssh:&#x2F;root&#x2F;.ssh:ro &#96;# .ssh密钥&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 端口映射 -------------&#96; \\</span><br><span class=\"line\">-p 8001:8001 &#96;# 日志仓库，预览服务&#96; \\</span><br><span class=\"line\">-p 8080:8080 &#96;# 调试运行，端口&#96; \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 解决时区问题 -------------&#96; \\</span><br><span class=\"line\">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro \\</span><br><span class=\"line\">&#96;# 注释请忽略，----------- 自动重启 -------------&#96; \\</span><br><span class=\"line\">--restart&#x3D;always \\</span><br><span class=\"line\">&#96;# 共享主机剪贴板，因为剪贴板是x11的一部分&#96; \\</span><br><span class=\"line\">-e DISPLAY \\</span><br><span class=\"line\">-v &#x2F;tmp&#x2F;.X11-unix:&#x2F;tmp&#x2F;.X11-unix \\</span><br><span class=\"line\">jiftle&#x2F;devenv-vim:v0.3</span><br></pre></td></tr></table></figure></li>\n<li>附加进入容器<code>docker exec -it devenv-vim bash</code></li>\n</ul>\n<h2 id=\"容器保存为镜像\"><a href=\"#容器保存为镜像\" class=\"headerlink\" title=\"容器保存为镜像\"></a>容器保存为镜像</h2><ul>\n<li>提交容器的快照作为镜像<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit -m=<span class=\"string\">&#x27;vim,git,vim-plug,ctags,tig,lang=C.UTF-8&#x27;</span> -a=<span class=\"string\">&#x27;jiftle&#x27;</span> 5d jiftle/devenv-vim:V1.0.0.B.1_191206</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"内存限制报错处理\"><a href=\"#内存限制报错处理\" class=\"headerlink\" title=\"内存限制报错处理\"></a>内存限制报错处理</h2><ul>\n<li>docker run报错<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your kernel does not support cgroup swap limit capabilities</span><br></pre></td></tr></table></figure></li>\n<li>原因，内核需要设置cgroup参数</li>\n<li>处理步骤<ul>\n<li>修改配置grub配置文件<code>/etc/default/grub</code></li>\n<li>修改<code>GRUB_CMDLINE_LINE</code>参数为<code>GRUB_CMDLINE_LINUX=&quot;cgroup_enable=memory swapaccount=1&quot;</code></li>\n<li>更新Grub，<code>sudo update-grub</code></li>\n<li>重启机器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li>需要映射的目录<ul>\n<li>/home 主目录</li>\n<li>dailylog 日志目录</li>\n<li>devrepo 开发仓库</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h2><ul>\n<li>vim状态栏的字体图标不显示，乱码  –已解决，字体问题NerdFont可以解决<ul>\n<li>家里电脑正常</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h2><ul>\n<li>12.5 周四<ul>\n<li>日志<ul>\n<li>开始尝试制作vim镜像，成功</li>\n<li>安装git</li>\n<li>安装vim插件</li>\n<li>配置golang的开发环境</li>\n</ul>\n</li>\n<li>遗留问题<ul>\n<li>关于映射目录下软连接不能用的问题，因为软连接的路径指向的是宿主机的，不是容器里的，所以软连接失效了</li>\n<li>尝试解决<ul>\n<li>方法1：常用的开发目录，都用卷标的方式引用下  –已解决</li>\n<li>方法2：目标目录搞成软连接，软连接再映射到容器里</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>12.8 周日<ul>\n<li>V1.0.0.B.6版本<ul>\n<li>开发环境<ul>\n<li>vim</li>\n<li>golang env</li>\n<li>node env</li>\n<li>YCM</li>\n</ul>\n</li>\n<li>工具<ul>\n<li>curl</li>\n<li>wget</li>\n<li>git</li>\n<li>tig</li>\n<li>tree</li>\n<li>htop</li>\n<li>cmake</li>\n<li>python3</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>12.9 周一<ul>\n<li>尝试x11docker，能够运行图形化程序，但是不是我想要的   –放弃这种方式</li>\n</ul>\n</li>\n<li>12.25 周二<ul>\n<li>制作v0.5版本镜像，目标如下<ul>\n<li>支持多种配色       –ok</li>\n<li>支持代码片段       –ok</li>\n<li>加入自己开发的vim插件  –ok</li>\n<li>为镜像设置默认的git配置账号和Email，名字要中性的，不要体现自己的名字，保护隐私  -ok</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2019-12-25 Wed.<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> GitMdBlog模板修改修改，列表页，文章页超级链接，打开新页面</li>\n</ul>\n</li>\n<li>2019-12-27 周五<ul>\n<li>v0.7版本<ul>\n<li>spacemacs，集成完毕，without gui, run on the term</li>\n<li>vim markdown outline</li>\n<li>vim-orgmode，能够显示*.org文件，自动折叠功能，语法高亮</li>\n<li>spacemacs，Org-Mode，自定义GTD时间管理法可以用  –最大心愿实现</li>\n</ul>\n</li>\n<li>v0.8版本<ul>\n<li>tmux</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2020-05-24 周日<ul>\n<li>集成了emacs</li>\n<li>eclipse</li>\n<li>vim</li>\n</ul>\n</li>\n</ul>\n"},{"title":"003-Docker运行图形界面程序.md","time":"2016-12-02 17:38","notebook":"blog","_content":"\n# 003-Docker运行图形界面程序.md\n\n## 原理简介\n\n## 宿主机配置\n\n- 宿主机系统中安装x11服务\n```bash\nsudo apt-get install x11-xserver-utils\n```\n- 启动容器前执行`xhost +`\n\n## 容器启动配置\n\n- 容器运行时加入参数，uid和gid两个参数不需要\n```bash\n-v /tmp/.X11-unix:/tmp/.X11-unix `# gui程序需要`\\\n-e DISPLAY=$DISPLAY \\\n```\n- 完整指令\n```\ndocker run -itd \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /usrlocal/git:/home/john/git `# git仓库目录` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# web程序调试端口` \\\n-w /home/john `# 默认工作目录` \\\n-v /etc/localtime:/etc/localtime:ro `# 当地时间` \\\n-v /tmp/.X11-unix:/tmp/.X11-unix `# gui程序需要`\\\n-e DISPLAY=$DISPLAY \\\n--name devenv-vim `# 容器名字` \\\njiftle/devenv-vim:V1.0.0.B.6_191208 \\\nbash\n```\n\n## 测试\n\n- 安装GUI小工具`sudo apt-get install xarclock`\n- 运行工具`xarclock`\n- 配置成功，会显示个桌面时钟\n\n## 高阶，在Docker中运行Emacs\n\n- 经过测试，网上的方法，会引起deepin桌面系统的崩溃，不建议用这种方式\n- x11docker 验证了debian下有bug，导致x11 server崩溃\n- 调整方向，使用别人做好的spacemacs Docker\n- 网上的Docker解决了dbus的问题，但是中文输入法不支持的问题，仍然存在\n- 可能是这句`-v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket `\n```bash\ndocker run -ti --rm -v $('pwd'):/mnt/workspace \\\n -v /etc/localtime:/etc/localtime:ro \\\n -v ~/.ssh/id_rsa:${HOME}/.ssh/id_rsa:ro \\\n -v ~/.gnupg:${HOME}/.gnupg \\\n -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \\  \n -v /tmp/.X11-unix:/tmp/.X11-unix \\\n -v /etc/machine-id:/etc/machine-id:ro \\\n -e DISPLAY=$DISPLAY \\\n -e TZ=UA \\\n --name spacemacs jare/spacemacs\n ```\n- 关于输入法的问题，EmcasChina有解答pyim，明天安装pyim试试\n- [https://github.com/tumashu/pyim](https://github.com/tumashu/pyim)\n","source":"_posts/003-Docker运行图形界面程序.md","raw":"---\ntitle: 003-Docker运行图形界面程序.md\ntime: 2016-12-02 17:38\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 003-Docker运行图形界面程序.md\n\n## 原理简介\n\n## 宿主机配置\n\n- 宿主机系统中安装x11服务\n```bash\nsudo apt-get install x11-xserver-utils\n```\n- 启动容器前执行`xhost +`\n\n## 容器启动配置\n\n- 容器运行时加入参数，uid和gid两个参数不需要\n```bash\n-v /tmp/.X11-unix:/tmp/.X11-unix `# gui程序需要`\\\n-e DISPLAY=$DISPLAY \\\n```\n- 完整指令\n```\ndocker run -itd \\\n-v ~:/home/john `# 默认工作目录，映射` \\\n-v /usrlocal/git:/home/john/git `# git仓库目录` \\\n-p 8001:8001 `# 日志仓库，预览服务` \\\n-p 8080:8080 `# web程序调试端口` \\\n-w /home/john `# 默认工作目录` \\\n-v /etc/localtime:/etc/localtime:ro `# 当地时间` \\\n-v /tmp/.X11-unix:/tmp/.X11-unix `# gui程序需要`\\\n-e DISPLAY=$DISPLAY \\\n--name devenv-vim `# 容器名字` \\\njiftle/devenv-vim:V1.0.0.B.6_191208 \\\nbash\n```\n\n## 测试\n\n- 安装GUI小工具`sudo apt-get install xarclock`\n- 运行工具`xarclock`\n- 配置成功，会显示个桌面时钟\n\n## 高阶，在Docker中运行Emacs\n\n- 经过测试，网上的方法，会引起deepin桌面系统的崩溃，不建议用这种方式\n- x11docker 验证了debian下有bug，导致x11 server崩溃\n- 调整方向，使用别人做好的spacemacs Docker\n- 网上的Docker解决了dbus的问题，但是中文输入法不支持的问题，仍然存在\n- 可能是这句`-v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket `\n```bash\ndocker run -ti --rm -v $('pwd'):/mnt/workspace \\\n -v /etc/localtime:/etc/localtime:ro \\\n -v ~/.ssh/id_rsa:${HOME}/.ssh/id_rsa:ro \\\n -v ~/.gnupg:${HOME}/.gnupg \\\n -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \\  \n -v /tmp/.X11-unix:/tmp/.X11-unix \\\n -v /etc/machine-id:/etc/machine-id:ro \\\n -e DISPLAY=$DISPLAY \\\n -e TZ=UA \\\n --name spacemacs jare/spacemacs\n ```\n- 关于输入法的问题，EmcasChina有解答pyim，明天安装pyim试试\n- [https://github.com/tumashu/pyim](https://github.com/tumashu/pyim)\n","slug":"003-Docker运行图形界面程序","published":1,"date":"2020-10-02T14:10:21.425Z","updated":"2020-10-02T14:10:21.431Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dk100048p7l35k94oxs","content":"<h1 id=\"003-Docker运行图形界面程序-md\"><a href=\"#003-Docker运行图形界面程序-md\" class=\"headerlink\" title=\"003-Docker运行图形界面程序.md\"></a>003-Docker运行图形界面程序.md</h1><h2 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h2><h2 id=\"宿主机配置\"><a href=\"#宿主机配置\" class=\"headerlink\" title=\"宿主机配置\"></a>宿主机配置</h2><ul>\n<li>宿主机系统中安装x11服务<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install x11-xserver-utils</span><br></pre></td></tr></table></figure></li>\n<li>启动容器前执行<code>xhost +</code></li>\n</ul>\n<h2 id=\"容器启动配置\"><a href=\"#容器启动配置\" class=\"headerlink\" title=\"容器启动配置\"></a>容器启动配置</h2><ul>\n<li>容器运行时加入参数，uid和gid两个参数不需要<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-v /tmp/.X11-unix:/tmp/.X11-unix `<span class=\"comment\"># gui程序需要`\\</span></span><br><span class=\"line\">-e DISPLAY=<span class=\"variable\">$DISPLAY</span> \\</span><br></pre></td></tr></table></figure></li>\n<li>完整指令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">-v ~:&#x2F;home&#x2F;john &#96;# 默认工作目录，映射&#96; \\</span><br><span class=\"line\">-v &#x2F;usrlocal&#x2F;git:&#x2F;home&#x2F;john&#x2F;git &#96;# git仓库目录&#96; \\</span><br><span class=\"line\">-p 8001:8001 &#96;# 日志仓库，预览服务&#96; \\</span><br><span class=\"line\">-p 8080:8080 &#96;# web程序调试端口&#96; \\</span><br><span class=\"line\">-w &#x2F;home&#x2F;john &#96;# 默认工作目录&#96; \\</span><br><span class=\"line\">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro &#96;# 当地时间&#96; \\</span><br><span class=\"line\">-v &#x2F;tmp&#x2F;.X11-unix:&#x2F;tmp&#x2F;.X11-unix &#96;# gui程序需要&#96;\\</span><br><span class=\"line\">-e DISPLAY&#x3D;$DISPLAY \\</span><br><span class=\"line\">--name devenv-vim &#96;# 容器名字&#96; \\</span><br><span class=\"line\">jiftle&#x2F;devenv-vim:V1.0.0.B.6_191208 \\</span><br><span class=\"line\">bash</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><ul>\n<li>安装GUI小工具<code>sudo apt-get install xarclock</code></li>\n<li>运行工具<code>xarclock</code></li>\n<li>配置成功，会显示个桌面时钟</li>\n</ul>\n<h2 id=\"高阶，在Docker中运行Emacs\"><a href=\"#高阶，在Docker中运行Emacs\" class=\"headerlink\" title=\"高阶，在Docker中运行Emacs\"></a>高阶，在Docker中运行Emacs</h2><ul>\n<li>经过测试，网上的方法，会引起deepin桌面系统的崩溃，不建议用这种方式</li>\n<li>x11docker 验证了debian下有bug，导致x11 server崩溃</li>\n<li>调整方向，使用别人做好的spacemacs Docker</li>\n<li>网上的Docker解决了dbus的问题，但是中文输入法不支持的问题，仍然存在</li>\n<li>可能是这句<code>-v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket </code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -ti --rm -v $(<span class=\"string\">&#x27;pwd&#x27;</span>):/mnt/workspace \\</span><br><span class=\"line\"> -v /etc/localtime:/etc/localtime:ro \\</span><br><span class=\"line\"> -v ~/.ssh/id_rsa:<span class=\"variable\">$&#123;HOME&#125;</span>/.ssh/id_rsa:ro \\</span><br><span class=\"line\"> -v ~/.gnupg:<span class=\"variable\">$&#123;HOME&#125;</span>/.gnupg \\</span><br><span class=\"line\"> -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \\  </span><br><span class=\"line\"> -v /tmp/.X11-unix:/tmp/.X11-unix \\</span><br><span class=\"line\"> -v /etc/machine-id:/etc/machine-id:ro \\</span><br><span class=\"line\"> -e DISPLAY=<span class=\"variable\">$DISPLAY</span> \\</span><br><span class=\"line\"> -e TZ=UA \\</span><br><span class=\"line\"> --name spacemacs jare/spacemacs</span><br></pre></td></tr></table></figure></li>\n<li>关于输入法的问题，EmcasChina有解答pyim，明天安装pyim试试</li>\n<li><a href=\"https://github.com/tumashu/pyim\">https://github.com/tumashu/pyim</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"003-Docker运行图形界面程序-md\"><a href=\"#003-Docker运行图形界面程序-md\" class=\"headerlink\" title=\"003-Docker运行图形界面程序.md\"></a>003-Docker运行图形界面程序.md</h1><h2 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h2><h2 id=\"宿主机配置\"><a href=\"#宿主机配置\" class=\"headerlink\" title=\"宿主机配置\"></a>宿主机配置</h2><ul>\n<li>宿主机系统中安装x11服务<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install x11-xserver-utils</span><br></pre></td></tr></table></figure></li>\n<li>启动容器前执行<code>xhost +</code></li>\n</ul>\n<h2 id=\"容器启动配置\"><a href=\"#容器启动配置\" class=\"headerlink\" title=\"容器启动配置\"></a>容器启动配置</h2><ul>\n<li>容器运行时加入参数，uid和gid两个参数不需要<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-v /tmp/.X11-unix:/tmp/.X11-unix `<span class=\"comment\"># gui程序需要`\\</span></span><br><span class=\"line\">-e DISPLAY=<span class=\"variable\">$DISPLAY</span> \\</span><br></pre></td></tr></table></figure></li>\n<li>完整指令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">-v ~:&#x2F;home&#x2F;john &#96;# 默认工作目录，映射&#96; \\</span><br><span class=\"line\">-v &#x2F;usrlocal&#x2F;git:&#x2F;home&#x2F;john&#x2F;git &#96;# git仓库目录&#96; \\</span><br><span class=\"line\">-p 8001:8001 &#96;# 日志仓库，预览服务&#96; \\</span><br><span class=\"line\">-p 8080:8080 &#96;# web程序调试端口&#96; \\</span><br><span class=\"line\">-w &#x2F;home&#x2F;john &#96;# 默认工作目录&#96; \\</span><br><span class=\"line\">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro &#96;# 当地时间&#96; \\</span><br><span class=\"line\">-v &#x2F;tmp&#x2F;.X11-unix:&#x2F;tmp&#x2F;.X11-unix &#96;# gui程序需要&#96;\\</span><br><span class=\"line\">-e DISPLAY&#x3D;$DISPLAY \\</span><br><span class=\"line\">--name devenv-vim &#96;# 容器名字&#96; \\</span><br><span class=\"line\">jiftle&#x2F;devenv-vim:V1.0.0.B.6_191208 \\</span><br><span class=\"line\">bash</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><ul>\n<li>安装GUI小工具<code>sudo apt-get install xarclock</code></li>\n<li>运行工具<code>xarclock</code></li>\n<li>配置成功，会显示个桌面时钟</li>\n</ul>\n<h2 id=\"高阶，在Docker中运行Emacs\"><a href=\"#高阶，在Docker中运行Emacs\" class=\"headerlink\" title=\"高阶，在Docker中运行Emacs\"></a>高阶，在Docker中运行Emacs</h2><ul>\n<li>经过测试，网上的方法，会引起deepin桌面系统的崩溃，不建议用这种方式</li>\n<li>x11docker 验证了debian下有bug，导致x11 server崩溃</li>\n<li>调整方向，使用别人做好的spacemacs Docker</li>\n<li>网上的Docker解决了dbus的问题，但是中文输入法不支持的问题，仍然存在</li>\n<li>可能是这句<code>-v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket </code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -ti --rm -v $(<span class=\"string\">&#x27;pwd&#x27;</span>):/mnt/workspace \\</span><br><span class=\"line\"> -v /etc/localtime:/etc/localtime:ro \\</span><br><span class=\"line\"> -v ~/.ssh/id_rsa:<span class=\"variable\">$&#123;HOME&#125;</span>/.ssh/id_rsa:ro \\</span><br><span class=\"line\"> -v ~/.gnupg:<span class=\"variable\">$&#123;HOME&#125;</span>/.gnupg \\</span><br><span class=\"line\"> -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \\  </span><br><span class=\"line\"> -v /tmp/.X11-unix:/tmp/.X11-unix \\</span><br><span class=\"line\"> -v /etc/machine-id:/etc/machine-id:ro \\</span><br><span class=\"line\"> -e DISPLAY=<span class=\"variable\">$DISPLAY</span> \\</span><br><span class=\"line\"> -e TZ=UA \\</span><br><span class=\"line\"> --name spacemacs jare/spacemacs</span><br></pre></td></tr></table></figure></li>\n<li>关于输入法的问题，EmcasChina有解答pyim，明天安装pyim试试</li>\n<li><a href=\"https://github.com/tumashu/pyim\">https://github.com/tumashu/pyim</a></li>\n</ul>\n"},{"title":"构建基于Git的知识管理体系","time":"2016-12-11 10:30","notebook":"blog","_content":"\n# 构建基于Git的知识管理体系\n\n## 简介\n\n基于“让你成长为一棵树而不是一地草”的理念，搭建自己的知识金字塔，构建持续发展、增值的技能树。\n\n## 最终目标\n\n### 主阵地\n\n- GitMdNote 个人日志，Git仓库，个人知识，收集归纳的主战场\n    - GitMdBlog 日志仓库预览工具，方便查看，友好界面，专注(golang)\n\n### 第二大脑\n\n- EverNote 云端存储同步工具，可以用来归档，整理，多终端查看\n\n### 辅助工具\n\n- EverSynClient 印象笔记同步工具，同步笔记仓库到印象笔记(TypeScript)\n- GitHubPage 定期发布文章，输出成功到Page，打造个人名片\n\n## 路线图 RoadMap\n\n- v1.0 (初步构建起，一个小型的，自发展的个人知识管理体系)\n    - GitMdNote   --已实现\n    - EverNote    --已实现\n    - GitMdBlog   --已实现\n    - EverSynClient  --开发中\n    - GitHubPage     --未开始\n\n## 遐想\n\n- 拥有自己的知识体系后，就可以定时从思维宝库里，提取出精华，知识变现\n- 拥有知识，并能够将接收到的信息，转化为知识，并将其变现为财富，才是真的学有所成\n- 当前网络中，现实生活中，存在非常多的傻逼，脑袋不清楚，容易带节奏，还他妈的纠缠不清，活该一辈子搬砖\n\n","source":"_posts/004-构建基于Git的知识管理体系.md","raw":"---\ntitle: 构建基于Git的知识管理体系\ntime: 2016-12-11 10:30\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 构建基于Git的知识管理体系\n\n## 简介\n\n基于“让你成长为一棵树而不是一地草”的理念，搭建自己的知识金字塔，构建持续发展、增值的技能树。\n\n## 最终目标\n\n### 主阵地\n\n- GitMdNote 个人日志，Git仓库，个人知识，收集归纳的主战场\n    - GitMdBlog 日志仓库预览工具，方便查看，友好界面，专注(golang)\n\n### 第二大脑\n\n- EverNote 云端存储同步工具，可以用来归档，整理，多终端查看\n\n### 辅助工具\n\n- EverSynClient 印象笔记同步工具，同步笔记仓库到印象笔记(TypeScript)\n- GitHubPage 定期发布文章，输出成功到Page，打造个人名片\n\n## 路线图 RoadMap\n\n- v1.0 (初步构建起，一个小型的，自发展的个人知识管理体系)\n    - GitMdNote   --已实现\n    - EverNote    --已实现\n    - GitMdBlog   --已实现\n    - EverSynClient  --开发中\n    - GitHubPage     --未开始\n\n## 遐想\n\n- 拥有自己的知识体系后，就可以定时从思维宝库里，提取出精华，知识变现\n- 拥有知识，并能够将接收到的信息，转化为知识，并将其变现为财富，才是真的学有所成\n- 当前网络中，现实生活中，存在非常多的傻逼，脑袋不清楚，容易带节奏，还他妈的纠缠不清，活该一辈子搬砖\n\n","slug":"004-构建基于Git的知识管理体系","published":1,"date":"2020-10-02T14:10:21.454Z","updated":"2020-10-02T14:10:21.461Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dk300058p7lc7rbccw0","content":"<h1 id=\"构建基于Git的知识管理体系\"><a href=\"#构建基于Git的知识管理体系\" class=\"headerlink\" title=\"构建基于Git的知识管理体系\"></a>构建基于Git的知识管理体系</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>基于“让你成长为一棵树而不是一地草”的理念，搭建自己的知识金字塔，构建持续发展、增值的技能树。</p>\n<h2 id=\"最终目标\"><a href=\"#最终目标\" class=\"headerlink\" title=\"最终目标\"></a>最终目标</h2><h3 id=\"主阵地\"><a href=\"#主阵地\" class=\"headerlink\" title=\"主阵地\"></a>主阵地</h3><ul>\n<li>GitMdNote 个人日志，Git仓库，个人知识，收集归纳的主战场<ul>\n<li>GitMdBlog 日志仓库预览工具，方便查看，友好界面，专注(golang)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二大脑\"><a href=\"#第二大脑\" class=\"headerlink\" title=\"第二大脑\"></a>第二大脑</h3><ul>\n<li>EverNote 云端存储同步工具，可以用来归档，整理，多终端查看</li>\n</ul>\n<h3 id=\"辅助工具\"><a href=\"#辅助工具\" class=\"headerlink\" title=\"辅助工具\"></a>辅助工具</h3><ul>\n<li>EverSynClient 印象笔记同步工具，同步笔记仓库到印象笔记(TypeScript)</li>\n<li>GitHubPage 定期发布文章，输出成功到Page，打造个人名片</li>\n</ul>\n<h2 id=\"路线图-RoadMap\"><a href=\"#路线图-RoadMap\" class=\"headerlink\" title=\"路线图 RoadMap\"></a>路线图 RoadMap</h2><ul>\n<li>v1.0 (初步构建起，一个小型的，自发展的个人知识管理体系)<ul>\n<li>GitMdNote   –已实现</li>\n<li>EverNote    –已实现</li>\n<li>GitMdBlog   –已实现</li>\n<li>EverSynClient  –开发中</li>\n<li>GitHubPage     –未开始</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"遐想\"><a href=\"#遐想\" class=\"headerlink\" title=\"遐想\"></a>遐想</h2><ul>\n<li>拥有自己的知识体系后，就可以定时从思维宝库里，提取出精华，知识变现</li>\n<li>拥有知识，并能够将接收到的信息，转化为知识，并将其变现为财富，才是真的学有所成</li>\n<li>当前网络中，现实生活中，存在非常多的傻逼，脑袋不清楚，容易带节奏，还他妈的纠缠不清，活该一辈子搬砖</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"构建基于Git的知识管理体系\"><a href=\"#构建基于Git的知识管理体系\" class=\"headerlink\" title=\"构建基于Git的知识管理体系\"></a>构建基于Git的知识管理体系</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>基于“让你成长为一棵树而不是一地草”的理念，搭建自己的知识金字塔，构建持续发展、增值的技能树。</p>\n<h2 id=\"最终目标\"><a href=\"#最终目标\" class=\"headerlink\" title=\"最终目标\"></a>最终目标</h2><h3 id=\"主阵地\"><a href=\"#主阵地\" class=\"headerlink\" title=\"主阵地\"></a>主阵地</h3><ul>\n<li>GitMdNote 个人日志，Git仓库，个人知识，收集归纳的主战场<ul>\n<li>GitMdBlog 日志仓库预览工具，方便查看，友好界面，专注(golang)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二大脑\"><a href=\"#第二大脑\" class=\"headerlink\" title=\"第二大脑\"></a>第二大脑</h3><ul>\n<li>EverNote 云端存储同步工具，可以用来归档，整理，多终端查看</li>\n</ul>\n<h3 id=\"辅助工具\"><a href=\"#辅助工具\" class=\"headerlink\" title=\"辅助工具\"></a>辅助工具</h3><ul>\n<li>EverSynClient 印象笔记同步工具，同步笔记仓库到印象笔记(TypeScript)</li>\n<li>GitHubPage 定期发布文章，输出成功到Page，打造个人名片</li>\n</ul>\n<h2 id=\"路线图-RoadMap\"><a href=\"#路线图-RoadMap\" class=\"headerlink\" title=\"路线图 RoadMap\"></a>路线图 RoadMap</h2><ul>\n<li>v1.0 (初步构建起，一个小型的，自发展的个人知识管理体系)<ul>\n<li>GitMdNote   –已实现</li>\n<li>EverNote    –已实现</li>\n<li>GitMdBlog   –已实现</li>\n<li>EverSynClient  –开发中</li>\n<li>GitHubPage     –未开始</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"遐想\"><a href=\"#遐想\" class=\"headerlink\" title=\"遐想\"></a>遐想</h2><ul>\n<li>拥有自己的知识体系后，就可以定时从思维宝库里，提取出精华，知识变现</li>\n<li>拥有知识，并能够将接收到的信息，转化为知识，并将其变现为财富，才是真的学有所成</li>\n<li>当前网络中，现实生活中，存在非常多的傻逼，脑袋不清楚，容易带节奏，还他妈的纠缠不清，活该一辈子搬砖</li>\n</ul>\n"},{"title":"高标准做事","time":"2019-12-11 10:30","notebook":"blog","_content":"\n# 高标准做事\n\n高标准做事，做事要强调一个“高”字，要有高度的责任心，高度的执行力：高昂的志向、高远的目标、高涨的激情、高雅的格调、高超的水平、高强的技能。要做到高瞻远瞩、高屋建瓴、高歌猛进！正是这些高标准和高要求，才使人成就了事业的辉煌和人生的高贵与完美！\n\n## 一、思想上要高标准\n\n- 给自己一个希望：\n    - 不论你遇到了多揪心的挫折，都应当以坚持不懈的信心和毅力，感动自己，感动他人，把自己锤炼成一个做大事的人。\n- 保持向上的激情：\n    - 我们需要激情，需要开拓，让我们从现在做起，兢兢业业，开拓创新，扎扎实实做好本职工作，在平凡的工作中燃烧激情。\n- 自信是高调做事的秘诀：\n    - 信心对于做事成功者具有重要意义，成功的欲望是创造和拥有财富的源泉。人一旦有了这种欲望，并经由自我暗示和潜意识的激发后形成一种自信心，这种信心就会转化成一种“积极的感情”，它能帮助人们释放出无穷的热情、智慧和精力，进而帮助人们获得财富与事业上的巨大成就。\n- 别让借口“吃掉”你的希望：\n    - 无论什么时候，我们都不要为自己寻找借口，只有尽职尽责，勇往直前，不找借口，才能实现理想，创造辉煌人生。\n- 丑小鸭也能变成白天鹅：\n    - 一个人有希望，再加上坚忍不拔的决心，就会产生创造的能力；一个人有希望，再加上持之以恒的努力，就会达到目的。\n- 点燃希望之火：\n    - 一颗充满希望的心灵，具有极大的创造力，这种创造力会激发人的潜能，实现人的理想。\n- 成功需要付出代价：\n    - 从古到今，凡成事者，成大事者，莫不受尽磨难，在磨难中完成自我教育，如此也水到渠成地成就了事业。\n- 主动去做应该做的事：\n    - 只有气服懒惰，积极进取的人，才能不断成功，不断取得好成绩。\n- 不要轻言放弃，坚持就能成功：\n    - 抱定任何都不放弃的信念，即使在一片懊悔或叹息、宽容或指责的氛围中也要坚持。是的，任何时候都不要放弃，无论条件多么的困难，只要能坚持到底，成功就一定属于你。\n- 学会自己鼓励自己：\n    - 能自己鼓励自己的人就算不是一个成功者，但绝对不会是一个失败者，你还是趁早练练这“功夫”吧！\n永远保持好心情：\n    - 突破困境的方法，首先在于要肃清胸中快乐和成功的仇敌，其次要集中思想，坚定意识。只有运用正确的思想，并抱定坚定的精神，才能从逆境中突围。\n- 激发自己的潜能：\n    - 倘若你和一般失败者面谈，你就会发现：他们之所以失败，是因为他们从来不曾走进足以激发人、鼓励人的环境中，是因为他们的潜能从来不曾被激发，是因为他们没有力量从不良的环境中振作。\n- 不要畏惧贫穷和困苦：\n    - 行走于人生丛林中的每个人都应该记住，如果你正在遭受困苦，这并不是完全是件坏事，“天将大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为”。因为老天要把重任交给你，必先磨炼和考验你！\n- 发掘出自身的强项：\n    - 当巨大的压力、非常的变故和重大责任压在一个人身上时，隐伏在他生命最深处的种种能力，才会突然涌现出来，使他成就大业。\n- 坚定生活的信念：\n    - 困境可以检验一个人的品质。如果一个人敢于直面困境，积极主动寻求解决问题的办法，能在任何不利的环境中始终充满热情，坚定对生活的信念，那么他迟早会成功。\n- 把挫折当成垫脚石：\n    - 在生活中，有的人被挫折打倒，有的人却把挫折当成垫脚石，不断前进。只要我们正视坎坷，永不放弃自己的追求，生活的艰辛将被我们踩在脚下，生命将会永放光芒！\n- 对生活充满热情：\n    - 有了热情，就能把额外的工作视作机遇，就能把陌生人变成朋友，就能真诚地宽容别人。有了热情，就能充分利用余暇时间来完成自己的兴趣爱好。有了热情，就会抛弃怨恨，变得心胸宽广。有了热情，就会战胜困难，取得成功。\n\n## 二、在细节上要高标准\n\n- 注重细节，从小事做起：\n    - 看不到细节，或者不把细节当回事的人，对工作缺乏认真的态度，对事情只能是敷衍了事。而注重细节的人，不仅认真地对待工作，将小事做细，并且能在做细的过程中找到机会，从而使自己走上成功之路。\n- 工作中没有小事：\n    - 点石成金，滴水成河，只有认真对待自己所做的一切事情，才能克服万难，取得成功。\n- 认真对待每一次训练：\n    - 那些在平时训练和准备过程中认真对待的人则相反，由于一直接受了高强度的模拟训练，他们更容易在关键的比赛中表现出镇定的心态，因为在他们心目中，这无异于平时的一场简单的比赛和训练。\n- 悄悄地为他人做点好事；\n    - 试着去真心真意地帮助别人，当这一切完全发自你的意愿时，你将会感觉到这是件多么快乐的事，你的心灵就会得到回报—一种和平、安静、温暖的感觉。\n- 敬业精神+脚踏实地=成功：\n    - 敬业，不仅仅是事业成功的保障，更是实现人生价值的手段，有的人在生活中，总是不满意目前的职业，希望改变自己的处境。但世界上绝对没有不劳而获的事情，人们的成功无一不是按部就班、脚踏实地努力的结果。\n- 相信自己，正视开端：\n    - 任何大的成功，都是从小事一点一滴累积而来的。没有做不到的事，只有不肯做的人。想想你曾经历过的失败，当时的你真的用尽全力试过各种办法了吗？困难不会是成功的障碍，只有你自己才可能是一个最大的绊脚石。\n- 扎实的基础是成功的法宝：\n    - 如果一味地追求过高远的目标，丧失了眼前可以成功的机会，就会成为高远目标的牺牲品。许多年轻人不满意现在的工作，羡慕那些大款或高级白领人员，不安心本职工作，总是想跳槽。其实，没有十分的本领，就不应有些妄想。我们还是多向成功之人学习，脚踏实地，做好基础工作，一步一个脚印地走上成功之途。\n- 实干才能脱颖而出：\n    - 那些充满乐观精神、积极向上的人，总有一股使不完的劲，神情专注，心情愉快，并且主动找事做，在实干中实现自己的理想。\n- 不为薪水而工作：\n    - 想要获得成功，实现人生目标，就不要为薪水而工作。当一个人积极进取，尽心尽力时，他就能实现更高的人生价值。\n- 要征服世界，先战胜自己：\n    - 要想成功，就要战胜自己的感情，培养自己控制命运的能力。\n- 用心做事，尽职尽责：\n    - 以积极主动的心态对待你的工作、你的公司，你就会充满活力与创造性的完成工作，你就会成为一个值得信赖的人，一个老板乐于雇用的人，一个拥有自己事业的人。\n\n## 三，目标有多大，人生舞台就有多大，志存高远自强不息。\n\n要重视自己的人生志向，志存高远就会自我激励，奋发向上，有所成就。人生就是奋斗与抗争的醒悟过程。靠进取心摆脱颓废，胜利属于坚韧性格的人。万丈高楼平地起，循序渐进铸辉煌！\n\n\n","source":"_posts/005-高标准做事.md","raw":"---\ntitle: 高标准做事\ntime: 2019-12-11 10:30\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 高标准做事\n\n高标准做事，做事要强调一个“高”字，要有高度的责任心，高度的执行力：高昂的志向、高远的目标、高涨的激情、高雅的格调、高超的水平、高强的技能。要做到高瞻远瞩、高屋建瓴、高歌猛进！正是这些高标准和高要求，才使人成就了事业的辉煌和人生的高贵与完美！\n\n## 一、思想上要高标准\n\n- 给自己一个希望：\n    - 不论你遇到了多揪心的挫折，都应当以坚持不懈的信心和毅力，感动自己，感动他人，把自己锤炼成一个做大事的人。\n- 保持向上的激情：\n    - 我们需要激情，需要开拓，让我们从现在做起，兢兢业业，开拓创新，扎扎实实做好本职工作，在平凡的工作中燃烧激情。\n- 自信是高调做事的秘诀：\n    - 信心对于做事成功者具有重要意义，成功的欲望是创造和拥有财富的源泉。人一旦有了这种欲望，并经由自我暗示和潜意识的激发后形成一种自信心，这种信心就会转化成一种“积极的感情”，它能帮助人们释放出无穷的热情、智慧和精力，进而帮助人们获得财富与事业上的巨大成就。\n- 别让借口“吃掉”你的希望：\n    - 无论什么时候，我们都不要为自己寻找借口，只有尽职尽责，勇往直前，不找借口，才能实现理想，创造辉煌人生。\n- 丑小鸭也能变成白天鹅：\n    - 一个人有希望，再加上坚忍不拔的决心，就会产生创造的能力；一个人有希望，再加上持之以恒的努力，就会达到目的。\n- 点燃希望之火：\n    - 一颗充满希望的心灵，具有极大的创造力，这种创造力会激发人的潜能，实现人的理想。\n- 成功需要付出代价：\n    - 从古到今，凡成事者，成大事者，莫不受尽磨难，在磨难中完成自我教育，如此也水到渠成地成就了事业。\n- 主动去做应该做的事：\n    - 只有气服懒惰，积极进取的人，才能不断成功，不断取得好成绩。\n- 不要轻言放弃，坚持就能成功：\n    - 抱定任何都不放弃的信念，即使在一片懊悔或叹息、宽容或指责的氛围中也要坚持。是的，任何时候都不要放弃，无论条件多么的困难，只要能坚持到底，成功就一定属于你。\n- 学会自己鼓励自己：\n    - 能自己鼓励自己的人就算不是一个成功者，但绝对不会是一个失败者，你还是趁早练练这“功夫”吧！\n永远保持好心情：\n    - 突破困境的方法，首先在于要肃清胸中快乐和成功的仇敌，其次要集中思想，坚定意识。只有运用正确的思想，并抱定坚定的精神，才能从逆境中突围。\n- 激发自己的潜能：\n    - 倘若你和一般失败者面谈，你就会发现：他们之所以失败，是因为他们从来不曾走进足以激发人、鼓励人的环境中，是因为他们的潜能从来不曾被激发，是因为他们没有力量从不良的环境中振作。\n- 不要畏惧贫穷和困苦：\n    - 行走于人生丛林中的每个人都应该记住，如果你正在遭受困苦，这并不是完全是件坏事，“天将大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为”。因为老天要把重任交给你，必先磨炼和考验你！\n- 发掘出自身的强项：\n    - 当巨大的压力、非常的变故和重大责任压在一个人身上时，隐伏在他生命最深处的种种能力，才会突然涌现出来，使他成就大业。\n- 坚定生活的信念：\n    - 困境可以检验一个人的品质。如果一个人敢于直面困境，积极主动寻求解决问题的办法，能在任何不利的环境中始终充满热情，坚定对生活的信念，那么他迟早会成功。\n- 把挫折当成垫脚石：\n    - 在生活中，有的人被挫折打倒，有的人却把挫折当成垫脚石，不断前进。只要我们正视坎坷，永不放弃自己的追求，生活的艰辛将被我们踩在脚下，生命将会永放光芒！\n- 对生活充满热情：\n    - 有了热情，就能把额外的工作视作机遇，就能把陌生人变成朋友，就能真诚地宽容别人。有了热情，就能充分利用余暇时间来完成自己的兴趣爱好。有了热情，就会抛弃怨恨，变得心胸宽广。有了热情，就会战胜困难，取得成功。\n\n## 二、在细节上要高标准\n\n- 注重细节，从小事做起：\n    - 看不到细节，或者不把细节当回事的人，对工作缺乏认真的态度，对事情只能是敷衍了事。而注重细节的人，不仅认真地对待工作，将小事做细，并且能在做细的过程中找到机会，从而使自己走上成功之路。\n- 工作中没有小事：\n    - 点石成金，滴水成河，只有认真对待自己所做的一切事情，才能克服万难，取得成功。\n- 认真对待每一次训练：\n    - 那些在平时训练和准备过程中认真对待的人则相反，由于一直接受了高强度的模拟训练，他们更容易在关键的比赛中表现出镇定的心态，因为在他们心目中，这无异于平时的一场简单的比赛和训练。\n- 悄悄地为他人做点好事；\n    - 试着去真心真意地帮助别人，当这一切完全发自你的意愿时，你将会感觉到这是件多么快乐的事，你的心灵就会得到回报—一种和平、安静、温暖的感觉。\n- 敬业精神+脚踏实地=成功：\n    - 敬业，不仅仅是事业成功的保障，更是实现人生价值的手段，有的人在生活中，总是不满意目前的职业，希望改变自己的处境。但世界上绝对没有不劳而获的事情，人们的成功无一不是按部就班、脚踏实地努力的结果。\n- 相信自己，正视开端：\n    - 任何大的成功，都是从小事一点一滴累积而来的。没有做不到的事，只有不肯做的人。想想你曾经历过的失败，当时的你真的用尽全力试过各种办法了吗？困难不会是成功的障碍，只有你自己才可能是一个最大的绊脚石。\n- 扎实的基础是成功的法宝：\n    - 如果一味地追求过高远的目标，丧失了眼前可以成功的机会，就会成为高远目标的牺牲品。许多年轻人不满意现在的工作，羡慕那些大款或高级白领人员，不安心本职工作，总是想跳槽。其实，没有十分的本领，就不应有些妄想。我们还是多向成功之人学习，脚踏实地，做好基础工作，一步一个脚印地走上成功之途。\n- 实干才能脱颖而出：\n    - 那些充满乐观精神、积极向上的人，总有一股使不完的劲，神情专注，心情愉快，并且主动找事做，在实干中实现自己的理想。\n- 不为薪水而工作：\n    - 想要获得成功，实现人生目标，就不要为薪水而工作。当一个人积极进取，尽心尽力时，他就能实现更高的人生价值。\n- 要征服世界，先战胜自己：\n    - 要想成功，就要战胜自己的感情，培养自己控制命运的能力。\n- 用心做事，尽职尽责：\n    - 以积极主动的心态对待你的工作、你的公司，你就会充满活力与创造性的完成工作，你就会成为一个值得信赖的人，一个老板乐于雇用的人，一个拥有自己事业的人。\n\n## 三，目标有多大，人生舞台就有多大，志存高远自强不息。\n\n要重视自己的人生志向，志存高远就会自我激励，奋发向上，有所成就。人生就是奋斗与抗争的醒悟过程。靠进取心摆脱颓废，胜利属于坚韧性格的人。万丈高楼平地起，循序渐进铸辉煌！\n\n\n","slug":"005-高标准做事","published":1,"date":"2020-10-02T14:10:21.471Z","updated":"2020-10-02T14:10:21.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dk800088p7lazfc2a9n","content":"<h1 id=\"高标准做事\"><a href=\"#高标准做事\" class=\"headerlink\" title=\"高标准做事\"></a>高标准做事</h1><p>高标准做事，做事要强调一个“高”字，要有高度的责任心，高度的执行力：高昂的志向、高远的目标、高涨的激情、高雅的格调、高超的水平、高强的技能。要做到高瞻远瞩、高屋建瓴、高歌猛进！正是这些高标准和高要求，才使人成就了事业的辉煌和人生的高贵与完美！</p>\n<h2 id=\"一、思想上要高标准\"><a href=\"#一、思想上要高标准\" class=\"headerlink\" title=\"一、思想上要高标准\"></a>一、思想上要高标准</h2><ul>\n<li>给自己一个希望：<ul>\n<li>不论你遇到了多揪心的挫折，都应当以坚持不懈的信心和毅力，感动自己，感动他人，把自己锤炼成一个做大事的人。</li>\n</ul>\n</li>\n<li>保持向上的激情：<ul>\n<li>我们需要激情，需要开拓，让我们从现在做起，兢兢业业，开拓创新，扎扎实实做好本职工作，在平凡的工作中燃烧激情。</li>\n</ul>\n</li>\n<li>自信是高调做事的秘诀：<ul>\n<li>信心对于做事成功者具有重要意义，成功的欲望是创造和拥有财富的源泉。人一旦有了这种欲望，并经由自我暗示和潜意识的激发后形成一种自信心，这种信心就会转化成一种“积极的感情”，它能帮助人们释放出无穷的热情、智慧和精力，进而帮助人们获得财富与事业上的巨大成就。</li>\n</ul>\n</li>\n<li>别让借口“吃掉”你的希望：<ul>\n<li>无论什么时候，我们都不要为自己寻找借口，只有尽职尽责，勇往直前，不找借口，才能实现理想，创造辉煌人生。</li>\n</ul>\n</li>\n<li>丑小鸭也能变成白天鹅：<ul>\n<li>一个人有希望，再加上坚忍不拔的决心，就会产生创造的能力；一个人有希望，再加上持之以恒的努力，就会达到目的。</li>\n</ul>\n</li>\n<li>点燃希望之火：<ul>\n<li>一颗充满希望的心灵，具有极大的创造力，这种创造力会激发人的潜能，实现人的理想。</li>\n</ul>\n</li>\n<li>成功需要付出代价：<ul>\n<li>从古到今，凡成事者，成大事者，莫不受尽磨难，在磨难中完成自我教育，如此也水到渠成地成就了事业。</li>\n</ul>\n</li>\n<li>主动去做应该做的事：<ul>\n<li>只有气服懒惰，积极进取的人，才能不断成功，不断取得好成绩。</li>\n</ul>\n</li>\n<li>不要轻言放弃，坚持就能成功：<ul>\n<li>抱定任何都不放弃的信念，即使在一片懊悔或叹息、宽容或指责的氛围中也要坚持。是的，任何时候都不要放弃，无论条件多么的困难，只要能坚持到底，成功就一定属于你。</li>\n</ul>\n</li>\n<li>学会自己鼓励自己：<ul>\n<li>能自己鼓励自己的人就算不是一个成功者，但绝对不会是一个失败者，你还是趁早练练这“功夫”吧！<br>永远保持好心情：</li>\n<li>突破困境的方法，首先在于要肃清胸中快乐和成功的仇敌，其次要集中思想，坚定意识。只有运用正确的思想，并抱定坚定的精神，才能从逆境中突围。</li>\n</ul>\n</li>\n<li>激发自己的潜能：<ul>\n<li>倘若你和一般失败者面谈，你就会发现：他们之所以失败，是因为他们从来不曾走进足以激发人、鼓励人的环境中，是因为他们的潜能从来不曾被激发，是因为他们没有力量从不良的环境中振作。</li>\n</ul>\n</li>\n<li>不要畏惧贫穷和困苦：<ul>\n<li>行走于人生丛林中的每个人都应该记住，如果你正在遭受困苦，这并不是完全是件坏事，“天将大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为”。因为老天要把重任交给你，必先磨炼和考验你！</li>\n</ul>\n</li>\n<li>发掘出自身的强项：<ul>\n<li>当巨大的压力、非常的变故和重大责任压在一个人身上时，隐伏在他生命最深处的种种能力，才会突然涌现出来，使他成就大业。</li>\n</ul>\n</li>\n<li>坚定生活的信念：<ul>\n<li>困境可以检验一个人的品质。如果一个人敢于直面困境，积极主动寻求解决问题的办法，能在任何不利的环境中始终充满热情，坚定对生活的信念，那么他迟早会成功。</li>\n</ul>\n</li>\n<li>把挫折当成垫脚石：<ul>\n<li>在生活中，有的人被挫折打倒，有的人却把挫折当成垫脚石，不断前进。只要我们正视坎坷，永不放弃自己的追求，生活的艰辛将被我们踩在脚下，生命将会永放光芒！</li>\n</ul>\n</li>\n<li>对生活充满热情：<ul>\n<li>有了热情，就能把额外的工作视作机遇，就能把陌生人变成朋友，就能真诚地宽容别人。有了热情，就能充分利用余暇时间来完成自己的兴趣爱好。有了热情，就会抛弃怨恨，变得心胸宽广。有了热情，就会战胜困难，取得成功。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、在细节上要高标准\"><a href=\"#二、在细节上要高标准\" class=\"headerlink\" title=\"二、在细节上要高标准\"></a>二、在细节上要高标准</h2><ul>\n<li>注重细节，从小事做起：<ul>\n<li>看不到细节，或者不把细节当回事的人，对工作缺乏认真的态度，对事情只能是敷衍了事。而注重细节的人，不仅认真地对待工作，将小事做细，并且能在做细的过程中找到机会，从而使自己走上成功之路。</li>\n</ul>\n</li>\n<li>工作中没有小事：<ul>\n<li>点石成金，滴水成河，只有认真对待自己所做的一切事情，才能克服万难，取得成功。</li>\n</ul>\n</li>\n<li>认真对待每一次训练：<ul>\n<li>那些在平时训练和准备过程中认真对待的人则相反，由于一直接受了高强度的模拟训练，他们更容易在关键的比赛中表现出镇定的心态，因为在他们心目中，这无异于平时的一场简单的比赛和训练。</li>\n</ul>\n</li>\n<li>悄悄地为他人做点好事；<ul>\n<li>试着去真心真意地帮助别人，当这一切完全发自你的意愿时，你将会感觉到这是件多么快乐的事，你的心灵就会得到回报—一种和平、安静、温暖的感觉。</li>\n</ul>\n</li>\n<li>敬业精神+脚踏实地=成功：<ul>\n<li>敬业，不仅仅是事业成功的保障，更是实现人生价值的手段，有的人在生活中，总是不满意目前的职业，希望改变自己的处境。但世界上绝对没有不劳而获的事情，人们的成功无一不是按部就班、脚踏实地努力的结果。</li>\n</ul>\n</li>\n<li>相信自己，正视开端：<ul>\n<li>任何大的成功，都是从小事一点一滴累积而来的。没有做不到的事，只有不肯做的人。想想你曾经历过的失败，当时的你真的用尽全力试过各种办法了吗？困难不会是成功的障碍，只有你自己才可能是一个最大的绊脚石。</li>\n</ul>\n</li>\n<li>扎实的基础是成功的法宝：<ul>\n<li>如果一味地追求过高远的目标，丧失了眼前可以成功的机会，就会成为高远目标的牺牲品。许多年轻人不满意现在的工作，羡慕那些大款或高级白领人员，不安心本职工作，总是想跳槽。其实，没有十分的本领，就不应有些妄想。我们还是多向成功之人学习，脚踏实地，做好基础工作，一步一个脚印地走上成功之途。</li>\n</ul>\n</li>\n<li>实干才能脱颖而出：<ul>\n<li>那些充满乐观精神、积极向上的人，总有一股使不完的劲，神情专注，心情愉快，并且主动找事做，在实干中实现自己的理想。</li>\n</ul>\n</li>\n<li>不为薪水而工作：<ul>\n<li>想要获得成功，实现人生目标，就不要为薪水而工作。当一个人积极进取，尽心尽力时，他就能实现更高的人生价值。</li>\n</ul>\n</li>\n<li>要征服世界，先战胜自己：<ul>\n<li>要想成功，就要战胜自己的感情，培养自己控制命运的能力。</li>\n</ul>\n</li>\n<li>用心做事，尽职尽责：<ul>\n<li>以积极主动的心态对待你的工作、你的公司，你就会充满活力与创造性的完成工作，你就会成为一个值得信赖的人，一个老板乐于雇用的人，一个拥有自己事业的人。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三，目标有多大，人生舞台就有多大，志存高远自强不息。\"><a href=\"#三，目标有多大，人生舞台就有多大，志存高远自强不息。\" class=\"headerlink\" title=\"三，目标有多大，人生舞台就有多大，志存高远自强不息。\"></a>三，目标有多大，人生舞台就有多大，志存高远自强不息。</h2><p>要重视自己的人生志向，志存高远就会自我激励，奋发向上，有所成就。人生就是奋斗与抗争的醒悟过程。靠进取心摆脱颓废，胜利属于坚韧性格的人。万丈高楼平地起，循序渐进铸辉煌！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"高标准做事\"><a href=\"#高标准做事\" class=\"headerlink\" title=\"高标准做事\"></a>高标准做事</h1><p>高标准做事，做事要强调一个“高”字，要有高度的责任心，高度的执行力：高昂的志向、高远的目标、高涨的激情、高雅的格调、高超的水平、高强的技能。要做到高瞻远瞩、高屋建瓴、高歌猛进！正是这些高标准和高要求，才使人成就了事业的辉煌和人生的高贵与完美！</p>\n<h2 id=\"一、思想上要高标准\"><a href=\"#一、思想上要高标准\" class=\"headerlink\" title=\"一、思想上要高标准\"></a>一、思想上要高标准</h2><ul>\n<li>给自己一个希望：<ul>\n<li>不论你遇到了多揪心的挫折，都应当以坚持不懈的信心和毅力，感动自己，感动他人，把自己锤炼成一个做大事的人。</li>\n</ul>\n</li>\n<li>保持向上的激情：<ul>\n<li>我们需要激情，需要开拓，让我们从现在做起，兢兢业业，开拓创新，扎扎实实做好本职工作，在平凡的工作中燃烧激情。</li>\n</ul>\n</li>\n<li>自信是高调做事的秘诀：<ul>\n<li>信心对于做事成功者具有重要意义，成功的欲望是创造和拥有财富的源泉。人一旦有了这种欲望，并经由自我暗示和潜意识的激发后形成一种自信心，这种信心就会转化成一种“积极的感情”，它能帮助人们释放出无穷的热情、智慧和精力，进而帮助人们获得财富与事业上的巨大成就。</li>\n</ul>\n</li>\n<li>别让借口“吃掉”你的希望：<ul>\n<li>无论什么时候，我们都不要为自己寻找借口，只有尽职尽责，勇往直前，不找借口，才能实现理想，创造辉煌人生。</li>\n</ul>\n</li>\n<li>丑小鸭也能变成白天鹅：<ul>\n<li>一个人有希望，再加上坚忍不拔的决心，就会产生创造的能力；一个人有希望，再加上持之以恒的努力，就会达到目的。</li>\n</ul>\n</li>\n<li>点燃希望之火：<ul>\n<li>一颗充满希望的心灵，具有极大的创造力，这种创造力会激发人的潜能，实现人的理想。</li>\n</ul>\n</li>\n<li>成功需要付出代价：<ul>\n<li>从古到今，凡成事者，成大事者，莫不受尽磨难，在磨难中完成自我教育，如此也水到渠成地成就了事业。</li>\n</ul>\n</li>\n<li>主动去做应该做的事：<ul>\n<li>只有气服懒惰，积极进取的人，才能不断成功，不断取得好成绩。</li>\n</ul>\n</li>\n<li>不要轻言放弃，坚持就能成功：<ul>\n<li>抱定任何都不放弃的信念，即使在一片懊悔或叹息、宽容或指责的氛围中也要坚持。是的，任何时候都不要放弃，无论条件多么的困难，只要能坚持到底，成功就一定属于你。</li>\n</ul>\n</li>\n<li>学会自己鼓励自己：<ul>\n<li>能自己鼓励自己的人就算不是一个成功者，但绝对不会是一个失败者，你还是趁早练练这“功夫”吧！<br>永远保持好心情：</li>\n<li>突破困境的方法，首先在于要肃清胸中快乐和成功的仇敌，其次要集中思想，坚定意识。只有运用正确的思想，并抱定坚定的精神，才能从逆境中突围。</li>\n</ul>\n</li>\n<li>激发自己的潜能：<ul>\n<li>倘若你和一般失败者面谈，你就会发现：他们之所以失败，是因为他们从来不曾走进足以激发人、鼓励人的环境中，是因为他们的潜能从来不曾被激发，是因为他们没有力量从不良的环境中振作。</li>\n</ul>\n</li>\n<li>不要畏惧贫穷和困苦：<ul>\n<li>行走于人生丛林中的每个人都应该记住，如果你正在遭受困苦，这并不是完全是件坏事，“天将大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为”。因为老天要把重任交给你，必先磨炼和考验你！</li>\n</ul>\n</li>\n<li>发掘出自身的强项：<ul>\n<li>当巨大的压力、非常的变故和重大责任压在一个人身上时，隐伏在他生命最深处的种种能力，才会突然涌现出来，使他成就大业。</li>\n</ul>\n</li>\n<li>坚定生活的信念：<ul>\n<li>困境可以检验一个人的品质。如果一个人敢于直面困境，积极主动寻求解决问题的办法，能在任何不利的环境中始终充满热情，坚定对生活的信念，那么他迟早会成功。</li>\n</ul>\n</li>\n<li>把挫折当成垫脚石：<ul>\n<li>在生活中，有的人被挫折打倒，有的人却把挫折当成垫脚石，不断前进。只要我们正视坎坷，永不放弃自己的追求，生活的艰辛将被我们踩在脚下，生命将会永放光芒！</li>\n</ul>\n</li>\n<li>对生活充满热情：<ul>\n<li>有了热情，就能把额外的工作视作机遇，就能把陌生人变成朋友，就能真诚地宽容别人。有了热情，就能充分利用余暇时间来完成自己的兴趣爱好。有了热情，就会抛弃怨恨，变得心胸宽广。有了热情，就会战胜困难，取得成功。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、在细节上要高标准\"><a href=\"#二、在细节上要高标准\" class=\"headerlink\" title=\"二、在细节上要高标准\"></a>二、在细节上要高标准</h2><ul>\n<li>注重细节，从小事做起：<ul>\n<li>看不到细节，或者不把细节当回事的人，对工作缺乏认真的态度，对事情只能是敷衍了事。而注重细节的人，不仅认真地对待工作，将小事做细，并且能在做细的过程中找到机会，从而使自己走上成功之路。</li>\n</ul>\n</li>\n<li>工作中没有小事：<ul>\n<li>点石成金，滴水成河，只有认真对待自己所做的一切事情，才能克服万难，取得成功。</li>\n</ul>\n</li>\n<li>认真对待每一次训练：<ul>\n<li>那些在平时训练和准备过程中认真对待的人则相反，由于一直接受了高强度的模拟训练，他们更容易在关键的比赛中表现出镇定的心态，因为在他们心目中，这无异于平时的一场简单的比赛和训练。</li>\n</ul>\n</li>\n<li>悄悄地为他人做点好事；<ul>\n<li>试着去真心真意地帮助别人，当这一切完全发自你的意愿时，你将会感觉到这是件多么快乐的事，你的心灵就会得到回报—一种和平、安静、温暖的感觉。</li>\n</ul>\n</li>\n<li>敬业精神+脚踏实地=成功：<ul>\n<li>敬业，不仅仅是事业成功的保障，更是实现人生价值的手段，有的人在生活中，总是不满意目前的职业，希望改变自己的处境。但世界上绝对没有不劳而获的事情，人们的成功无一不是按部就班、脚踏实地努力的结果。</li>\n</ul>\n</li>\n<li>相信自己，正视开端：<ul>\n<li>任何大的成功，都是从小事一点一滴累积而来的。没有做不到的事，只有不肯做的人。想想你曾经历过的失败，当时的你真的用尽全力试过各种办法了吗？困难不会是成功的障碍，只有你自己才可能是一个最大的绊脚石。</li>\n</ul>\n</li>\n<li>扎实的基础是成功的法宝：<ul>\n<li>如果一味地追求过高远的目标，丧失了眼前可以成功的机会，就会成为高远目标的牺牲品。许多年轻人不满意现在的工作，羡慕那些大款或高级白领人员，不安心本职工作，总是想跳槽。其实，没有十分的本领，就不应有些妄想。我们还是多向成功之人学习，脚踏实地，做好基础工作，一步一个脚印地走上成功之途。</li>\n</ul>\n</li>\n<li>实干才能脱颖而出：<ul>\n<li>那些充满乐观精神、积极向上的人，总有一股使不完的劲，神情专注，心情愉快，并且主动找事做，在实干中实现自己的理想。</li>\n</ul>\n</li>\n<li>不为薪水而工作：<ul>\n<li>想要获得成功，实现人生目标，就不要为薪水而工作。当一个人积极进取，尽心尽力时，他就能实现更高的人生价值。</li>\n</ul>\n</li>\n<li>要征服世界，先战胜自己：<ul>\n<li>要想成功，就要战胜自己的感情，培养自己控制命运的能力。</li>\n</ul>\n</li>\n<li>用心做事，尽职尽责：<ul>\n<li>以积极主动的心态对待你的工作、你的公司，你就会充满活力与创造性的完成工作，你就会成为一个值得信赖的人，一个老板乐于雇用的人，一个拥有自己事业的人。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三，目标有多大，人生舞台就有多大，志存高远自强不息。\"><a href=\"#三，目标有多大，人生舞台就有多大，志存高远自强不息。\" class=\"headerlink\" title=\"三，目标有多大，人生舞台就有多大，志存高远自强不息。\"></a>三，目标有多大，人生舞台就有多大，志存高远自强不息。</h2><p>要重视自己的人生志向，志存高远就会自我激励，奋发向上，有所成就。人生就是奋斗与抗争的醒悟过程。靠进取心摆脱颓废，胜利属于坚韧性格的人。万丈高楼平地起，循序渐进铸辉煌！</p>\n"},{"title":"2019年MTP管理技能培训笔记-读后感","time":"2019-12-13 18:30","notebook":"blog","_content":"\n# 2019年MTP管理技能培训笔记-读后感\n\n\n## 如何分析和解决问题\n\n- 原则和理论支撑\n    - 从现象到本质\n        - 根据问题现象指定临时应急方案，解决问题\n        - 从多角度调查问题，了解问题的范围\n        - 分析问题原因，包括表面问题和深层问题（引入专家）\n        - 讨论范围内（专家参与）\n        - 进行方案选择和决策（专家参与）\n        - 总结经验，预防再次发生\n    - 思维呈现的4个层次\n        - 通过语言表达出来\n        - 通过文字记录下来（重新思考的过程）\n        - 对文字进行结构化分类（信息处理，清晰）\n        - 形成图表（量化）\n        - 形成检查清单\n- 如何描述问题\n    - 描述问题的一般模式： **从什么角度出发，通过什么手段，解决什么问题，最终达到了什么成果**\n    - 如何清晰的描述问题\n        - 多使用数据，量化的形式描述\n        - 描述具体的行为\n        - 举例说明\n    - 描述问题的5W3H法则（回顾报告）\n        - when,where,who,what,why 什么时间什么地点谁发生了什么事，为什么\n        - How,How Many,How Often 如何发生的，严重程度，频次\n- 如何分析问题\n    - 站在一定的高度来分析，从全局看个体，从现象看及本质，从未来回看现在\n    - 5M1E分析法\n        - man 人的问题 -> 当事人，当事人同事，上级，干系人\n        - machine 设备的问题 -> 设备，工具，技术\n        - material 材料的问题 -> 原料，资金，资源投入\n        - Enviroment 环境的问题 ->  制度，体系，文化\n        - Measure 测试的问题 -> 考核，计划，激励\n    - 持续发问法\n        - 继续提出Why，每个问题都是对上一个问题产生的原因（到自己权限的上限为止）\n        - 针对每一层的原因都提出解决方案\n- 管理沟通技巧\n    - 什么是管理沟通\n        - 目的是为了有效管理，达成共识，双向传递“信息、思想、感情”\n        - 沟通三要素\n            - 清晰的信息\n            - 正面的思想\n            - 关心的情感\n        - 沟通的九大技巧\n            - 礼貌尊重\n            - 背景铺垫\n            - 认可信任\n            - 征询意见\n            - 同理感受（表达理解）\n            - 自我反思（自我批评）\n            - 积极迎合对方（顺着对方的话往下讲，让对话可以继续）\n            - 委婉拒绝\n            - 展望鼓励（祝福，一般在讲话的最后）\n        - 如何向上级汇报工作\n            - 汇报内容\n                - 信息方面展现\n                - 思想上表达态度\n                - 情感上表达感谢\n            - 汇报方法\n                - 高，先结果后过程，树立高度，讲话具有层次感\n                - 大，整理信息，呈现大量信息\n                - 上，通过数据表达事实，一次性包领导关心的内容讲完\n                - 全，分享经验教训，全面总结提意见\n        - 如何向上级提出意见\n            - 重点在于，通过改变观点背后的事实来改变上级的观点\n            - 注意事项\n                - 提出新信息，照亮盲点，让事实来改变上级自己的观点\n                - 支持上级的初衷，提出更好的意见\n                - 维护领导尊严，由领导做出决策\n            - 说服的套路\n                - 表达自己的目的意愿(表达共同的愿景）\n                - 描述客观事实（量化，层次化，提供全面的信息）\n                - 假设预期后果\n                - 提供新的方案\n                - 新方案的前景展望\n                - 请领导拍板（决定权交给领导，尊重领导权威）\n        - 化解平级冲突（消灭萌芽，克己双赢）\n            - 伸手，主动沟通，提前探讨\n            - 握手，放下面子，承认不足\n            - 牵手，平等互利，双赢\n            - 挽手，自己协商出解决方案，请领导拍板\n\n\n","source":"_posts/006-MTP培训笔记读后感.md","raw":"---\ntitle: 2019年MTP管理技能培训笔记-读后感\ntime: 2019-12-13 18:30\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 2019年MTP管理技能培训笔记-读后感\n\n\n## 如何分析和解决问题\n\n- 原则和理论支撑\n    - 从现象到本质\n        - 根据问题现象指定临时应急方案，解决问题\n        - 从多角度调查问题，了解问题的范围\n        - 分析问题原因，包括表面问题和深层问题（引入专家）\n        - 讨论范围内（专家参与）\n        - 进行方案选择和决策（专家参与）\n        - 总结经验，预防再次发生\n    - 思维呈现的4个层次\n        - 通过语言表达出来\n        - 通过文字记录下来（重新思考的过程）\n        - 对文字进行结构化分类（信息处理，清晰）\n        - 形成图表（量化）\n        - 形成检查清单\n- 如何描述问题\n    - 描述问题的一般模式： **从什么角度出发，通过什么手段，解决什么问题，最终达到了什么成果**\n    - 如何清晰的描述问题\n        - 多使用数据，量化的形式描述\n        - 描述具体的行为\n        - 举例说明\n    - 描述问题的5W3H法则（回顾报告）\n        - when,where,who,what,why 什么时间什么地点谁发生了什么事，为什么\n        - How,How Many,How Often 如何发生的，严重程度，频次\n- 如何分析问题\n    - 站在一定的高度来分析，从全局看个体，从现象看及本质，从未来回看现在\n    - 5M1E分析法\n        - man 人的问题 -> 当事人，当事人同事，上级，干系人\n        - machine 设备的问题 -> 设备，工具，技术\n        - material 材料的问题 -> 原料，资金，资源投入\n        - Enviroment 环境的问题 ->  制度，体系，文化\n        - Measure 测试的问题 -> 考核，计划，激励\n    - 持续发问法\n        - 继续提出Why，每个问题都是对上一个问题产生的原因（到自己权限的上限为止）\n        - 针对每一层的原因都提出解决方案\n- 管理沟通技巧\n    - 什么是管理沟通\n        - 目的是为了有效管理，达成共识，双向传递“信息、思想、感情”\n        - 沟通三要素\n            - 清晰的信息\n            - 正面的思想\n            - 关心的情感\n        - 沟通的九大技巧\n            - 礼貌尊重\n            - 背景铺垫\n            - 认可信任\n            - 征询意见\n            - 同理感受（表达理解）\n            - 自我反思（自我批评）\n            - 积极迎合对方（顺着对方的话往下讲，让对话可以继续）\n            - 委婉拒绝\n            - 展望鼓励（祝福，一般在讲话的最后）\n        - 如何向上级汇报工作\n            - 汇报内容\n                - 信息方面展现\n                - 思想上表达态度\n                - 情感上表达感谢\n            - 汇报方法\n                - 高，先结果后过程，树立高度，讲话具有层次感\n                - 大，整理信息，呈现大量信息\n                - 上，通过数据表达事实，一次性包领导关心的内容讲完\n                - 全，分享经验教训，全面总结提意见\n        - 如何向上级提出意见\n            - 重点在于，通过改变观点背后的事实来改变上级的观点\n            - 注意事项\n                - 提出新信息，照亮盲点，让事实来改变上级自己的观点\n                - 支持上级的初衷，提出更好的意见\n                - 维护领导尊严，由领导做出决策\n            - 说服的套路\n                - 表达自己的目的意愿(表达共同的愿景）\n                - 描述客观事实（量化，层次化，提供全面的信息）\n                - 假设预期后果\n                - 提供新的方案\n                - 新方案的前景展望\n                - 请领导拍板（决定权交给领导，尊重领导权威）\n        - 化解平级冲突（消灭萌芽，克己双赢）\n            - 伸手，主动沟通，提前探讨\n            - 握手，放下面子，承认不足\n            - 牵手，平等互利，双赢\n            - 挽手，自己协商出解决方案，请领导拍板\n\n\n","slug":"006-MTP培训笔记读后感","published":1,"date":"2020-10-02T14:10:21.486Z","updated":"2020-10-02T14:10:21.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dka00098p7l3vffgs66","content":"<h1 id=\"2019年MTP管理技能培训笔记-读后感\"><a href=\"#2019年MTP管理技能培训笔记-读后感\" class=\"headerlink\" title=\"2019年MTP管理技能培训笔记-读后感\"></a>2019年MTP管理技能培训笔记-读后感</h1><h2 id=\"如何分析和解决问题\"><a href=\"#如何分析和解决问题\" class=\"headerlink\" title=\"如何分析和解决问题\"></a>如何分析和解决问题</h2><ul>\n<li>原则和理论支撑<ul>\n<li>从现象到本质<ul>\n<li>根据问题现象指定临时应急方案，解决问题</li>\n<li>从多角度调查问题，了解问题的范围</li>\n<li>分析问题原因，包括表面问题和深层问题（引入专家）</li>\n<li>讨论范围内（专家参与）</li>\n<li>进行方案选择和决策（专家参与）</li>\n<li>总结经验，预防再次发生</li>\n</ul>\n</li>\n<li>思维呈现的4个层次<ul>\n<li>通过语言表达出来</li>\n<li>通过文字记录下来（重新思考的过程）</li>\n<li>对文字进行结构化分类（信息处理，清晰）</li>\n<li>形成图表（量化）</li>\n<li>形成检查清单</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何描述问题<ul>\n<li>描述问题的一般模式： <strong>从什么角度出发，通过什么手段，解决什么问题，最终达到了什么成果</strong></li>\n<li>如何清晰的描述问题<ul>\n<li>多使用数据，量化的形式描述</li>\n<li>描述具体的行为</li>\n<li>举例说明</li>\n</ul>\n</li>\n<li>描述问题的5W3H法则（回顾报告）<ul>\n<li>when,where,who,what,why 什么时间什么地点谁发生了什么事，为什么</li>\n<li>How,How Many,How Often 如何发生的，严重程度，频次</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何分析问题<ul>\n<li>站在一定的高度来分析，从全局看个体，从现象看及本质，从未来回看现在</li>\n<li>5M1E分析法<ul>\n<li>man 人的问题 -&gt; 当事人，当事人同事，上级，干系人</li>\n<li>machine 设备的问题 -&gt; 设备，工具，技术</li>\n<li>material 材料的问题 -&gt; 原料，资金，资源投入</li>\n<li>Enviroment 环境的问题 -&gt;  制度，体系，文化</li>\n<li>Measure 测试的问题 -&gt; 考核，计划，激励</li>\n</ul>\n</li>\n<li>持续发问法<ul>\n<li>继续提出Why，每个问题都是对上一个问题产生的原因（到自己权限的上限为止）</li>\n<li>针对每一层的原因都提出解决方案</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>管理沟通技巧<ul>\n<li>什么是管理沟通<ul>\n<li>目的是为了有效管理，达成共识，双向传递“信息、思想、感情”</li>\n<li>沟通三要素<ul>\n<li>清晰的信息</li>\n<li>正面的思想</li>\n<li>关心的情感</li>\n</ul>\n</li>\n<li>沟通的九大技巧<ul>\n<li>礼貌尊重</li>\n<li>背景铺垫</li>\n<li>认可信任</li>\n<li>征询意见</li>\n<li>同理感受（表达理解）</li>\n<li>自我反思（自我批评）</li>\n<li>积极迎合对方（顺着对方的话往下讲，让对话可以继续）</li>\n<li>委婉拒绝</li>\n<li>展望鼓励（祝福，一般在讲话的最后）</li>\n</ul>\n</li>\n<li>如何向上级汇报工作<ul>\n<li>汇报内容<ul>\n<li>信息方面展现</li>\n<li>思想上表达态度</li>\n<li>情感上表达感谢</li>\n</ul>\n</li>\n<li>汇报方法<ul>\n<li>高，先结果后过程，树立高度，讲话具有层次感</li>\n<li>大，整理信息，呈现大量信息</li>\n<li>上，通过数据表达事实，一次性包领导关心的内容讲完</li>\n<li>全，分享经验教训，全面总结提意见</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何向上级提出意见<ul>\n<li>重点在于，通过改变观点背后的事实来改变上级的观点</li>\n<li>注意事项<ul>\n<li>提出新信息，照亮盲点，让事实来改变上级自己的观点</li>\n<li>支持上级的初衷，提出更好的意见</li>\n<li>维护领导尊严，由领导做出决策</li>\n</ul>\n</li>\n<li>说服的套路<ul>\n<li>表达自己的目的意愿(表达共同的愿景）</li>\n<li>描述客观事实（量化，层次化，提供全面的信息）</li>\n<li>假设预期后果</li>\n<li>提供新的方案</li>\n<li>新方案的前景展望</li>\n<li>请领导拍板（决定权交给领导，尊重领导权威）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>化解平级冲突（消灭萌芽，克己双赢）<ul>\n<li>伸手，主动沟通，提前探讨</li>\n<li>握手，放下面子，承认不足</li>\n<li>牵手，平等互利，双赢</li>\n<li>挽手，自己协商出解决方案，请领导拍板</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"2019年MTP管理技能培训笔记-读后感\"><a href=\"#2019年MTP管理技能培训笔记-读后感\" class=\"headerlink\" title=\"2019年MTP管理技能培训笔记-读后感\"></a>2019年MTP管理技能培训笔记-读后感</h1><h2 id=\"如何分析和解决问题\"><a href=\"#如何分析和解决问题\" class=\"headerlink\" title=\"如何分析和解决问题\"></a>如何分析和解决问题</h2><ul>\n<li>原则和理论支撑<ul>\n<li>从现象到本质<ul>\n<li>根据问题现象指定临时应急方案，解决问题</li>\n<li>从多角度调查问题，了解问题的范围</li>\n<li>分析问题原因，包括表面问题和深层问题（引入专家）</li>\n<li>讨论范围内（专家参与）</li>\n<li>进行方案选择和决策（专家参与）</li>\n<li>总结经验，预防再次发生</li>\n</ul>\n</li>\n<li>思维呈现的4个层次<ul>\n<li>通过语言表达出来</li>\n<li>通过文字记录下来（重新思考的过程）</li>\n<li>对文字进行结构化分类（信息处理，清晰）</li>\n<li>形成图表（量化）</li>\n<li>形成检查清单</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何描述问题<ul>\n<li>描述问题的一般模式： <strong>从什么角度出发，通过什么手段，解决什么问题，最终达到了什么成果</strong></li>\n<li>如何清晰的描述问题<ul>\n<li>多使用数据，量化的形式描述</li>\n<li>描述具体的行为</li>\n<li>举例说明</li>\n</ul>\n</li>\n<li>描述问题的5W3H法则（回顾报告）<ul>\n<li>when,where,who,what,why 什么时间什么地点谁发生了什么事，为什么</li>\n<li>How,How Many,How Often 如何发生的，严重程度，频次</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何分析问题<ul>\n<li>站在一定的高度来分析，从全局看个体，从现象看及本质，从未来回看现在</li>\n<li>5M1E分析法<ul>\n<li>man 人的问题 -&gt; 当事人，当事人同事，上级，干系人</li>\n<li>machine 设备的问题 -&gt; 设备，工具，技术</li>\n<li>material 材料的问题 -&gt; 原料，资金，资源投入</li>\n<li>Enviroment 环境的问题 -&gt;  制度，体系，文化</li>\n<li>Measure 测试的问题 -&gt; 考核，计划，激励</li>\n</ul>\n</li>\n<li>持续发问法<ul>\n<li>继续提出Why，每个问题都是对上一个问题产生的原因（到自己权限的上限为止）</li>\n<li>针对每一层的原因都提出解决方案</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>管理沟通技巧<ul>\n<li>什么是管理沟通<ul>\n<li>目的是为了有效管理，达成共识，双向传递“信息、思想、感情”</li>\n<li>沟通三要素<ul>\n<li>清晰的信息</li>\n<li>正面的思想</li>\n<li>关心的情感</li>\n</ul>\n</li>\n<li>沟通的九大技巧<ul>\n<li>礼貌尊重</li>\n<li>背景铺垫</li>\n<li>认可信任</li>\n<li>征询意见</li>\n<li>同理感受（表达理解）</li>\n<li>自我反思（自我批评）</li>\n<li>积极迎合对方（顺着对方的话往下讲，让对话可以继续）</li>\n<li>委婉拒绝</li>\n<li>展望鼓励（祝福，一般在讲话的最后）</li>\n</ul>\n</li>\n<li>如何向上级汇报工作<ul>\n<li>汇报内容<ul>\n<li>信息方面展现</li>\n<li>思想上表达态度</li>\n<li>情感上表达感谢</li>\n</ul>\n</li>\n<li>汇报方法<ul>\n<li>高，先结果后过程，树立高度，讲话具有层次感</li>\n<li>大，整理信息，呈现大量信息</li>\n<li>上，通过数据表达事实，一次性包领导关心的内容讲完</li>\n<li>全，分享经验教训，全面总结提意见</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如何向上级提出意见<ul>\n<li>重点在于，通过改变观点背后的事实来改变上级的观点</li>\n<li>注意事项<ul>\n<li>提出新信息，照亮盲点，让事实来改变上级自己的观点</li>\n<li>支持上级的初衷，提出更好的意见</li>\n<li>维护领导尊严，由领导做出决策</li>\n</ul>\n</li>\n<li>说服的套路<ul>\n<li>表达自己的目的意愿(表达共同的愿景）</li>\n<li>描述客观事实（量化，层次化，提供全面的信息）</li>\n<li>假设预期后果</li>\n<li>提供新的方案</li>\n<li>新方案的前景展望</li>\n<li>请领导拍板（决定权交给领导，尊重领导权威）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>化解平级冲突（消灭萌芽，克己双赢）<ul>\n<li>伸手，主动沟通，提前探讨</li>\n<li>握手，放下面子，承认不足</li>\n<li>牵手，平等互利，双赢</li>\n<li>挽手，自己协商出解决方案，请领导拍板</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"搭建家庭媒体中心","time":"2019-12-21 14:00","notebook":"blog","_content":"\n# 搭建家庭媒体中心\n\n\n## 下载最新的Minidlna镜像\n\ndocker pull vladgh/minidlna\n\n## 启动容器\n\nMiniDLNA (Dockerfile)\n\nImage Version Commit License\n\nThis is MiniDLNA on top of minimal Alpine. It can be configured with environment variables.\nUsage\n\nPrefix any configuration directive of MiniDLNA with MINIDLNA_ and run your container:\n\n```\ndocker run -d \\\n  --net=host \\\n  -v <media dir on host>:/media \\\n  -e MINIDLNA_MEDIA_DIR=/media \\\n  -e MINIDLNA_FRIENDLY_NAME=MyMini \\\n  vladgh/minidlna\n```\n\nNote: You need to run the container in host mode for it to be able to receive UPnP broadcast packets. The default bridge mode will not work.\nMultiple Media dirs\n\nAny environment variable starting with MINIDLNA_MEDIA_DIR will be treated as an additional media_dir directive and any suffix in the variable name will be trimmed (ex: MINIDLNA_MEDIA_DIR_1). This way you can declare multiple media_dir directives\n\n```\ndocker run -d \\\n  --net=host \\\n  -v <media dir on host>:/media/audio \\\n  -v <media dir on host>:/media/video \\\n  -e MINIDLNA_MEDIA_DIR_1=A,/media/audio \\\n  -e MINIDLNA_MEDIA_DIR_2=V,/media/video \\\n  -e MINIDLNA_FRIENDLY_NAME=MyMini \\\n  vladgh/minidlna\n```\n\nSee: http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html\n\n","source":"_posts/008-搭建家庭媒体中心.md","raw":"---\ntitle: 搭建家庭媒体中心\ntime: 2019-12-21 14:00\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 搭建家庭媒体中心\n\n\n## 下载最新的Minidlna镜像\n\ndocker pull vladgh/minidlna\n\n## 启动容器\n\nMiniDLNA (Dockerfile)\n\nImage Version Commit License\n\nThis is MiniDLNA on top of minimal Alpine. It can be configured with environment variables.\nUsage\n\nPrefix any configuration directive of MiniDLNA with MINIDLNA_ and run your container:\n\n```\ndocker run -d \\\n  --net=host \\\n  -v <media dir on host>:/media \\\n  -e MINIDLNA_MEDIA_DIR=/media \\\n  -e MINIDLNA_FRIENDLY_NAME=MyMini \\\n  vladgh/minidlna\n```\n\nNote: You need to run the container in host mode for it to be able to receive UPnP broadcast packets. The default bridge mode will not work.\nMultiple Media dirs\n\nAny environment variable starting with MINIDLNA_MEDIA_DIR will be treated as an additional media_dir directive and any suffix in the variable name will be trimmed (ex: MINIDLNA_MEDIA_DIR_1). This way you can declare multiple media_dir directives\n\n```\ndocker run -d \\\n  --net=host \\\n  -v <media dir on host>:/media/audio \\\n  -v <media dir on host>:/media/video \\\n  -e MINIDLNA_MEDIA_DIR_1=A,/media/audio \\\n  -e MINIDLNA_MEDIA_DIR_2=V,/media/video \\\n  -e MINIDLNA_FRIENDLY_NAME=MyMini \\\n  vladgh/minidlna\n```\n\nSee: http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html\n\n","slug":"008-搭建家庭媒体中心","published":1,"date":"2020-10-02T14:10:21.513Z","updated":"2020-10-02T14:10:21.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkb000c8p7les9j090y","content":"<h1 id=\"搭建家庭媒体中心\"><a href=\"#搭建家庭媒体中心\" class=\"headerlink\" title=\"搭建家庭媒体中心\"></a>搭建家庭媒体中心</h1><h2 id=\"下载最新的Minidlna镜像\"><a href=\"#下载最新的Minidlna镜像\" class=\"headerlink\" title=\"下载最新的Minidlna镜像\"></a>下载最新的Minidlna镜像</h2><p>docker pull vladgh/minidlna</p>\n<h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><p>MiniDLNA (Dockerfile)</p>\n<p>Image Version Commit License</p>\n<p>This is MiniDLNA on top of minimal Alpine. It can be configured with environment variables.<br>Usage</p>\n<p>Prefix any configuration directive of MiniDLNA with MINIDLNA_ and run your container:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --net&#x3D;host \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR&#x3D;&#x2F;media \\</span><br><span class=\"line\">  -e MINIDLNA_FRIENDLY_NAME&#x3D;MyMini \\</span><br><span class=\"line\">  vladgh&#x2F;minidlna</span><br></pre></td></tr></table></figure>\n\n<p>Note: You need to run the container in host mode for it to be able to receive UPnP broadcast packets. The default bridge mode will not work.<br>Multiple Media dirs</p>\n<p>Any environment variable starting with MINIDLNA_MEDIA_DIR will be treated as an additional media_dir directive and any suffix in the variable name will be trimmed (ex: MINIDLNA_MEDIA_DIR_1). This way you can declare multiple media_dir directives</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --net&#x3D;host \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media&#x2F;audio \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media&#x2F;video \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR_1&#x3D;A,&#x2F;media&#x2F;audio \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR_2&#x3D;V,&#x2F;media&#x2F;video \\</span><br><span class=\"line\">  -e MINIDLNA_FRIENDLY_NAME&#x3D;MyMini \\</span><br><span class=\"line\">  vladgh&#x2F;minidlna</span><br></pre></td></tr></table></figure>\n\n<p>See: <a href=\"http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html\">http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"搭建家庭媒体中心\"><a href=\"#搭建家庭媒体中心\" class=\"headerlink\" title=\"搭建家庭媒体中心\"></a>搭建家庭媒体中心</h1><h2 id=\"下载最新的Minidlna镜像\"><a href=\"#下载最新的Minidlna镜像\" class=\"headerlink\" title=\"下载最新的Minidlna镜像\"></a>下载最新的Minidlna镜像</h2><p>docker pull vladgh/minidlna</p>\n<h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><p>MiniDLNA (Dockerfile)</p>\n<p>Image Version Commit License</p>\n<p>This is MiniDLNA on top of minimal Alpine. It can be configured with environment variables.<br>Usage</p>\n<p>Prefix any configuration directive of MiniDLNA with MINIDLNA_ and run your container:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --net&#x3D;host \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR&#x3D;&#x2F;media \\</span><br><span class=\"line\">  -e MINIDLNA_FRIENDLY_NAME&#x3D;MyMini \\</span><br><span class=\"line\">  vladgh&#x2F;minidlna</span><br></pre></td></tr></table></figure>\n\n<p>Note: You need to run the container in host mode for it to be able to receive UPnP broadcast packets. The default bridge mode will not work.<br>Multiple Media dirs</p>\n<p>Any environment variable starting with MINIDLNA_MEDIA_DIR will be treated as an additional media_dir directive and any suffix in the variable name will be trimmed (ex: MINIDLNA_MEDIA_DIR_1). This way you can declare multiple media_dir directives</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --net&#x3D;host \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media&#x2F;audio \\</span><br><span class=\"line\">  -v &lt;media dir on host&gt;:&#x2F;media&#x2F;video \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR_1&#x3D;A,&#x2F;media&#x2F;audio \\</span><br><span class=\"line\">  -e MINIDLNA_MEDIA_DIR_2&#x3D;V,&#x2F;media&#x2F;video \\</span><br><span class=\"line\">  -e MINIDLNA_FRIENDLY_NAME&#x3D;MyMini \\</span><br><span class=\"line\">  vladgh&#x2F;minidlna</span><br></pre></td></tr></table></figure>\n\n<p>See: <a href=\"http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html\">http://manpages.ubuntu.com/manpages/raring/man5/minidlna.conf.5.html</a></p>\n"},{"title":"月度考勤统计SQL脚本","time":"2019-12-24 18:18","notebook":"blog","_content":"\n# 月度考勤统计SQL脚本\n\n## 介绍\n\n- python脚本抓取平台考勤数据\n\n## 加班数据统计\n\n- 统计下班时间\n```sql\n--- 查询加班记录\n--------------------\nSELECT *\nFROM touch_card_record WHERE substr(touchdate,12,19) > '18:30:00';\n\n--- 查询所有记录\n----------------\nSELECT *\nFROM touch_card_record;\n\n--- 总记录数\n-----------------\nSELECT COUNT(*) FROM touch_card_record\n```\n","source":"_posts/009-月度考勤统计SQL脚本.md","raw":"---\ntitle: 月度考勤统计SQL脚本\ntime: 2019-12-24 18:18\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 月度考勤统计SQL脚本\n\n## 介绍\n\n- python脚本抓取平台考勤数据\n\n## 加班数据统计\n\n- 统计下班时间\n```sql\n--- 查询加班记录\n--------------------\nSELECT *\nFROM touch_card_record WHERE substr(touchdate,12,19) > '18:30:00';\n\n--- 查询所有记录\n----------------\nSELECT *\nFROM touch_card_record;\n\n--- 总记录数\n-----------------\nSELECT COUNT(*) FROM touch_card_record\n```\n","slug":"009-月度考勤统计SQL脚本","published":1,"date":"2020-10-02T14:10:21.526Z","updated":"2020-10-02T14:10:21.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkc000d8p7lcvt7fnpq","content":"<h1 id=\"月度考勤统计SQL脚本\"><a href=\"#月度考勤统计SQL脚本\" class=\"headerlink\" title=\"月度考勤统计SQL脚本\"></a>月度考勤统计SQL脚本</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ul>\n<li>python脚本抓取平台考勤数据</li>\n</ul>\n<h2 id=\"加班数据统计\"><a href=\"#加班数据统计\" class=\"headerlink\" title=\"加班数据统计\"></a>加班数据统计</h2><ul>\n<li>统计下班时间<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- 查询加班记录</span></span><br><span class=\"line\"><span class=\"comment\">--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> touch_card_record <span class=\"keyword\">WHERE</span> <span class=\"keyword\">substr</span>(touchdate,<span class=\"number\">12</span>,<span class=\"number\">19</span>) &gt; <span class=\"string\">&#x27;18:30:00&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- 查询所有记录</span></span><br><span class=\"line\"><span class=\"comment\">----------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> touch_card_record;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- 总记录数</span></span><br><span class=\"line\"><span class=\"comment\">-----------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> touch_card_record</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"月度考勤统计SQL脚本\"><a href=\"#月度考勤统计SQL脚本\" class=\"headerlink\" title=\"月度考勤统计SQL脚本\"></a>月度考勤统计SQL脚本</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ul>\n<li>python脚本抓取平台考勤数据</li>\n</ul>\n<h2 id=\"加班数据统计\"><a href=\"#加班数据统计\" class=\"headerlink\" title=\"加班数据统计\"></a>加班数据统计</h2><ul>\n<li>统计下班时间<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- 查询加班记录</span></span><br><span class=\"line\"><span class=\"comment\">--------------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> touch_card_record <span class=\"keyword\">WHERE</span> <span class=\"keyword\">substr</span>(touchdate,<span class=\"number\">12</span>,<span class=\"number\">19</span>) &gt; <span class=\"string\">&#x27;18:30:00&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- 查询所有记录</span></span><br><span class=\"line\"><span class=\"comment\">----------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> touch_card_record;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- 总记录数</span></span><br><span class=\"line\"><span class=\"comment\">-----------------</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> touch_card_record</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Linux下安装字体","time":"2019-12-25 11:48","notebook":"diary","_content":"\n#  Linux下安装字体\n\n\n## 复制字体到目录\n\n- 目录名字 `/usr/share/fonts/`\n\n## 刷新缓存\n\n- 生成字体索引信息\n```\nsudo mkfontscale\nsudo mkfontdir\n```\n- 更新字体缓存\n```\nsudo fc-cache\n```\n\n\n","source":"_posts/010-Linux字体.md","raw":"---\ntitle: Linux下安装字体\ntime: 2019-12-25 11:48\ntags: Markdown,daily\nnotebook: diary\n---\n\n#  Linux下安装字体\n\n\n## 复制字体到目录\n\n- 目录名字 `/usr/share/fonts/`\n\n## 刷新缓存\n\n- 生成字体索引信息\n```\nsudo mkfontscale\nsudo mkfontdir\n```\n- 更新字体缓存\n```\nsudo fc-cache\n```\n\n\n","slug":"010-Linux字体","published":1,"date":"2020-10-02T14:10:21.538Z","updated":"2020-10-02T14:10:21.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkg000g8p7lgllg3q4k","content":"<h1 id=\"Linux下安装字体\"><a href=\"#Linux下安装字体\" class=\"headerlink\" title=\"Linux下安装字体\"></a>Linux下安装字体</h1><h2 id=\"复制字体到目录\"><a href=\"#复制字体到目录\" class=\"headerlink\" title=\"复制字体到目录\"></a>复制字体到目录</h2><ul>\n<li>目录名字 <code>/usr/share/fonts/</code></li>\n</ul>\n<h2 id=\"刷新缓存\"><a href=\"#刷新缓存\" class=\"headerlink\" title=\"刷新缓存\"></a>刷新缓存</h2><ul>\n<li>生成字体索引信息<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkfontscale</span><br><span class=\"line\">sudo mkfontdir</span><br></pre></td></tr></table></figure></li>\n<li>更新字体缓存<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fc-cache</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux下安装字体\"><a href=\"#Linux下安装字体\" class=\"headerlink\" title=\"Linux下安装字体\"></a>Linux下安装字体</h1><h2 id=\"复制字体到目录\"><a href=\"#复制字体到目录\" class=\"headerlink\" title=\"复制字体到目录\"></a>复制字体到目录</h2><ul>\n<li>目录名字 <code>/usr/share/fonts/</code></li>\n</ul>\n<h2 id=\"刷新缓存\"><a href=\"#刷新缓存\" class=\"headerlink\" title=\"刷新缓存\"></a>刷新缓存</h2><ul>\n<li>生成字体索引信息<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkfontscale</span><br><span class=\"line\">sudo mkfontdir</span><br></pre></td></tr></table></figure></li>\n<li>更新字体缓存<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fc-cache</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n"},{"title":"Tmux使用入门","time":"2019-12-29 21:43","notebook":"blog","_content":"\n# Tmux使用入门\n\n## 简介\n\nTmux是终端多路复用工具\n\n## 快捷键\n\n- tmux 进入tmux\n\n## 窗口分割\n\n- 垂直分屏 C-b %\n- 水平分屏 C-b \"\n\n## 面板切换\n\n- 切换窗口 C-b o/方向键\n- 上下分屏与左右分屏切换 C-b SPACE\n\n## 面板大小\n\n- 调整窗口大小 C-b C+方向键\n- 窗口最大化 C-b z\n\n## 翻页\n\n- 内容翻页 `C-b [` ，然后方向键控制，q退出\n\n","source":"_posts/012-Tmux使用入门.md","raw":"---\ntitle: Tmux使用入门\ntime: 2019-12-29 21:43\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Tmux使用入门\n\n## 简介\n\nTmux是终端多路复用工具\n\n## 快捷键\n\n- tmux 进入tmux\n\n## 窗口分割\n\n- 垂直分屏 C-b %\n- 水平分屏 C-b \"\n\n## 面板切换\n\n- 切换窗口 C-b o/方向键\n- 上下分屏与左右分屏切换 C-b SPACE\n\n## 面板大小\n\n- 调整窗口大小 C-b C+方向键\n- 窗口最大化 C-b z\n\n## 翻页\n\n- 内容翻页 `C-b [` ，然后方向键控制，q退出\n\n","slug":"012-Tmux使用入门","published":1,"date":"2020-10-02T14:10:21.562Z","updated":"2020-10-02T14:10:21.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkh000i8p7l3d5rhlpt","content":"<h1 id=\"Tmux使用入门\"><a href=\"#Tmux使用入门\" class=\"headerlink\" title=\"Tmux使用入门\"></a>Tmux使用入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Tmux是终端多路复用工具</p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>tmux 进入tmux</li>\n</ul>\n<h2 id=\"窗口分割\"><a href=\"#窗口分割\" class=\"headerlink\" title=\"窗口分割\"></a>窗口分割</h2><ul>\n<li>垂直分屏 C-b %</li>\n<li>水平分屏 C-b “</li>\n</ul>\n<h2 id=\"面板切换\"><a href=\"#面板切换\" class=\"headerlink\" title=\"面板切换\"></a>面板切换</h2><ul>\n<li>切换窗口 C-b o/方向键</li>\n<li>上下分屏与左右分屏切换 C-b SPACE</li>\n</ul>\n<h2 id=\"面板大小\"><a href=\"#面板大小\" class=\"headerlink\" title=\"面板大小\"></a>面板大小</h2><ul>\n<li>调整窗口大小 C-b C+方向键</li>\n<li>窗口最大化 C-b z</li>\n</ul>\n<h2 id=\"翻页\"><a href=\"#翻页\" class=\"headerlink\" title=\"翻页\"></a>翻页</h2><ul>\n<li>内容翻页 <code>C-b [</code> ，然后方向键控制，q退出</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Tmux使用入门\"><a href=\"#Tmux使用入门\" class=\"headerlink\" title=\"Tmux使用入门\"></a>Tmux使用入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Tmux是终端多路复用工具</p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>tmux 进入tmux</li>\n</ul>\n<h2 id=\"窗口分割\"><a href=\"#窗口分割\" class=\"headerlink\" title=\"窗口分割\"></a>窗口分割</h2><ul>\n<li>垂直分屏 C-b %</li>\n<li>水平分屏 C-b “</li>\n</ul>\n<h2 id=\"面板切换\"><a href=\"#面板切换\" class=\"headerlink\" title=\"面板切换\"></a>面板切换</h2><ul>\n<li>切换窗口 C-b o/方向键</li>\n<li>上下分屏与左右分屏切换 C-b SPACE</li>\n</ul>\n<h2 id=\"面板大小\"><a href=\"#面板大小\" class=\"headerlink\" title=\"面板大小\"></a>面板大小</h2><ul>\n<li>调整窗口大小 C-b C+方向键</li>\n<li>窗口最大化 C-b z</li>\n</ul>\n<h2 id=\"翻页\"><a href=\"#翻页\" class=\"headerlink\" title=\"翻页\"></a>翻页</h2><ul>\n<li>内容翻页 <code>C-b [</code> ，然后方向键控制，q退出</li>\n</ul>\n"},{"title":"Linux系统启动慢排查","time":"2019-12-25 13:59","notebook":"diary","_content":"\n#  Linux系统启动慢排查\n\n\n## 排除指令\n\n- systemd-cgls 查看服务的启动顺序\n- systemd-analyze 查看启动时间\n- systemd-analyze blame 查看启动占用的时间\n- udisk.server 挂载分区的\n","source":"_posts/011-Linux系统启动慢排查手册.md","raw":"---\ntitle: Linux系统启动慢排查\ntime: 2019-12-25 13:59\ntags: Markdown,blog\nnotebook: diary\n---\n\n#  Linux系统启动慢排查\n\n\n## 排除指令\n\n- systemd-cgls 查看服务的启动顺序\n- systemd-analyze 查看启动时间\n- systemd-analyze blame 查看启动占用的时间\n- udisk.server 挂载分区的\n","slug":"011-Linux系统启动慢排查手册","published":1,"date":"2020-10-02T14:10:21.550Z","updated":"2020-10-02T14:10:21.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkj000l8p7l2ajwbfvq","content":"<h1 id=\"Linux系统启动慢排查\"><a href=\"#Linux系统启动慢排查\" class=\"headerlink\" title=\"Linux系统启动慢排查\"></a>Linux系统启动慢排查</h1><h2 id=\"排除指令\"><a href=\"#排除指令\" class=\"headerlink\" title=\"排除指令\"></a>排除指令</h2><ul>\n<li>systemd-cgls 查看服务的启动顺序</li>\n<li>systemd-analyze 查看启动时间</li>\n<li>systemd-analyze blame 查看启动占用的时间</li>\n<li>udisk.server 挂载分区的</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux系统启动慢排查\"><a href=\"#Linux系统启动慢排查\" class=\"headerlink\" title=\"Linux系统启动慢排查\"></a>Linux系统启动慢排查</h1><h2 id=\"排除指令\"><a href=\"#排除指令\" class=\"headerlink\" title=\"排除指令\"></a>排除指令</h2><ul>\n<li>systemd-cgls 查看服务的启动顺序</li>\n<li>systemd-analyze 查看启动时间</li>\n<li>systemd-analyze blame 查看启动占用的时间</li>\n<li>udisk.server 挂载分区的</li>\n</ul>\n"},{"title":"vim脚本提取文件名","time":"2019-12-29 21:45","notebook":"blog","_content":"\n#  vim脚本提取文件名\n\n## 简介\n\n创建文件时，希望直接生成文件标题\n\n## 快捷键\n\n- vimrc支持函数expand，:h expand可以查看帮助\n```\n:echo expand('%:t')     my.txt  name of file ('tail')\n:echo expand('%:p')     /abc/def/my.txt full path\n:echo expand('%:p:h')   /abc/def    directory containing file ('head')\n:echo expand('%:p:h:t') def First get the full path with :p (/abc/def/my.txt), then get the head of that with :h (/abc/def), then get the tail of that with :t (def)\n:echo expand('%:r')     my  name of file less one extension ('root')\n:echo expand('%:e')     txt name of file's extension ('extension')```\nFor more info run :help expand\n\nIf all that is wanted is to display the name of the current file, type Ctrl-G (or press 1 then Ctrl-G for the full path).\n\nWhen using @%, the name is displayed relative to the current directory.\n\nIn insert mode, type Ctrl-R then % to insert the name of the current file.\n\nIn command mode (after typing a colon), type Ctrl-R then % to insert the name of the current file. The inserted name can then be edited to create a similar name.\n\nIn normal mode, type \"%p to put the name of the current file after the cursor (or \"%P to insert the name before the cursor).\n\nThe following commands insert lines consisting of the full path of the current and alternate files into the buffer:\n\n:put =expand('%:p')\n:put =expand('#:p')\n```\n","source":"_posts/013-vim脚本提取文件名.md","raw":"---\ntitle: vim脚本提取文件名\ntime: 2019-12-29 21:45\ntags: Markdown,blog\nnotebook: blog\n---\n\n#  vim脚本提取文件名\n\n## 简介\n\n创建文件时，希望直接生成文件标题\n\n## 快捷键\n\n- vimrc支持函数expand，:h expand可以查看帮助\n```\n:echo expand('%:t')     my.txt  name of file ('tail')\n:echo expand('%:p')     /abc/def/my.txt full path\n:echo expand('%:p:h')   /abc/def    directory containing file ('head')\n:echo expand('%:p:h:t') def First get the full path with :p (/abc/def/my.txt), then get the head of that with :h (/abc/def), then get the tail of that with :t (def)\n:echo expand('%:r')     my  name of file less one extension ('root')\n:echo expand('%:e')     txt name of file's extension ('extension')```\nFor more info run :help expand\n\nIf all that is wanted is to display the name of the current file, type Ctrl-G (or press 1 then Ctrl-G for the full path).\n\nWhen using @%, the name is displayed relative to the current directory.\n\nIn insert mode, type Ctrl-R then % to insert the name of the current file.\n\nIn command mode (after typing a colon), type Ctrl-R then % to insert the name of the current file. The inserted name can then be edited to create a similar name.\n\nIn normal mode, type \"%p to put the name of the current file after the cursor (or \"%P to insert the name before the cursor).\n\nThe following commands insert lines consisting of the full path of the current and alternate files into the buffer:\n\n:put =expand('%:p')\n:put =expand('#:p')\n```\n","slug":"013-vim脚本提取文件名","published":1,"date":"2020-10-02T14:10:21.575Z","updated":"2020-10-02T14:10:21.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkk000n8p7ldfr898o7","content":"<h1 id=\"vim脚本提取文件名\"><a href=\"#vim脚本提取文件名\" class=\"headerlink\" title=\"vim脚本提取文件名\"></a>vim脚本提取文件名</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>创建文件时，希望直接生成文件标题</p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>vimrc支持函数expand，:h expand可以查看帮助<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:echo expand(&#39;%:t&#39;)     my.txt  name of file (&#39;tail&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:p&#39;)     &#x2F;abc&#x2F;def&#x2F;my.txt full path</span><br><span class=\"line\">:echo expand(&#39;%:p:h&#39;)   &#x2F;abc&#x2F;def    directory containing file (&#39;head&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:p:h:t&#39;) def First get the full path with :p (&#x2F;abc&#x2F;def&#x2F;my.txt), then get the head of that with :h (&#x2F;abc&#x2F;def), then get the tail of that with :t (def)</span><br><span class=\"line\">:echo expand(&#39;%:r&#39;)     my  name of file less one extension (&#39;root&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:e&#39;)     txt name of file&#39;s extension (&#39;extension&#39;)&#96;&#96;&#96;</span><br><span class=\"line\">For more info run :help expand</span><br><span class=\"line\"></span><br><span class=\"line\">If all that is wanted is to display the name of the current file, type Ctrl-G (or press 1 then Ctrl-G for the full path).</span><br><span class=\"line\"></span><br><span class=\"line\">When using @%, the name is displayed relative to the current directory.</span><br><span class=\"line\"></span><br><span class=\"line\">In insert mode, type Ctrl-R then % to insert the name of the current file.</span><br><span class=\"line\"></span><br><span class=\"line\">In command mode (after typing a colon), type Ctrl-R then % to insert the name of the current file. The inserted name can then be edited to create a similar name.</span><br><span class=\"line\"></span><br><span class=\"line\">In normal mode, type &quot;%p to put the name of the current file after the cursor (or &quot;%P to insert the name before the cursor).</span><br><span class=\"line\"></span><br><span class=\"line\">The following commands insert lines consisting of the full path of the current and alternate files into the buffer:</span><br><span class=\"line\"></span><br><span class=\"line\">:put &#x3D;expand(&#39;%:p&#39;)</span><br><span class=\"line\">:put &#x3D;expand(&#39;#:p&#39;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vim脚本提取文件名\"><a href=\"#vim脚本提取文件名\" class=\"headerlink\" title=\"vim脚本提取文件名\"></a>vim脚本提取文件名</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>创建文件时，希望直接生成文件标题</p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>vimrc支持函数expand，:h expand可以查看帮助<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:echo expand(&#39;%:t&#39;)     my.txt  name of file (&#39;tail&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:p&#39;)     &#x2F;abc&#x2F;def&#x2F;my.txt full path</span><br><span class=\"line\">:echo expand(&#39;%:p:h&#39;)   &#x2F;abc&#x2F;def    directory containing file (&#39;head&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:p:h:t&#39;) def First get the full path with :p (&#x2F;abc&#x2F;def&#x2F;my.txt), then get the head of that with :h (&#x2F;abc&#x2F;def), then get the tail of that with :t (def)</span><br><span class=\"line\">:echo expand(&#39;%:r&#39;)     my  name of file less one extension (&#39;root&#39;)</span><br><span class=\"line\">:echo expand(&#39;%:e&#39;)     txt name of file&#39;s extension (&#39;extension&#39;)&#96;&#96;&#96;</span><br><span class=\"line\">For more info run :help expand</span><br><span class=\"line\"></span><br><span class=\"line\">If all that is wanted is to display the name of the current file, type Ctrl-G (or press 1 then Ctrl-G for the full path).</span><br><span class=\"line\"></span><br><span class=\"line\">When using @%, the name is displayed relative to the current directory.</span><br><span class=\"line\"></span><br><span class=\"line\">In insert mode, type Ctrl-R then % to insert the name of the current file.</span><br><span class=\"line\"></span><br><span class=\"line\">In command mode (after typing a colon), type Ctrl-R then % to insert the name of the current file. The inserted name can then be edited to create a similar name.</span><br><span class=\"line\"></span><br><span class=\"line\">In normal mode, type &quot;%p to put the name of the current file after the cursor (or &quot;%P to insert the name before the cursor).</span><br><span class=\"line\"></span><br><span class=\"line\">The following commands insert lines consisting of the full path of the current and alternate files into the buffer:</span><br><span class=\"line\"></span><br><span class=\"line\">:put &#x3D;expand(&#39;%:p&#39;)</span><br><span class=\"line\">:put &#x3D;expand(&#39;#:p&#39;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"vim插件管理","time":"2019-12-29 22:32","notebook":"blog","_content":"\n# vim插件管理\n\n## 使用vim-plug管理vim插件\n\n- vim-plug 非常好用\n\n## 修改`~/.vimrc`配置文件后，如何重新加载\n\n- 方法1 `source %`\n- 方法2 `so ~/.vimrc`\n\n","source":"_posts/014-vim插件管理.md","raw":"---\ntitle: vim插件管理\ntime: 2019-12-29 22:32\ntags: Markdown,blog\nnotebook: blog\n---\n\n# vim插件管理\n\n## 使用vim-plug管理vim插件\n\n- vim-plug 非常好用\n\n## 修改`~/.vimrc`配置文件后，如何重新加载\n\n- 方法1 `source %`\n- 方法2 `so ~/.vimrc`\n\n","slug":"014-vim插件管理","published":1,"date":"2020-10-02T14:10:21.585Z","updated":"2020-10-02T14:10:21.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkl000q8p7ldj314zyt","content":"<h1 id=\"vim插件管理\"><a href=\"#vim插件管理\" class=\"headerlink\" title=\"vim插件管理\"></a>vim插件管理</h1><h2 id=\"使用vim-plug管理vim插件\"><a href=\"#使用vim-plug管理vim插件\" class=\"headerlink\" title=\"使用vim-plug管理vim插件\"></a>使用vim-plug管理vim插件</h2><ul>\n<li>vim-plug 非常好用</li>\n</ul>\n<h2 id=\"修改-vimrc配置文件后，如何重新加载\"><a href=\"#修改-vimrc配置文件后，如何重新加载\" class=\"headerlink\" title=\"修改~/.vimrc配置文件后，如何重新加载\"></a>修改<code>~/.vimrc</code>配置文件后，如何重新加载</h2><ul>\n<li>方法1 <code>source %</code></li>\n<li>方法2 <code>so ~/.vimrc</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vim插件管理\"><a href=\"#vim插件管理\" class=\"headerlink\" title=\"vim插件管理\"></a>vim插件管理</h1><h2 id=\"使用vim-plug管理vim插件\"><a href=\"#使用vim-plug管理vim插件\" class=\"headerlink\" title=\"使用vim-plug管理vim插件\"></a>使用vim-plug管理vim插件</h2><ul>\n<li>vim-plug 非常好用</li>\n</ul>\n<h2 id=\"修改-vimrc配置文件后，如何重新加载\"><a href=\"#修改-vimrc配置文件后，如何重新加载\" class=\"headerlink\" title=\"修改~/.vimrc配置文件后，如何重新加载\"></a>修改<code>~/.vimrc</code>配置文件后，如何重新加载</h2><ul>\n<li>方法1 <code>source %</code></li>\n<li>方法2 <code>so ~/.vimrc</code></li>\n</ul>\n"},{"title":"Emacs常用技巧","time":"2019-12-30 13:48","notebook":"blog","_content":"\n# Emacs常用技巧\n\n\n## 简介\n\nOrg-Mode管理你的生活\n\n## 常用快捷键\n\n- 转接文件 `C-r f`\n\n### 文件操作\n\n- C-x C-f 读取文件到Emacs\n- C-x r 只读的方式打开一个文件\n- C-x C-q 清除一个窗口的只读属性\n- C-x C-s 保存文件到磁盘\n- C-x s 保存所有文件\n- C-x i 插入其它文件的内容到当前缓冲\n- C-x C-v 用将要读取的文件替换当前文件\n- C-x C-w 将当前缓冲写入指定的文件\n- C-x C-q Version control checkin/checkout \n\n### 输入TAB\n\n- C-q Tab\n\n### 阅读模式\n\n- C-L 屏幕重绘，光标行到屏幕中央\n\n## 安装配置额外的包\n\n- .spacemacs配置文件\n- 将包名添加到 dotspacemacs-additional-packages 这个变量中去\n","source":"_posts/015-Emacs常用技巧.md","raw":"---\ntitle: Emacs常用技巧\ntime: 2019-12-30 13:48\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Emacs常用技巧\n\n\n## 简介\n\nOrg-Mode管理你的生活\n\n## 常用快捷键\n\n- 转接文件 `C-r f`\n\n### 文件操作\n\n- C-x C-f 读取文件到Emacs\n- C-x r 只读的方式打开一个文件\n- C-x C-q 清除一个窗口的只读属性\n- C-x C-s 保存文件到磁盘\n- C-x s 保存所有文件\n- C-x i 插入其它文件的内容到当前缓冲\n- C-x C-v 用将要读取的文件替换当前文件\n- C-x C-w 将当前缓冲写入指定的文件\n- C-x C-q Version control checkin/checkout \n\n### 输入TAB\n\n- C-q Tab\n\n### 阅读模式\n\n- C-L 屏幕重绘，光标行到屏幕中央\n\n## 安装配置额外的包\n\n- .spacemacs配置文件\n- 将包名添加到 dotspacemacs-additional-packages 这个变量中去\n","slug":"015-Emacs常用技巧","published":1,"date":"2020-10-02T14:10:21.596Z","updated":"2020-10-02T14:10:21.602Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkm000s8p7l828q92pb","content":"<h1 id=\"Emacs常用技巧\"><a href=\"#Emacs常用技巧\" class=\"headerlink\" title=\"Emacs常用技巧\"></a>Emacs常用技巧</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Org-Mode管理你的生活</p>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><ul>\n<li>转接文件 <code>C-r f</code></li>\n</ul>\n<h3 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h3><ul>\n<li>C-x C-f 读取文件到Emacs</li>\n<li>C-x r 只读的方式打开一个文件</li>\n<li>C-x C-q 清除一个窗口的只读属性</li>\n<li>C-x C-s 保存文件到磁盘</li>\n<li>C-x s 保存所有文件</li>\n<li>C-x i 插入其它文件的内容到当前缓冲</li>\n<li>C-x C-v 用将要读取的文件替换当前文件</li>\n<li>C-x C-w 将当前缓冲写入指定的文件</li>\n<li>C-x C-q Version control checkin/checkout </li>\n</ul>\n<h3 id=\"输入TAB\"><a href=\"#输入TAB\" class=\"headerlink\" title=\"输入TAB\"></a>输入TAB</h3><ul>\n<li>C-q Tab</li>\n</ul>\n<h3 id=\"阅读模式\"><a href=\"#阅读模式\" class=\"headerlink\" title=\"阅读模式\"></a>阅读模式</h3><ul>\n<li>C-L 屏幕重绘，光标行到屏幕中央</li>\n</ul>\n<h2 id=\"安装配置额外的包\"><a href=\"#安装配置额外的包\" class=\"headerlink\" title=\"安装配置额外的包\"></a>安装配置额外的包</h2><ul>\n<li>.spacemacs配置文件</li>\n<li>将包名添加到 dotspacemacs-additional-packages 这个变量中去</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Emacs常用技巧\"><a href=\"#Emacs常用技巧\" class=\"headerlink\" title=\"Emacs常用技巧\"></a>Emacs常用技巧</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Org-Mode管理你的生活</p>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><ul>\n<li>转接文件 <code>C-r f</code></li>\n</ul>\n<h3 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h3><ul>\n<li>C-x C-f 读取文件到Emacs</li>\n<li>C-x r 只读的方式打开一个文件</li>\n<li>C-x C-q 清除一个窗口的只读属性</li>\n<li>C-x C-s 保存文件到磁盘</li>\n<li>C-x s 保存所有文件</li>\n<li>C-x i 插入其它文件的内容到当前缓冲</li>\n<li>C-x C-v 用将要读取的文件替换当前文件</li>\n<li>C-x C-w 将当前缓冲写入指定的文件</li>\n<li>C-x C-q Version control checkin/checkout </li>\n</ul>\n<h3 id=\"输入TAB\"><a href=\"#输入TAB\" class=\"headerlink\" title=\"输入TAB\"></a>输入TAB</h3><ul>\n<li>C-q Tab</li>\n</ul>\n<h3 id=\"阅读模式\"><a href=\"#阅读模式\" class=\"headerlink\" title=\"阅读模式\"></a>阅读模式</h3><ul>\n<li>C-L 屏幕重绘，光标行到屏幕中央</li>\n</ul>\n<h2 id=\"安装配置额外的包\"><a href=\"#安装配置额外的包\" class=\"headerlink\" title=\"安装配置额外的包\"></a>安装配置额外的包</h2><ul>\n<li>.spacemacs配置文件</li>\n<li>将包名添加到 dotspacemacs-additional-packages 这个变量中去</li>\n</ul>\n"},{"title":"Linux命令行常用快捷键","time":"2019-12-31 11:28","notebook":"blog","_content":"\n# Linux命令行常用快捷键\n\n以下命令为Linux中高频发常用命令，适用于Linux中远程连接客户端软件“SecureCTR”和“Xshell” 。其他远程客户端软件使用情况基本与之类似\n\n## 高频命令\n\n- 补全命令\n    - tab   补全命令，每补全一个字符至少两次。\n\n- 移动光标快捷键：\n    - Ctrl+a   光标回到命令行首。\n    - Ctrl+e    光标回到命令行末。\n    - Ctrl+f   光标向右移动一个字符。\n    - Ctrl+b   光标向左移动一个字符。\n\n- 中断命令：\n    - Ctrl+c  中断正在执行的任务命令或者删除整行。\n\n- 暂停命令：\n    - Ctrl+z   暂停正在运行行中的任务。\n\n## 低频命令\n\n- 复制快捷键：\n    - Ctrl+Insert   复制命令（选中字符进行复制）\n\n- 粘贴快捷键：\n    - Ctrl+Insert   粘贴命令 \n\n- 剪切命令：\n    - Ctrl+k  剪切光标处到行尾处的字符。（有删除的作用）\n    - Ctrl+u  剪切光标处到行首处的字符。（有删除的作用）\n    - Ctrl+w  剪切光标前的一个单词（有删除的作用）\n    - Ctrl+y   粘贴Ctrl+k 、Ctrl+u、Ctrl+w  剪切/删除的文本\n\n- 清除命令：\n    - Ctrl+h   删除光标前一个字符，等同于‘’Backspance‘’\n    - Del       删除光标后的一个字符。\n    - Ctrl+l    清除屏幕上所有内容，并开始新的一行，\n\n- 锁定、 解锁命令：\n    - Ctrl+s   锁定界面，使之无法输入内容。\n    - Ctrl+q   解开Ctrl+s的锁定界面，进行输入\n\n- 重复使用命令：\n    - Ctrl+d   退出当前shell命令行，也可以直接关闭shell运行。\n    - Ctrl+r   搜索命令行中使用过的命令记录。\n    - Ctrl+g   从正在执行Ctrl+r的搜索中退出。\n\n- Esc相关命令：\n    - Esc+.    获取上一条命令的最后部分（空格分隔）\n    - Esc+b   移动到当前单词的开头。\n    - Esc+f    移动到当前单词的结尾。\n\n## 引文\n\n- [Linux命令行常用快捷键](https://www.cnblogs.com/wangxiaopang/p/10828471.html)\n\n","source":"_posts/016-Linux命令行常用快捷键.md","raw":"---\ntitle: Linux命令行常用快捷键\ntime: 2019-12-31 11:28\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Linux命令行常用快捷键\n\n以下命令为Linux中高频发常用命令，适用于Linux中远程连接客户端软件“SecureCTR”和“Xshell” 。其他远程客户端软件使用情况基本与之类似\n\n## 高频命令\n\n- 补全命令\n    - tab   补全命令，每补全一个字符至少两次。\n\n- 移动光标快捷键：\n    - Ctrl+a   光标回到命令行首。\n    - Ctrl+e    光标回到命令行末。\n    - Ctrl+f   光标向右移动一个字符。\n    - Ctrl+b   光标向左移动一个字符。\n\n- 中断命令：\n    - Ctrl+c  中断正在执行的任务命令或者删除整行。\n\n- 暂停命令：\n    - Ctrl+z   暂停正在运行行中的任务。\n\n## 低频命令\n\n- 复制快捷键：\n    - Ctrl+Insert   复制命令（选中字符进行复制）\n\n- 粘贴快捷键：\n    - Ctrl+Insert   粘贴命令 \n\n- 剪切命令：\n    - Ctrl+k  剪切光标处到行尾处的字符。（有删除的作用）\n    - Ctrl+u  剪切光标处到行首处的字符。（有删除的作用）\n    - Ctrl+w  剪切光标前的一个单词（有删除的作用）\n    - Ctrl+y   粘贴Ctrl+k 、Ctrl+u、Ctrl+w  剪切/删除的文本\n\n- 清除命令：\n    - Ctrl+h   删除光标前一个字符，等同于‘’Backspance‘’\n    - Del       删除光标后的一个字符。\n    - Ctrl+l    清除屏幕上所有内容，并开始新的一行，\n\n- 锁定、 解锁命令：\n    - Ctrl+s   锁定界面，使之无法输入内容。\n    - Ctrl+q   解开Ctrl+s的锁定界面，进行输入\n\n- 重复使用命令：\n    - Ctrl+d   退出当前shell命令行，也可以直接关闭shell运行。\n    - Ctrl+r   搜索命令行中使用过的命令记录。\n    - Ctrl+g   从正在执行Ctrl+r的搜索中退出。\n\n- Esc相关命令：\n    - Esc+.    获取上一条命令的最后部分（空格分隔）\n    - Esc+b   移动到当前单词的开头。\n    - Esc+f    移动到当前单词的结尾。\n\n## 引文\n\n- [Linux命令行常用快捷键](https://www.cnblogs.com/wangxiaopang/p/10828471.html)\n\n","slug":"016-Linux命令行常用快捷键","published":1,"date":"2020-10-02T14:10:21.625Z","updated":"2020-10-02T14:10:21.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dko000v8p7ld9kxang3","content":"<h1 id=\"Linux命令行常用快捷键\"><a href=\"#Linux命令行常用快捷键\" class=\"headerlink\" title=\"Linux命令行常用快捷键\"></a>Linux命令行常用快捷键</h1><p>以下命令为Linux中高频发常用命令，适用于Linux中远程连接客户端软件“SecureCTR”和“Xshell” 。其他远程客户端软件使用情况基本与之类似</p>\n<h2 id=\"高频命令\"><a href=\"#高频命令\" class=\"headerlink\" title=\"高频命令\"></a>高频命令</h2><ul>\n<li><p>补全命令</p>\n<ul>\n<li>tab   补全命令，每补全一个字符至少两次。</li>\n</ul>\n</li>\n<li><p>移动光标快捷键：</p>\n<ul>\n<li>Ctrl+a   光标回到命令行首。</li>\n<li>Ctrl+e    光标回到命令行末。</li>\n<li>Ctrl+f   光标向右移动一个字符。</li>\n<li>Ctrl+b   光标向左移动一个字符。</li>\n</ul>\n</li>\n<li><p>中断命令：</p>\n<ul>\n<li>Ctrl+c  中断正在执行的任务命令或者删除整行。</li>\n</ul>\n</li>\n<li><p>暂停命令：</p>\n<ul>\n<li>Ctrl+z   暂停正在运行行中的任务。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"低频命令\"><a href=\"#低频命令\" class=\"headerlink\" title=\"低频命令\"></a>低频命令</h2><ul>\n<li><p>复制快捷键：</p>\n<ul>\n<li>Ctrl+Insert   复制命令（选中字符进行复制）</li>\n</ul>\n</li>\n<li><p>粘贴快捷键：</p>\n<ul>\n<li>Ctrl+Insert   粘贴命令 </li>\n</ul>\n</li>\n<li><p>剪切命令：</p>\n<ul>\n<li>Ctrl+k  剪切光标处到行尾处的字符。（有删除的作用）</li>\n<li>Ctrl+u  剪切光标处到行首处的字符。（有删除的作用）</li>\n<li>Ctrl+w  剪切光标前的一个单词（有删除的作用）</li>\n<li>Ctrl+y   粘贴Ctrl+k 、Ctrl+u、Ctrl+w  剪切/删除的文本</li>\n</ul>\n</li>\n<li><p>清除命令：</p>\n<ul>\n<li>Ctrl+h   删除光标前一个字符，等同于‘’Backspance‘’</li>\n<li>Del       删除光标后的一个字符。</li>\n<li>Ctrl+l    清除屏幕上所有内容，并开始新的一行，</li>\n</ul>\n</li>\n<li><p>锁定、 解锁命令：</p>\n<ul>\n<li>Ctrl+s   锁定界面，使之无法输入内容。</li>\n<li>Ctrl+q   解开Ctrl+s的锁定界面，进行输入</li>\n</ul>\n</li>\n<li><p>重复使用命令：</p>\n<ul>\n<li>Ctrl+d   退出当前shell命令行，也可以直接关闭shell运行。</li>\n<li>Ctrl+r   搜索命令行中使用过的命令记录。</li>\n<li>Ctrl+g   从正在执行Ctrl+r的搜索中退出。</li>\n</ul>\n</li>\n<li><p>Esc相关命令：</p>\n<ul>\n<li>Esc+.    获取上一条命令的最后部分（空格分隔）</li>\n<li>Esc+b   移动到当前单词的开头。</li>\n<li>Esc+f    移动到当前单词的结尾。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"https://www.cnblogs.com/wangxiaopang/p/10828471.html\">Linux命令行常用快捷键</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux命令行常用快捷键\"><a href=\"#Linux命令行常用快捷键\" class=\"headerlink\" title=\"Linux命令行常用快捷键\"></a>Linux命令行常用快捷键</h1><p>以下命令为Linux中高频发常用命令，适用于Linux中远程连接客户端软件“SecureCTR”和“Xshell” 。其他远程客户端软件使用情况基本与之类似</p>\n<h2 id=\"高频命令\"><a href=\"#高频命令\" class=\"headerlink\" title=\"高频命令\"></a>高频命令</h2><ul>\n<li><p>补全命令</p>\n<ul>\n<li>tab   补全命令，每补全一个字符至少两次。</li>\n</ul>\n</li>\n<li><p>移动光标快捷键：</p>\n<ul>\n<li>Ctrl+a   光标回到命令行首。</li>\n<li>Ctrl+e    光标回到命令行末。</li>\n<li>Ctrl+f   光标向右移动一个字符。</li>\n<li>Ctrl+b   光标向左移动一个字符。</li>\n</ul>\n</li>\n<li><p>中断命令：</p>\n<ul>\n<li>Ctrl+c  中断正在执行的任务命令或者删除整行。</li>\n</ul>\n</li>\n<li><p>暂停命令：</p>\n<ul>\n<li>Ctrl+z   暂停正在运行行中的任务。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"低频命令\"><a href=\"#低频命令\" class=\"headerlink\" title=\"低频命令\"></a>低频命令</h2><ul>\n<li><p>复制快捷键：</p>\n<ul>\n<li>Ctrl+Insert   复制命令（选中字符进行复制）</li>\n</ul>\n</li>\n<li><p>粘贴快捷键：</p>\n<ul>\n<li>Ctrl+Insert   粘贴命令 </li>\n</ul>\n</li>\n<li><p>剪切命令：</p>\n<ul>\n<li>Ctrl+k  剪切光标处到行尾处的字符。（有删除的作用）</li>\n<li>Ctrl+u  剪切光标处到行首处的字符。（有删除的作用）</li>\n<li>Ctrl+w  剪切光标前的一个单词（有删除的作用）</li>\n<li>Ctrl+y   粘贴Ctrl+k 、Ctrl+u、Ctrl+w  剪切/删除的文本</li>\n</ul>\n</li>\n<li><p>清除命令：</p>\n<ul>\n<li>Ctrl+h   删除光标前一个字符，等同于‘’Backspance‘’</li>\n<li>Del       删除光标后的一个字符。</li>\n<li>Ctrl+l    清除屏幕上所有内容，并开始新的一行，</li>\n</ul>\n</li>\n<li><p>锁定、 解锁命令：</p>\n<ul>\n<li>Ctrl+s   锁定界面，使之无法输入内容。</li>\n<li>Ctrl+q   解开Ctrl+s的锁定界面，进行输入</li>\n</ul>\n</li>\n<li><p>重复使用命令：</p>\n<ul>\n<li>Ctrl+d   退出当前shell命令行，也可以直接关闭shell运行。</li>\n<li>Ctrl+r   搜索命令行中使用过的命令记录。</li>\n<li>Ctrl+g   从正在执行Ctrl+r的搜索中退出。</li>\n</ul>\n</li>\n<li><p>Esc相关命令：</p>\n<ul>\n<li>Esc+.    获取上一条命令的最后部分（空格分隔）</li>\n<li>Esc+b   移动到当前单词的开头。</li>\n<li>Esc+f    移动到当前单词的结尾。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"https://www.cnblogs.com/wangxiaopang/p/10828471.html\">Linux命令行常用快捷键</a></li>\n</ul>\n"},{"title":"年终总结如何写","time":"2019-12-31 13:52","notebook":"blog","_content":"\n# 年终总结如何写\n\n## 主要从六个方面入手\n\n1. 要充分认识到**年终总结的重要意义**\n2. 工作回顾，对工作完成情况进行总结，全面总结成绩\n3. 分析取得成绩的原因\n4. 分析导致工作目标没有达成的失误和问题\n5. 对当前形势的展望与分析\n6. 下年度的展望和安排，下一年的工作计划\n\n## 年总总结的重要意义\n\n- 年终总结是一个人对自己过去一年中所做成绩的分析和总结，对查漏补缺，推动工作前进、提高工作素质和能力具有重要的作用。\n\n\n","source":"_posts/017-年终总结如何写.md","raw":"---\ntitle: 年终总结如何写\ntime: 2019-12-31 13:52\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 年终总结如何写\n\n## 主要从六个方面入手\n\n1. 要充分认识到**年终总结的重要意义**\n2. 工作回顾，对工作完成情况进行总结，全面总结成绩\n3. 分析取得成绩的原因\n4. 分析导致工作目标没有达成的失误和问题\n5. 对当前形势的展望与分析\n6. 下年度的展望和安排，下一年的工作计划\n\n## 年总总结的重要意义\n\n- 年终总结是一个人对自己过去一年中所做成绩的分析和总结，对查漏补缺，推动工作前进、提高工作素质和能力具有重要的作用。\n\n\n","slug":"017-年终总结如何写","published":1,"date":"2020-10-02T14:10:21.668Z","updated":"2020-10-02T14:10:21.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkp000x8p7l1p0b93wv","content":"<h1 id=\"年终总结如何写\"><a href=\"#年终总结如何写\" class=\"headerlink\" title=\"年终总结如何写\"></a>年终总结如何写</h1><h2 id=\"主要从六个方面入手\"><a href=\"#主要从六个方面入手\" class=\"headerlink\" title=\"主要从六个方面入手\"></a>主要从六个方面入手</h2><ol>\n<li>要充分认识到<strong>年终总结的重要意义</strong></li>\n<li>工作回顾，对工作完成情况进行总结，全面总结成绩</li>\n<li>分析取得成绩的原因</li>\n<li>分析导致工作目标没有达成的失误和问题</li>\n<li>对当前形势的展望与分析</li>\n<li>下年度的展望和安排，下一年的工作计划</li>\n</ol>\n<h2 id=\"年总总结的重要意义\"><a href=\"#年总总结的重要意义\" class=\"headerlink\" title=\"年总总结的重要意义\"></a>年总总结的重要意义</h2><ul>\n<li>年终总结是一个人对自己过去一年中所做成绩的分析和总结，对查漏补缺，推动工作前进、提高工作素质和能力具有重要的作用。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"年终总结如何写\"><a href=\"#年终总结如何写\" class=\"headerlink\" title=\"年终总结如何写\"></a>年终总结如何写</h1><h2 id=\"主要从六个方面入手\"><a href=\"#主要从六个方面入手\" class=\"headerlink\" title=\"主要从六个方面入手\"></a>主要从六个方面入手</h2><ol>\n<li>要充分认识到<strong>年终总结的重要意义</strong></li>\n<li>工作回顾，对工作完成情况进行总结，全面总结成绩</li>\n<li>分析取得成绩的原因</li>\n<li>分析导致工作目标没有达成的失误和问题</li>\n<li>对当前形势的展望与分析</li>\n<li>下年度的展望和安排，下一年的工作计划</li>\n</ol>\n<h2 id=\"年总总结的重要意义\"><a href=\"#年总总结的重要意义\" class=\"headerlink\" title=\"年总总结的重要意义\"></a>年总总结的重要意义</h2><ul>\n<li>年终总结是一个人对自己过去一年中所做成绩的分析和总结，对查漏补缺，推动工作前进、提高工作素质和能力具有重要的作用。</li>\n</ul>\n"},{"title":"vim分屏标签","time":"2019-12-31 17:43","notebook":"blog","_content":"\n# vim分屏标签\n\n## tab标签\n\n- 创建新tab :tabnew\n- 关闭当前tab :tabc\n- 关闭其他tab :tabo\n- 查看所有的tab :tabs\n- 前一个 :tabp\n- 后一个 :tabn\n\n## 分屏\n\n- 上下分屏 sp\n- 左右分屏 vsp\n- 关闭当前屏幕 Ctrl+W c\n\n","source":"_posts/019-vim分屏标签.md","raw":"---\ntitle: vim分屏标签\ntime: 2019-12-31 17:43\ntags: Markdown,blog\nnotebook: blog\n---\n\n# vim分屏标签\n\n## tab标签\n\n- 创建新tab :tabnew\n- 关闭当前tab :tabc\n- 关闭其他tab :tabo\n- 查看所有的tab :tabs\n- 前一个 :tabp\n- 后一个 :tabn\n\n## 分屏\n\n- 上下分屏 sp\n- 左右分屏 vsp\n- 关闭当前屏幕 Ctrl+W c\n\n","slug":"019-vim分屏标签","published":1,"date":"2020-10-02T14:10:21.698Z","updated":"2020-10-02T14:10:21.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkq00108p7l0yhefi2d","content":"<h1 id=\"vim分屏标签\"><a href=\"#vim分屏标签\" class=\"headerlink\" title=\"vim分屏标签\"></a>vim分屏标签</h1><h2 id=\"tab标签\"><a href=\"#tab标签\" class=\"headerlink\" title=\"tab标签\"></a>tab标签</h2><ul>\n<li>创建新tab :tabnew</li>\n<li>关闭当前tab :tabc</li>\n<li>关闭其他tab :tabo</li>\n<li>查看所有的tab :tabs</li>\n<li>前一个 :tabp</li>\n<li>后一个 :tabn</li>\n</ul>\n<h2 id=\"分屏\"><a href=\"#分屏\" class=\"headerlink\" title=\"分屏\"></a>分屏</h2><ul>\n<li>上下分屏 sp</li>\n<li>左右分屏 vsp</li>\n<li>关闭当前屏幕 Ctrl+W c</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vim分屏标签\"><a href=\"#vim分屏标签\" class=\"headerlink\" title=\"vim分屏标签\"></a>vim分屏标签</h1><h2 id=\"tab标签\"><a href=\"#tab标签\" class=\"headerlink\" title=\"tab标签\"></a>tab标签</h2><ul>\n<li>创建新tab :tabnew</li>\n<li>关闭当前tab :tabc</li>\n<li>关闭其他tab :tabo</li>\n<li>查看所有的tab :tabs</li>\n<li>前一个 :tabp</li>\n<li>后一个 :tabn</li>\n</ul>\n<h2 id=\"分屏\"><a href=\"#分屏\" class=\"headerlink\" title=\"分屏\"></a>分屏</h2><ul>\n<li>上下分屏 sp</li>\n<li>左右分屏 vsp</li>\n<li>关闭当前屏幕 Ctrl+W c</li>\n</ul>\n"},{"title":"如何写好年终总结","time":"2019-12-31 14:08","notebook":"blog","_content":"\n# 如何写好年终总结\n\n每年临近年底都是企业进行年度工作总结的阶段，而工作总结则是每一位管理者必须面对的课题。如何写好一份年终工作总结是许多管理者头疼的问题，既不能太过“格式化”， 又不能写成“流水账”，要不自己不满意，上司也不满意。一篇**好的年终总结是职场人士有利的竞争筹码**，甚至是**升职加薪的“助推器”**。\n\n## 为什么要写年终总结？\n\n不要小看工作总结，或大或小，都与我们的绩效，升迁，加薪，去留息息相关。聪明的人不会仅仅在工作总结里总结，而是会**通过汇报的机会争取资源**，毕竟，工作总结是制度规定里面允许你和上级领导沟通的一种重要途径。\n\n对于领导来说，他们不会盯着每个员工的日常工作情况，而且时间的跨度比较大，年初做的事情，到了年底，不**提醒下领导**，都忘记了，年终总结有助于了解员工的工作成果，工作状态，关注员工在工作中的成长，看到员工哪方面有所欠缺需要弥补，那些地方做的不对需要调整，领导根据了解到的情况，在未来的工作中给予帮助和支持；领导也会在你自己的分析与调整中，发现你的潜力，会给你一些机会，让你更好的成长。\n\n**对于自己来说**，为自己一年的工作经历做梳理归纳，从中总结经验，做好复盘，发现自己的不足，然后做好改进计划，这种计划，实施，总结，发现不足，改进计划的**自我螺旋式成长**。在这个过程中，不断整理分析，最终形成自己的方法论，实践经验+理论知识，工作总结就是这样一个自身提高的机会，要用心看待这个事情。\n\n那怎么才能写出一份既能体现个人价值，又能讨领导欢心的年终总结呢？这里有个**套路**：“找找模版，整整数据，夸夸自己，表表忠心，复制黏贴，搞定”\n\n## 年终总结写什么\n\n### 工作成果回顾\n\n作为总结的第一部分，目的就是要**让领导最直观的知道过去的一年完成了那些工作？经历了怎样的过程？ 最终的结果如何？**\n\n很多人头疼内容怎么写，感觉无从下笔，可以采用记“流水账”的形式把一年的做过事情都列出来。不管三七二十一，只要做过的事情都写下来，借助OKR，包括时间，目标，关键结果，完成的情况，最好每一个条附上一个实例说明，全部列完以后，挑出重要的部分，然后根据你呈现方式的需要，做数据的统计。\n\n有了内容和数据以后，需要把它呈现出来， 可以使用不同的形式\n\n1. 时间轴\n最简单的是用时间轴，常用的时间轴有\n根据日期，比如月份，季度\n根据项目阶段，比如准备阶段，实施阶段，冲刺阶段，维护阶段，\n里程碑事件，比如用户数量突破xx, 成交金额突破xxx\n\n2. 关键词\n\n关键词很好理解，可以把一年的成绩做一个统计，比如说2018年，拿了2个大奖，得了3个荣誉，开发了多少新客户等等，这些数字就是关键词\n\n3. 重要性\n\n根据重要性排序把你的工作进行归类，按重要性进行排列，在工作中的重要性的潜规则就是领导最重视的就是最重要的。\n\n如今是数字时代，数据是多多益善，呈现的方式最好用图表，数据太枯燥，数据可以做成折现统计图，扇形统计图，条形统计图，对比表格等直观，可视的图表\n\n通过罗列出成果，用表格，图表展示出来，成果回顾可以给领导一个深刻的印象，为接下来的分析做好准备。\n\n### 总结自己的经验和不足\n\n这一份对自己过去一年做一个分析，你对自己过往的工作经历有什么看法，那些地方做的不错，那些地方存在不足，那些地方需要改进。\n\n对于领导来说，希望通过**了解员工的工作状态与其在工作中的成长**，所以其中内容要体现重点\n\n可以借助平衡计分卡（BSC）， 这是一种常见的绩效考核方式，针对每个问题说出2～3个具体点，主要不要假大空的废话\n1. 为公司贡献了什么？\n2. 为客户做了什么？\n3. 为自己学习了什么？\n4. 为下属做了什么？\n5. 为公司在管理和流程上做了什么？\n\n对于每个问题，那些对的好，那些做的不好，那些需要改进，都记下来。\n点出我们工作中有价值的成果，并且提炼经验，与公司同事共享，让别人也能从中获得价值。\n对于工作中的不足之处以及需要改进的地方，也需要列出来，这样也可以树立一个踏实，谦逊和可靠的形象。\n\n### 来年的改善和设定明年的目标规划\n\n针对自己的分析，你觉得在这些重要的环节和发现的问题中，有没有办法把事情做的更好或者解决存在的问题，可以把这些思考列出来，做一个行动计划\n\n更重要的是，一年过去了，有问题、有收获，更重要的是明年你的目标是什么？这里边可以跟你的领导去谈，看看公司的规划，领导对你的期望，也可以寻求领导资源和帮助， 然后给出你的打算、你的方向、你的目标。\n\n根据目标，开始做明年的规划，这里面需要用到SMART原则。\n\n### 最后记得感谢领导和同事\n\n年度总结，不能只谈自己的业绩，还要**感谢**那些支持你取得这些成绩和成长的领导和同事，感谢领导的支持，同事的帮助。\n\n### 好的模板\n\n写完了这些，我们需要有一个**好的呈现方式**，那就找一个好的模版，小编这里给你准备了PPT模版\n\n### 年终总结的禁忌\n\n- 避免主观感受或模糊不清的词汇\n    - 你觉得“这个任务我完成的挺好的”， 领导可不一定这么觉得，要用数据说话，比如用户增长多少，成交增加多少，效率提高多少等等\n    - 少用“差不多”，“还行吧”等不确定的词语，会让人家觉得你做事马虎。\n- 避免夸大其词或者轻描淡写\n    - 看你的工作总结都是你的直属领导，他对你的工作有一定的了解，面对领导吹牛的事情最好不要做。\n    - 但是总结中也不能轻描淡写，只有总结成绩，没有经验，成果以及影响的总结，没有亮点，这样领导会觉得你什么都没有做，觉得你可有可无。\n- 缺乏分析\n    -这类总结，只有总结工作和取得的成绩，没有发现工作中存在的问题，也没有进行认真的分析和研究，或者只是提困难，没有建设性的意见。对于未来，领导最看重的是你对工作看法，建议或者意见，通过这些看法领导可以看到你的潜力，然后培养你。如果没有分析，领导觉得你没有自己的看法，看不到你的潜力。\n- 避免花里胡哨，内容空洞\n    - “题目吸引人，格式很动人，内容恶心人”，注重形式而不注重事实，形式大于内容。这类总结没有实际意义\n\n### 总结\n\n世上有个不变的真理：只有从偶然的成功中寻获可复制的规律，才能从一个成功创造出另一个成功。年终总结不仅仅是升级交代的一项任务，更是一次自我的复盘和检验，把经验转化为能力的过程。\n\n## 引文\n\n- [如何写好年终工作总结？这是最全面的答案了 ](http://www.sohu.com/a/288014197_100091630)\n\n","source":"_posts/018-如何写好年终总结.md","raw":"---\ntitle: 如何写好年终总结\ntime: 2019-12-31 14:08\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 如何写好年终总结\n\n每年临近年底都是企业进行年度工作总结的阶段，而工作总结则是每一位管理者必须面对的课题。如何写好一份年终工作总结是许多管理者头疼的问题，既不能太过“格式化”， 又不能写成“流水账”，要不自己不满意，上司也不满意。一篇**好的年终总结是职场人士有利的竞争筹码**，甚至是**升职加薪的“助推器”**。\n\n## 为什么要写年终总结？\n\n不要小看工作总结，或大或小，都与我们的绩效，升迁，加薪，去留息息相关。聪明的人不会仅仅在工作总结里总结，而是会**通过汇报的机会争取资源**，毕竟，工作总结是制度规定里面允许你和上级领导沟通的一种重要途径。\n\n对于领导来说，他们不会盯着每个员工的日常工作情况，而且时间的跨度比较大，年初做的事情，到了年底，不**提醒下领导**，都忘记了，年终总结有助于了解员工的工作成果，工作状态，关注员工在工作中的成长，看到员工哪方面有所欠缺需要弥补，那些地方做的不对需要调整，领导根据了解到的情况，在未来的工作中给予帮助和支持；领导也会在你自己的分析与调整中，发现你的潜力，会给你一些机会，让你更好的成长。\n\n**对于自己来说**，为自己一年的工作经历做梳理归纳，从中总结经验，做好复盘，发现自己的不足，然后做好改进计划，这种计划，实施，总结，发现不足，改进计划的**自我螺旋式成长**。在这个过程中，不断整理分析，最终形成自己的方法论，实践经验+理论知识，工作总结就是这样一个自身提高的机会，要用心看待这个事情。\n\n那怎么才能写出一份既能体现个人价值，又能讨领导欢心的年终总结呢？这里有个**套路**：“找找模版，整整数据，夸夸自己，表表忠心，复制黏贴，搞定”\n\n## 年终总结写什么\n\n### 工作成果回顾\n\n作为总结的第一部分，目的就是要**让领导最直观的知道过去的一年完成了那些工作？经历了怎样的过程？ 最终的结果如何？**\n\n很多人头疼内容怎么写，感觉无从下笔，可以采用记“流水账”的形式把一年的做过事情都列出来。不管三七二十一，只要做过的事情都写下来，借助OKR，包括时间，目标，关键结果，完成的情况，最好每一个条附上一个实例说明，全部列完以后，挑出重要的部分，然后根据你呈现方式的需要，做数据的统计。\n\n有了内容和数据以后，需要把它呈现出来， 可以使用不同的形式\n\n1. 时间轴\n最简单的是用时间轴，常用的时间轴有\n根据日期，比如月份，季度\n根据项目阶段，比如准备阶段，实施阶段，冲刺阶段，维护阶段，\n里程碑事件，比如用户数量突破xx, 成交金额突破xxx\n\n2. 关键词\n\n关键词很好理解，可以把一年的成绩做一个统计，比如说2018年，拿了2个大奖，得了3个荣誉，开发了多少新客户等等，这些数字就是关键词\n\n3. 重要性\n\n根据重要性排序把你的工作进行归类，按重要性进行排列，在工作中的重要性的潜规则就是领导最重视的就是最重要的。\n\n如今是数字时代，数据是多多益善，呈现的方式最好用图表，数据太枯燥，数据可以做成折现统计图，扇形统计图，条形统计图，对比表格等直观，可视的图表\n\n通过罗列出成果，用表格，图表展示出来，成果回顾可以给领导一个深刻的印象，为接下来的分析做好准备。\n\n### 总结自己的经验和不足\n\n这一份对自己过去一年做一个分析，你对自己过往的工作经历有什么看法，那些地方做的不错，那些地方存在不足，那些地方需要改进。\n\n对于领导来说，希望通过**了解员工的工作状态与其在工作中的成长**，所以其中内容要体现重点\n\n可以借助平衡计分卡（BSC）， 这是一种常见的绩效考核方式，针对每个问题说出2～3个具体点，主要不要假大空的废话\n1. 为公司贡献了什么？\n2. 为客户做了什么？\n3. 为自己学习了什么？\n4. 为下属做了什么？\n5. 为公司在管理和流程上做了什么？\n\n对于每个问题，那些对的好，那些做的不好，那些需要改进，都记下来。\n点出我们工作中有价值的成果，并且提炼经验，与公司同事共享，让别人也能从中获得价值。\n对于工作中的不足之处以及需要改进的地方，也需要列出来，这样也可以树立一个踏实，谦逊和可靠的形象。\n\n### 来年的改善和设定明年的目标规划\n\n针对自己的分析，你觉得在这些重要的环节和发现的问题中，有没有办法把事情做的更好或者解决存在的问题，可以把这些思考列出来，做一个行动计划\n\n更重要的是，一年过去了，有问题、有收获，更重要的是明年你的目标是什么？这里边可以跟你的领导去谈，看看公司的规划，领导对你的期望，也可以寻求领导资源和帮助， 然后给出你的打算、你的方向、你的目标。\n\n根据目标，开始做明年的规划，这里面需要用到SMART原则。\n\n### 最后记得感谢领导和同事\n\n年度总结，不能只谈自己的业绩，还要**感谢**那些支持你取得这些成绩和成长的领导和同事，感谢领导的支持，同事的帮助。\n\n### 好的模板\n\n写完了这些，我们需要有一个**好的呈现方式**，那就找一个好的模版，小编这里给你准备了PPT模版\n\n### 年终总结的禁忌\n\n- 避免主观感受或模糊不清的词汇\n    - 你觉得“这个任务我完成的挺好的”， 领导可不一定这么觉得，要用数据说话，比如用户增长多少，成交增加多少，效率提高多少等等\n    - 少用“差不多”，“还行吧”等不确定的词语，会让人家觉得你做事马虎。\n- 避免夸大其词或者轻描淡写\n    - 看你的工作总结都是你的直属领导，他对你的工作有一定的了解，面对领导吹牛的事情最好不要做。\n    - 但是总结中也不能轻描淡写，只有总结成绩，没有经验，成果以及影响的总结，没有亮点，这样领导会觉得你什么都没有做，觉得你可有可无。\n- 缺乏分析\n    -这类总结，只有总结工作和取得的成绩，没有发现工作中存在的问题，也没有进行认真的分析和研究，或者只是提困难，没有建设性的意见。对于未来，领导最看重的是你对工作看法，建议或者意见，通过这些看法领导可以看到你的潜力，然后培养你。如果没有分析，领导觉得你没有自己的看法，看不到你的潜力。\n- 避免花里胡哨，内容空洞\n    - “题目吸引人，格式很动人，内容恶心人”，注重形式而不注重事实，形式大于内容。这类总结没有实际意义\n\n### 总结\n\n世上有个不变的真理：只有从偶然的成功中寻获可复制的规律，才能从一个成功创造出另一个成功。年终总结不仅仅是升级交代的一项任务，更是一次自我的复盘和检验，把经验转化为能力的过程。\n\n## 引文\n\n- [如何写好年终工作总结？这是最全面的答案了 ](http://www.sohu.com/a/288014197_100091630)\n\n","slug":"018-如何写好年终总结","published":1,"date":"2020-10-02T14:10:21.684Z","updated":"2020-10-02T14:10:21.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkr00128p7l9fc94rnp","content":"<h1 id=\"如何写好年终总结\"><a href=\"#如何写好年终总结\" class=\"headerlink\" title=\"如何写好年终总结\"></a>如何写好年终总结</h1><p>每年临近年底都是企业进行年度工作总结的阶段，而工作总结则是每一位管理者必须面对的课题。如何写好一份年终工作总结是许多管理者头疼的问题，既不能太过“格式化”， 又不能写成“流水账”，要不自己不满意，上司也不满意。一篇<strong>好的年终总结是职场人士有利的竞争筹码</strong>，甚至是<strong>升职加薪的“助推器”</strong>。</p>\n<h2 id=\"为什么要写年终总结？\"><a href=\"#为什么要写年终总结？\" class=\"headerlink\" title=\"为什么要写年终总结？\"></a>为什么要写年终总结？</h2><p>不要小看工作总结，或大或小，都与我们的绩效，升迁，加薪，去留息息相关。聪明的人不会仅仅在工作总结里总结，而是会<strong>通过汇报的机会争取资源</strong>，毕竟，工作总结是制度规定里面允许你和上级领导沟通的一种重要途径。</p>\n<p>对于领导来说，他们不会盯着每个员工的日常工作情况，而且时间的跨度比较大，年初做的事情，到了年底，不<strong>提醒下领导</strong>，都忘记了，年终总结有助于了解员工的工作成果，工作状态，关注员工在工作中的成长，看到员工哪方面有所欠缺需要弥补，那些地方做的不对需要调整，领导根据了解到的情况，在未来的工作中给予帮助和支持；领导也会在你自己的分析与调整中，发现你的潜力，会给你一些机会，让你更好的成长。</p>\n<p><strong>对于自己来说</strong>，为自己一年的工作经历做梳理归纳，从中总结经验，做好复盘，发现自己的不足，然后做好改进计划，这种计划，实施，总结，发现不足，改进计划的<strong>自我螺旋式成长</strong>。在这个过程中，不断整理分析，最终形成自己的方法论，实践经验+理论知识，工作总结就是这样一个自身提高的机会，要用心看待这个事情。</p>\n<p>那怎么才能写出一份既能体现个人价值，又能讨领导欢心的年终总结呢？这里有个<strong>套路</strong>：“找找模版，整整数据，夸夸自己，表表忠心，复制黏贴，搞定”</p>\n<h2 id=\"年终总结写什么\"><a href=\"#年终总结写什么\" class=\"headerlink\" title=\"年终总结写什么\"></a>年终总结写什么</h2><h3 id=\"工作成果回顾\"><a href=\"#工作成果回顾\" class=\"headerlink\" title=\"工作成果回顾\"></a>工作成果回顾</h3><p>作为总结的第一部分，目的就是要<strong>让领导最直观的知道过去的一年完成了那些工作？经历了怎样的过程？ 最终的结果如何？</strong></p>\n<p>很多人头疼内容怎么写，感觉无从下笔，可以采用记“流水账”的形式把一年的做过事情都列出来。不管三七二十一，只要做过的事情都写下来，借助OKR，包括时间，目标，关键结果，完成的情况，最好每一个条附上一个实例说明，全部列完以后，挑出重要的部分，然后根据你呈现方式的需要，做数据的统计。</p>\n<p>有了内容和数据以后，需要把它呈现出来， 可以使用不同的形式</p>\n<ol>\n<li><p>时间轴<br>最简单的是用时间轴，常用的时间轴有<br>根据日期，比如月份，季度<br>根据项目阶段，比如准备阶段，实施阶段，冲刺阶段，维护阶段，<br>里程碑事件，比如用户数量突破xx, 成交金额突破xxx</p>\n</li>\n<li><p>关键词</p>\n</li>\n</ol>\n<p>关键词很好理解，可以把一年的成绩做一个统计，比如说2018年，拿了2个大奖，得了3个荣誉，开发了多少新客户等等，这些数字就是关键词</p>\n<ol start=\"3\">\n<li>重要性</li>\n</ol>\n<p>根据重要性排序把你的工作进行归类，按重要性进行排列，在工作中的重要性的潜规则就是领导最重视的就是最重要的。</p>\n<p>如今是数字时代，数据是多多益善，呈现的方式最好用图表，数据太枯燥，数据可以做成折现统计图，扇形统计图，条形统计图，对比表格等直观，可视的图表</p>\n<p>通过罗列出成果，用表格，图表展示出来，成果回顾可以给领导一个深刻的印象，为接下来的分析做好准备。</p>\n<h3 id=\"总结自己的经验和不足\"><a href=\"#总结自己的经验和不足\" class=\"headerlink\" title=\"总结自己的经验和不足\"></a>总结自己的经验和不足</h3><p>这一份对自己过去一年做一个分析，你对自己过往的工作经历有什么看法，那些地方做的不错，那些地方存在不足，那些地方需要改进。</p>\n<p>对于领导来说，希望通过<strong>了解员工的工作状态与其在工作中的成长</strong>，所以其中内容要体现重点</p>\n<p>可以借助平衡计分卡（BSC）， 这是一种常见的绩效考核方式，针对每个问题说出2～3个具体点，主要不要假大空的废话</p>\n<ol>\n<li>为公司贡献了什么？</li>\n<li>为客户做了什么？</li>\n<li>为自己学习了什么？</li>\n<li>为下属做了什么？</li>\n<li>为公司在管理和流程上做了什么？</li>\n</ol>\n<p>对于每个问题，那些对的好，那些做的不好，那些需要改进，都记下来。<br>点出我们工作中有价值的成果，并且提炼经验，与公司同事共享，让别人也能从中获得价值。<br>对于工作中的不足之处以及需要改进的地方，也需要列出来，这样也可以树立一个踏实，谦逊和可靠的形象。</p>\n<h3 id=\"来年的改善和设定明年的目标规划\"><a href=\"#来年的改善和设定明年的目标规划\" class=\"headerlink\" title=\"来年的改善和设定明年的目标规划\"></a>来年的改善和设定明年的目标规划</h3><p>针对自己的分析，你觉得在这些重要的环节和发现的问题中，有没有办法把事情做的更好或者解决存在的问题，可以把这些思考列出来，做一个行动计划</p>\n<p>更重要的是，一年过去了，有问题、有收获，更重要的是明年你的目标是什么？这里边可以跟你的领导去谈，看看公司的规划，领导对你的期望，也可以寻求领导资源和帮助， 然后给出你的打算、你的方向、你的目标。</p>\n<p>根据目标，开始做明年的规划，这里面需要用到SMART原则。</p>\n<h3 id=\"最后记得感谢领导和同事\"><a href=\"#最后记得感谢领导和同事\" class=\"headerlink\" title=\"最后记得感谢领导和同事\"></a>最后记得感谢领导和同事</h3><p>年度总结，不能只谈自己的业绩，还要<strong>感谢</strong>那些支持你取得这些成绩和成长的领导和同事，感谢领导的支持，同事的帮助。</p>\n<h3 id=\"好的模板\"><a href=\"#好的模板\" class=\"headerlink\" title=\"好的模板\"></a>好的模板</h3><p>写完了这些，我们需要有一个<strong>好的呈现方式</strong>，那就找一个好的模版，小编这里给你准备了PPT模版</p>\n<h3 id=\"年终总结的禁忌\"><a href=\"#年终总结的禁忌\" class=\"headerlink\" title=\"年终总结的禁忌\"></a>年终总结的禁忌</h3><ul>\n<li>避免主观感受或模糊不清的词汇<ul>\n<li>你觉得“这个任务我完成的挺好的”， 领导可不一定这么觉得，要用数据说话，比如用户增长多少，成交增加多少，效率提高多少等等</li>\n<li>少用“差不多”，“还行吧”等不确定的词语，会让人家觉得你做事马虎。</li>\n</ul>\n</li>\n<li>避免夸大其词或者轻描淡写<ul>\n<li>看你的工作总结都是你的直属领导，他对你的工作有一定的了解，面对领导吹牛的事情最好不要做。</li>\n<li>但是总结中也不能轻描淡写，只有总结成绩，没有经验，成果以及影响的总结，没有亮点，这样领导会觉得你什么都没有做，觉得你可有可无。</li>\n</ul>\n</li>\n<li>缺乏分析<br>  -这类总结，只有总结工作和取得的成绩，没有发现工作中存在的问题，也没有进行认真的分析和研究，或者只是提困难，没有建设性的意见。对于未来，领导最看重的是你对工作看法，建议或者意见，通过这些看法领导可以看到你的潜力，然后培养你。如果没有分析，领导觉得你没有自己的看法，看不到你的潜力。</li>\n<li>避免花里胡哨，内容空洞<ul>\n<li>“题目吸引人，格式很动人，内容恶心人”，注重形式而不注重事实，形式大于内容。这类总结没有实际意义</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>世上有个不变的真理：只有从偶然的成功中寻获可复制的规律，才能从一个成功创造出另一个成功。年终总结不仅仅是升级交代的一项任务，更是一次自我的复盘和检验，把经验转化为能力的过程。</p>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"http://www.sohu.com/a/288014197_100091630\">如何写好年终工作总结？这是最全面的答案了 </a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何写好年终总结\"><a href=\"#如何写好年终总结\" class=\"headerlink\" title=\"如何写好年终总结\"></a>如何写好年终总结</h1><p>每年临近年底都是企业进行年度工作总结的阶段，而工作总结则是每一位管理者必须面对的课题。如何写好一份年终工作总结是许多管理者头疼的问题，既不能太过“格式化”， 又不能写成“流水账”，要不自己不满意，上司也不满意。一篇<strong>好的年终总结是职场人士有利的竞争筹码</strong>，甚至是<strong>升职加薪的“助推器”</strong>。</p>\n<h2 id=\"为什么要写年终总结？\"><a href=\"#为什么要写年终总结？\" class=\"headerlink\" title=\"为什么要写年终总结？\"></a>为什么要写年终总结？</h2><p>不要小看工作总结，或大或小，都与我们的绩效，升迁，加薪，去留息息相关。聪明的人不会仅仅在工作总结里总结，而是会<strong>通过汇报的机会争取资源</strong>，毕竟，工作总结是制度规定里面允许你和上级领导沟通的一种重要途径。</p>\n<p>对于领导来说，他们不会盯着每个员工的日常工作情况，而且时间的跨度比较大，年初做的事情，到了年底，不<strong>提醒下领导</strong>，都忘记了，年终总结有助于了解员工的工作成果，工作状态，关注员工在工作中的成长，看到员工哪方面有所欠缺需要弥补，那些地方做的不对需要调整，领导根据了解到的情况，在未来的工作中给予帮助和支持；领导也会在你自己的分析与调整中，发现你的潜力，会给你一些机会，让你更好的成长。</p>\n<p><strong>对于自己来说</strong>，为自己一年的工作经历做梳理归纳，从中总结经验，做好复盘，发现自己的不足，然后做好改进计划，这种计划，实施，总结，发现不足，改进计划的<strong>自我螺旋式成长</strong>。在这个过程中，不断整理分析，最终形成自己的方法论，实践经验+理论知识，工作总结就是这样一个自身提高的机会，要用心看待这个事情。</p>\n<p>那怎么才能写出一份既能体现个人价值，又能讨领导欢心的年终总结呢？这里有个<strong>套路</strong>：“找找模版，整整数据，夸夸自己，表表忠心，复制黏贴，搞定”</p>\n<h2 id=\"年终总结写什么\"><a href=\"#年终总结写什么\" class=\"headerlink\" title=\"年终总结写什么\"></a>年终总结写什么</h2><h3 id=\"工作成果回顾\"><a href=\"#工作成果回顾\" class=\"headerlink\" title=\"工作成果回顾\"></a>工作成果回顾</h3><p>作为总结的第一部分，目的就是要<strong>让领导最直观的知道过去的一年完成了那些工作？经历了怎样的过程？ 最终的结果如何？</strong></p>\n<p>很多人头疼内容怎么写，感觉无从下笔，可以采用记“流水账”的形式把一年的做过事情都列出来。不管三七二十一，只要做过的事情都写下来，借助OKR，包括时间，目标，关键结果，完成的情况，最好每一个条附上一个实例说明，全部列完以后，挑出重要的部分，然后根据你呈现方式的需要，做数据的统计。</p>\n<p>有了内容和数据以后，需要把它呈现出来， 可以使用不同的形式</p>\n<ol>\n<li><p>时间轴<br>最简单的是用时间轴，常用的时间轴有<br>根据日期，比如月份，季度<br>根据项目阶段，比如准备阶段，实施阶段，冲刺阶段，维护阶段，<br>里程碑事件，比如用户数量突破xx, 成交金额突破xxx</p>\n</li>\n<li><p>关键词</p>\n</li>\n</ol>\n<p>关键词很好理解，可以把一年的成绩做一个统计，比如说2018年，拿了2个大奖，得了3个荣誉，开发了多少新客户等等，这些数字就是关键词</p>\n<ol start=\"3\">\n<li>重要性</li>\n</ol>\n<p>根据重要性排序把你的工作进行归类，按重要性进行排列，在工作中的重要性的潜规则就是领导最重视的就是最重要的。</p>\n<p>如今是数字时代，数据是多多益善，呈现的方式最好用图表，数据太枯燥，数据可以做成折现统计图，扇形统计图，条形统计图，对比表格等直观，可视的图表</p>\n<p>通过罗列出成果，用表格，图表展示出来，成果回顾可以给领导一个深刻的印象，为接下来的分析做好准备。</p>\n<h3 id=\"总结自己的经验和不足\"><a href=\"#总结自己的经验和不足\" class=\"headerlink\" title=\"总结自己的经验和不足\"></a>总结自己的经验和不足</h3><p>这一份对自己过去一年做一个分析，你对自己过往的工作经历有什么看法，那些地方做的不错，那些地方存在不足，那些地方需要改进。</p>\n<p>对于领导来说，希望通过<strong>了解员工的工作状态与其在工作中的成长</strong>，所以其中内容要体现重点</p>\n<p>可以借助平衡计分卡（BSC）， 这是一种常见的绩效考核方式，针对每个问题说出2～3个具体点，主要不要假大空的废话</p>\n<ol>\n<li>为公司贡献了什么？</li>\n<li>为客户做了什么？</li>\n<li>为自己学习了什么？</li>\n<li>为下属做了什么？</li>\n<li>为公司在管理和流程上做了什么？</li>\n</ol>\n<p>对于每个问题，那些对的好，那些做的不好，那些需要改进，都记下来。<br>点出我们工作中有价值的成果，并且提炼经验，与公司同事共享，让别人也能从中获得价值。<br>对于工作中的不足之处以及需要改进的地方，也需要列出来，这样也可以树立一个踏实，谦逊和可靠的形象。</p>\n<h3 id=\"来年的改善和设定明年的目标规划\"><a href=\"#来年的改善和设定明年的目标规划\" class=\"headerlink\" title=\"来年的改善和设定明年的目标规划\"></a>来年的改善和设定明年的目标规划</h3><p>针对自己的分析，你觉得在这些重要的环节和发现的问题中，有没有办法把事情做的更好或者解决存在的问题，可以把这些思考列出来，做一个行动计划</p>\n<p>更重要的是，一年过去了，有问题、有收获，更重要的是明年你的目标是什么？这里边可以跟你的领导去谈，看看公司的规划，领导对你的期望，也可以寻求领导资源和帮助， 然后给出你的打算、你的方向、你的目标。</p>\n<p>根据目标，开始做明年的规划，这里面需要用到SMART原则。</p>\n<h3 id=\"最后记得感谢领导和同事\"><a href=\"#最后记得感谢领导和同事\" class=\"headerlink\" title=\"最后记得感谢领导和同事\"></a>最后记得感谢领导和同事</h3><p>年度总结，不能只谈自己的业绩，还要<strong>感谢</strong>那些支持你取得这些成绩和成长的领导和同事，感谢领导的支持，同事的帮助。</p>\n<h3 id=\"好的模板\"><a href=\"#好的模板\" class=\"headerlink\" title=\"好的模板\"></a>好的模板</h3><p>写完了这些，我们需要有一个<strong>好的呈现方式</strong>，那就找一个好的模版，小编这里给你准备了PPT模版</p>\n<h3 id=\"年终总结的禁忌\"><a href=\"#年终总结的禁忌\" class=\"headerlink\" title=\"年终总结的禁忌\"></a>年终总结的禁忌</h3><ul>\n<li>避免主观感受或模糊不清的词汇<ul>\n<li>你觉得“这个任务我完成的挺好的”， 领导可不一定这么觉得，要用数据说话，比如用户增长多少，成交增加多少，效率提高多少等等</li>\n<li>少用“差不多”，“还行吧”等不确定的词语，会让人家觉得你做事马虎。</li>\n</ul>\n</li>\n<li>避免夸大其词或者轻描淡写<ul>\n<li>看你的工作总结都是你的直属领导，他对你的工作有一定的了解，面对领导吹牛的事情最好不要做。</li>\n<li>但是总结中也不能轻描淡写，只有总结成绩，没有经验，成果以及影响的总结，没有亮点，这样领导会觉得你什么都没有做，觉得你可有可无。</li>\n</ul>\n</li>\n<li>缺乏分析<br>  -这类总结，只有总结工作和取得的成绩，没有发现工作中存在的问题，也没有进行认真的分析和研究，或者只是提困难，没有建设性的意见。对于未来，领导最看重的是你对工作看法，建议或者意见，通过这些看法领导可以看到你的潜力，然后培养你。如果没有分析，领导觉得你没有自己的看法，看不到你的潜力。</li>\n<li>避免花里胡哨，内容空洞<ul>\n<li>“题目吸引人，格式很动人，内容恶心人”，注重形式而不注重事实，形式大于内容。这类总结没有实际意义</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>世上有个不变的真理：只有从偶然的成功中寻获可复制的规律，才能从一个成功创造出另一个成功。年终总结不仅仅是升级交代的一项任务，更是一次自我的复盘和检验，把经验转化为能力的过程。</p>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"http://www.sohu.com/a/288014197_100091630\">如何写好年终工作总结？这是最全面的答案了 </a></li>\n</ul>\n"},{"title":"设计模式学习笔记","time":"2020-01-01 00:13","notebook":"blog","_content":"\n# 设计模式学习笔记\n\n\n## 简介\n\n有人一直说开发人员，23种设计模式要烂熟于胸，而我没有做到，学习之。\n\n## J2EE模式(超越教科书，不在23种以内) 7种\n\n- 数据传输对象模式\n    - 数据传输对象是可以序列化和反序列化的，方便在网络上传输。这种处理数据传输的方式，一般会包含多个字段/属性，这种方式成为数据传输设计模式. DTO\n- 服务定位器设计模式\n    - 就是定义一个服务的集合，这个集合具有缓存功能，能够缓存已经实例化的服务，不需要每次都创建新的实例\n- 拦截过滤器模式\n    - 集中的请求处理机制\n- 数据访问对象模式\n    - DAO模式，实体，访问，接口\n- 组合实体模式\n    - 一个实体包含多个实体，通过最外层的实体方法更新内部实体的属性\n- 业务代码模式\n    - 表示层和业务层解耦\n- MVC模式\n    - 模型，视图，控制器，分层开发\n\n## 创建型(Creational Patterns) 5种\n\n解决的对象创建的问题\n\n- 工厂模式(Factory Pattern)\n    - 提供一种创建对象的方式\n    - 提供统一的接口负载对象的创建，具体的实现类负责创建类的实例，\n    - 有多种实现，但是想提供统一接口的场景，适用工厂模式\n- 抽象工厂模式(Abstract Factory Pattern)\n    - 生产工厂的工厂，在工厂模式上的基础上更加抽象\n- 单例模式(Singleton Pattern)\n    - 单一实例，减少实例不断创建释放造成的资源消耗\n- 建造者模式(Builder Pattern)\n    - 建造器，负责复杂对象的创建\n- 原型模式(Prototype Pattern)\n    - 对象的缓存，一旦创建直接返回，没有创建才会进行实例化\n\n## 结构型(Structural Patterns) 8种\n\n- 适配器模式\n    - 两个不兼容接口之间的桥梁，解决兼容性问题\n- 桥接器模式\n    - 使用非继承的模式来解决类关系的问题\n- 过滤器模式\n    - 实现过滤功能\n- 组合模式\n    - 复杂对象，属性可以时对象\n- 装饰器模式\n    - 定义独立的类，在类的功能上加上其他的功能，称之为装饰\n- 外观模式\n    - 系统的对外展现提供一个组接口，屏蔽内部的复杂实现，目标简单易用，易于理解\n- 享元模式\n    - 运行共享技术实现减少对象创建资源消耗的问题，数据库的连接池就是实现的一种\n- 代理模式\n    - 加入中间层，实现间接访问\n\n## 行为型(Behavioral Patterns) 12种\n\n- 责任链模式\n    - 链条式结构，处理消息传递时常用\n- 命令模式\n    - 请求或参数抽象为命令对象，新的命令很容易添加\n- 解释器模式\n    - 常用在SQL解析符号处理、表达式解析引擎、规则解析\n- 迭代器模式\n    - 提供统一的接口，访问集合，不需要集合内部复杂的结构\n- 中介者模式\n    - MVC模式中的控制器属于中介者模式，加入中间层，不直接交互\n- 备忘录模式\n    - 为了反悔，保存中间状态\n- 观察者模式\n    - 一对多关系时，一个发生变化，通知其他关联对象\n- 状态模式\n    - 状态决定行为，存储类的状态\n- 空对象模式\n    - 一种默认状态，处理默认的情况，提供默认的行为\n- 策略模式\n    - 不同策略，封装不同行为的组合，不同的策略，不同的算法，策略可以自由切换非常灵活\n- 模板模式\n    - 变和不变分类抽离，封装不变的部分形成模板\n- 访问者模式\n    - 数据结构与数据操作分离，稳定的数据结构和易变的操作\n\n\n","source":"_posts/019-设计模式学习笔记.md","raw":"---\ntitle: 设计模式学习笔记\ntime: 2020-01-01 00:13\ntags: Markdown,blog\nnotebook: blog\n---\n\n# 设计模式学习笔记\n\n\n## 简介\n\n有人一直说开发人员，23种设计模式要烂熟于胸，而我没有做到，学习之。\n\n## J2EE模式(超越教科书，不在23种以内) 7种\n\n- 数据传输对象模式\n    - 数据传输对象是可以序列化和反序列化的，方便在网络上传输。这种处理数据传输的方式，一般会包含多个字段/属性，这种方式成为数据传输设计模式. DTO\n- 服务定位器设计模式\n    - 就是定义一个服务的集合，这个集合具有缓存功能，能够缓存已经实例化的服务，不需要每次都创建新的实例\n- 拦截过滤器模式\n    - 集中的请求处理机制\n- 数据访问对象模式\n    - DAO模式，实体，访问，接口\n- 组合实体模式\n    - 一个实体包含多个实体，通过最外层的实体方法更新内部实体的属性\n- 业务代码模式\n    - 表示层和业务层解耦\n- MVC模式\n    - 模型，视图，控制器，分层开发\n\n## 创建型(Creational Patterns) 5种\n\n解决的对象创建的问题\n\n- 工厂模式(Factory Pattern)\n    - 提供一种创建对象的方式\n    - 提供统一的接口负载对象的创建，具体的实现类负责创建类的实例，\n    - 有多种实现，但是想提供统一接口的场景，适用工厂模式\n- 抽象工厂模式(Abstract Factory Pattern)\n    - 生产工厂的工厂，在工厂模式上的基础上更加抽象\n- 单例模式(Singleton Pattern)\n    - 单一实例，减少实例不断创建释放造成的资源消耗\n- 建造者模式(Builder Pattern)\n    - 建造器，负责复杂对象的创建\n- 原型模式(Prototype Pattern)\n    - 对象的缓存，一旦创建直接返回，没有创建才会进行实例化\n\n## 结构型(Structural Patterns) 8种\n\n- 适配器模式\n    - 两个不兼容接口之间的桥梁，解决兼容性问题\n- 桥接器模式\n    - 使用非继承的模式来解决类关系的问题\n- 过滤器模式\n    - 实现过滤功能\n- 组合模式\n    - 复杂对象，属性可以时对象\n- 装饰器模式\n    - 定义独立的类，在类的功能上加上其他的功能，称之为装饰\n- 外观模式\n    - 系统的对外展现提供一个组接口，屏蔽内部的复杂实现，目标简单易用，易于理解\n- 享元模式\n    - 运行共享技术实现减少对象创建资源消耗的问题，数据库的连接池就是实现的一种\n- 代理模式\n    - 加入中间层，实现间接访问\n\n## 行为型(Behavioral Patterns) 12种\n\n- 责任链模式\n    - 链条式结构，处理消息传递时常用\n- 命令模式\n    - 请求或参数抽象为命令对象，新的命令很容易添加\n- 解释器模式\n    - 常用在SQL解析符号处理、表达式解析引擎、规则解析\n- 迭代器模式\n    - 提供统一的接口，访问集合，不需要集合内部复杂的结构\n- 中介者模式\n    - MVC模式中的控制器属于中介者模式，加入中间层，不直接交互\n- 备忘录模式\n    - 为了反悔，保存中间状态\n- 观察者模式\n    - 一对多关系时，一个发生变化，通知其他关联对象\n- 状态模式\n    - 状态决定行为，存储类的状态\n- 空对象模式\n    - 一种默认状态，处理默认的情况，提供默认的行为\n- 策略模式\n    - 不同策略，封装不同行为的组合，不同的策略，不同的算法，策略可以自由切换非常灵活\n- 模板模式\n    - 变和不变分类抽离，封装不变的部分形成模板\n- 访问者模式\n    - 数据结构与数据操作分离，稳定的数据结构和易变的操作\n\n\n","slug":"019-设计模式学习笔记","published":1,"date":"2020-10-02T14:10:21.714Z","updated":"2020-10-02T14:10:21.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dks00148p7lafv7dkfb","content":"<h1 id=\"设计模式学习笔记\"><a href=\"#设计模式学习笔记\" class=\"headerlink\" title=\"设计模式学习笔记\"></a>设计模式学习笔记</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>有人一直说开发人员，23种设计模式要烂熟于胸，而我没有做到，学习之。</p>\n<h2 id=\"J2EE模式-超越教科书，不在23种以内-7种\"><a href=\"#J2EE模式-超越教科书，不在23种以内-7种\" class=\"headerlink\" title=\"J2EE模式(超越教科书，不在23种以内) 7种\"></a>J2EE模式(超越教科书，不在23种以内) 7种</h2><ul>\n<li>数据传输对象模式<ul>\n<li>数据传输对象是可以序列化和反序列化的，方便在网络上传输。这种处理数据传输的方式，一般会包含多个字段/属性，这种方式成为数据传输设计模式. DTO</li>\n</ul>\n</li>\n<li>服务定位器设计模式<ul>\n<li>就是定义一个服务的集合，这个集合具有缓存功能，能够缓存已经实例化的服务，不需要每次都创建新的实例</li>\n</ul>\n</li>\n<li>拦截过滤器模式<ul>\n<li>集中的请求处理机制</li>\n</ul>\n</li>\n<li>数据访问对象模式<ul>\n<li>DAO模式，实体，访问，接口</li>\n</ul>\n</li>\n<li>组合实体模式<ul>\n<li>一个实体包含多个实体，通过最外层的实体方法更新内部实体的属性</li>\n</ul>\n</li>\n<li>业务代码模式<ul>\n<li>表示层和业务层解耦</li>\n</ul>\n</li>\n<li>MVC模式<ul>\n<li>模型，视图，控制器，分层开发</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"创建型-Creational-Patterns-5种\"><a href=\"#创建型-Creational-Patterns-5种\" class=\"headerlink\" title=\"创建型(Creational Patterns) 5种\"></a>创建型(Creational Patterns) 5种</h2><p>解决的对象创建的问题</p>\n<ul>\n<li>工厂模式(Factory Pattern)<ul>\n<li>提供一种创建对象的方式</li>\n<li>提供统一的接口负载对象的创建，具体的实现类负责创建类的实例，</li>\n<li>有多种实现，但是想提供统一接口的场景，适用工厂模式</li>\n</ul>\n</li>\n<li>抽象工厂模式(Abstract Factory Pattern)<ul>\n<li>生产工厂的工厂，在工厂模式上的基础上更加抽象</li>\n</ul>\n</li>\n<li>单例模式(Singleton Pattern)<ul>\n<li>单一实例，减少实例不断创建释放造成的资源消耗</li>\n</ul>\n</li>\n<li>建造者模式(Builder Pattern)<ul>\n<li>建造器，负责复杂对象的创建</li>\n</ul>\n</li>\n<li>原型模式(Prototype Pattern)<ul>\n<li>对象的缓存，一旦创建直接返回，没有创建才会进行实例化</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结构型-Structural-Patterns-8种\"><a href=\"#结构型-Structural-Patterns-8种\" class=\"headerlink\" title=\"结构型(Structural Patterns) 8种\"></a>结构型(Structural Patterns) 8种</h2><ul>\n<li>适配器模式<ul>\n<li>两个不兼容接口之间的桥梁，解决兼容性问题</li>\n</ul>\n</li>\n<li>桥接器模式<ul>\n<li>使用非继承的模式来解决类关系的问题</li>\n</ul>\n</li>\n<li>过滤器模式<ul>\n<li>实现过滤功能</li>\n</ul>\n</li>\n<li>组合模式<ul>\n<li>复杂对象，属性可以时对象</li>\n</ul>\n</li>\n<li>装饰器模式<ul>\n<li>定义独立的类，在类的功能上加上其他的功能，称之为装饰</li>\n</ul>\n</li>\n<li>外观模式<ul>\n<li>系统的对外展现提供一个组接口，屏蔽内部的复杂实现，目标简单易用，易于理解</li>\n</ul>\n</li>\n<li>享元模式<ul>\n<li>运行共享技术实现减少对象创建资源消耗的问题，数据库的连接池就是实现的一种</li>\n</ul>\n</li>\n<li>代理模式<ul>\n<li>加入中间层，实现间接访问</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"行为型-Behavioral-Patterns-12种\"><a href=\"#行为型-Behavioral-Patterns-12种\" class=\"headerlink\" title=\"行为型(Behavioral Patterns) 12种\"></a>行为型(Behavioral Patterns) 12种</h2><ul>\n<li>责任链模式<ul>\n<li>链条式结构，处理消息传递时常用</li>\n</ul>\n</li>\n<li>命令模式<ul>\n<li>请求或参数抽象为命令对象，新的命令很容易添加</li>\n</ul>\n</li>\n<li>解释器模式<ul>\n<li>常用在SQL解析符号处理、表达式解析引擎、规则解析</li>\n</ul>\n</li>\n<li>迭代器模式<ul>\n<li>提供统一的接口，访问集合，不需要集合内部复杂的结构</li>\n</ul>\n</li>\n<li>中介者模式<ul>\n<li>MVC模式中的控制器属于中介者模式，加入中间层，不直接交互</li>\n</ul>\n</li>\n<li>备忘录模式<ul>\n<li>为了反悔，保存中间状态</li>\n</ul>\n</li>\n<li>观察者模式<ul>\n<li>一对多关系时，一个发生变化，通知其他关联对象</li>\n</ul>\n</li>\n<li>状态模式<ul>\n<li>状态决定行为，存储类的状态</li>\n</ul>\n</li>\n<li>空对象模式<ul>\n<li>一种默认状态，处理默认的情况，提供默认的行为</li>\n</ul>\n</li>\n<li>策略模式<ul>\n<li>不同策略，封装不同行为的组合，不同的策略，不同的算法，策略可以自由切换非常灵活</li>\n</ul>\n</li>\n<li>模板模式<ul>\n<li>变和不变分类抽离，封装不变的部分形成模板</li>\n</ul>\n</li>\n<li>访问者模式<ul>\n<li>数据结构与数据操作分离，稳定的数据结构和易变的操作</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"设计模式学习笔记\"><a href=\"#设计模式学习笔记\" class=\"headerlink\" title=\"设计模式学习笔记\"></a>设计模式学习笔记</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>有人一直说开发人员，23种设计模式要烂熟于胸，而我没有做到，学习之。</p>\n<h2 id=\"J2EE模式-超越教科书，不在23种以内-7种\"><a href=\"#J2EE模式-超越教科书，不在23种以内-7种\" class=\"headerlink\" title=\"J2EE模式(超越教科书，不在23种以内) 7种\"></a>J2EE模式(超越教科书，不在23种以内) 7种</h2><ul>\n<li>数据传输对象模式<ul>\n<li>数据传输对象是可以序列化和反序列化的，方便在网络上传输。这种处理数据传输的方式，一般会包含多个字段/属性，这种方式成为数据传输设计模式. DTO</li>\n</ul>\n</li>\n<li>服务定位器设计模式<ul>\n<li>就是定义一个服务的集合，这个集合具有缓存功能，能够缓存已经实例化的服务，不需要每次都创建新的实例</li>\n</ul>\n</li>\n<li>拦截过滤器模式<ul>\n<li>集中的请求处理机制</li>\n</ul>\n</li>\n<li>数据访问对象模式<ul>\n<li>DAO模式，实体，访问，接口</li>\n</ul>\n</li>\n<li>组合实体模式<ul>\n<li>一个实体包含多个实体，通过最外层的实体方法更新内部实体的属性</li>\n</ul>\n</li>\n<li>业务代码模式<ul>\n<li>表示层和业务层解耦</li>\n</ul>\n</li>\n<li>MVC模式<ul>\n<li>模型，视图，控制器，分层开发</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"创建型-Creational-Patterns-5种\"><a href=\"#创建型-Creational-Patterns-5种\" class=\"headerlink\" title=\"创建型(Creational Patterns) 5种\"></a>创建型(Creational Patterns) 5种</h2><p>解决的对象创建的问题</p>\n<ul>\n<li>工厂模式(Factory Pattern)<ul>\n<li>提供一种创建对象的方式</li>\n<li>提供统一的接口负载对象的创建，具体的实现类负责创建类的实例，</li>\n<li>有多种实现，但是想提供统一接口的场景，适用工厂模式</li>\n</ul>\n</li>\n<li>抽象工厂模式(Abstract Factory Pattern)<ul>\n<li>生产工厂的工厂，在工厂模式上的基础上更加抽象</li>\n</ul>\n</li>\n<li>单例模式(Singleton Pattern)<ul>\n<li>单一实例，减少实例不断创建释放造成的资源消耗</li>\n</ul>\n</li>\n<li>建造者模式(Builder Pattern)<ul>\n<li>建造器，负责复杂对象的创建</li>\n</ul>\n</li>\n<li>原型模式(Prototype Pattern)<ul>\n<li>对象的缓存，一旦创建直接返回，没有创建才会进行实例化</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结构型-Structural-Patterns-8种\"><a href=\"#结构型-Structural-Patterns-8种\" class=\"headerlink\" title=\"结构型(Structural Patterns) 8种\"></a>结构型(Structural Patterns) 8种</h2><ul>\n<li>适配器模式<ul>\n<li>两个不兼容接口之间的桥梁，解决兼容性问题</li>\n</ul>\n</li>\n<li>桥接器模式<ul>\n<li>使用非继承的模式来解决类关系的问题</li>\n</ul>\n</li>\n<li>过滤器模式<ul>\n<li>实现过滤功能</li>\n</ul>\n</li>\n<li>组合模式<ul>\n<li>复杂对象，属性可以时对象</li>\n</ul>\n</li>\n<li>装饰器模式<ul>\n<li>定义独立的类，在类的功能上加上其他的功能，称之为装饰</li>\n</ul>\n</li>\n<li>外观模式<ul>\n<li>系统的对外展现提供一个组接口，屏蔽内部的复杂实现，目标简单易用，易于理解</li>\n</ul>\n</li>\n<li>享元模式<ul>\n<li>运行共享技术实现减少对象创建资源消耗的问题，数据库的连接池就是实现的一种</li>\n</ul>\n</li>\n<li>代理模式<ul>\n<li>加入中间层，实现间接访问</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"行为型-Behavioral-Patterns-12种\"><a href=\"#行为型-Behavioral-Patterns-12种\" class=\"headerlink\" title=\"行为型(Behavioral Patterns) 12种\"></a>行为型(Behavioral Patterns) 12种</h2><ul>\n<li>责任链模式<ul>\n<li>链条式结构，处理消息传递时常用</li>\n</ul>\n</li>\n<li>命令模式<ul>\n<li>请求或参数抽象为命令对象，新的命令很容易添加</li>\n</ul>\n</li>\n<li>解释器模式<ul>\n<li>常用在SQL解析符号处理、表达式解析引擎、规则解析</li>\n</ul>\n</li>\n<li>迭代器模式<ul>\n<li>提供统一的接口，访问集合，不需要集合内部复杂的结构</li>\n</ul>\n</li>\n<li>中介者模式<ul>\n<li>MVC模式中的控制器属于中介者模式，加入中间层，不直接交互</li>\n</ul>\n</li>\n<li>备忘录模式<ul>\n<li>为了反悔，保存中间状态</li>\n</ul>\n</li>\n<li>观察者模式<ul>\n<li>一对多关系时，一个发生变化，通知其他关联对象</li>\n</ul>\n</li>\n<li>状态模式<ul>\n<li>状态决定行为，存储类的状态</li>\n</ul>\n</li>\n<li>空对象模式<ul>\n<li>一种默认状态，处理默认的情况，提供默认的行为</li>\n</ul>\n</li>\n<li>策略模式<ul>\n<li>不同策略，封装不同行为的组合，不同的策略，不同的算法，策略可以自由切换非常灵活</li>\n</ul>\n</li>\n<li>模板模式<ul>\n<li>变和不变分类抽离，封装不变的部分形成模板</li>\n</ul>\n</li>\n<li>访问者模式<ul>\n<li>数据结构与数据操作分离，稳定的数据结构和易变的操作</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Emacs性能问题排查","time":"2019-12-31 22:11","notebook":"blog","_content":"\n# Emacs性能问题排查\n\n\n## 查看启动时间\n\n- 命令 `emacs --timed-requires`\n- 输出\n    - 屏幕中央的位置显示\n\n## 查看内存和CPU占用\n\n- 命令 `emacs --profile`\n- 输出\n    - 屏幕中央的位置显示\n\n## 换个思路，Emacs以服务的方式运行\n\n- 启动服务`emacs --daemon`\n- 启动客户端`emacsclient -t`，终端方式启动\n- 启动客户端的命令太长，在`/etc/bash.bashrc`设置别名\n```bash\n# ------------ 定义emacsclient的别名，Emacs后台服务模式启动，加快速度 -----------\nalias et='emacsclient -t'\n```\n","source":"_posts/020-Emacs性能问题排查.md","raw":"---\ntitle: Emacs性能问题排查\ntime: 2019-12-31 22:11\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Emacs性能问题排查\n\n\n## 查看启动时间\n\n- 命令 `emacs --timed-requires`\n- 输出\n    - 屏幕中央的位置显示\n\n## 查看内存和CPU占用\n\n- 命令 `emacs --profile`\n- 输出\n    - 屏幕中央的位置显示\n\n## 换个思路，Emacs以服务的方式运行\n\n- 启动服务`emacs --daemon`\n- 启动客户端`emacsclient -t`，终端方式启动\n- 启动客户端的命令太长，在`/etc/bash.bashrc`设置别名\n```bash\n# ------------ 定义emacsclient的别名，Emacs后台服务模式启动，加快速度 -----------\nalias et='emacsclient -t'\n```\n","slug":"020-Emacs性能问题排查","published":1,"date":"2020-10-02T14:10:21.730Z","updated":"2020-10-02T14:10:21.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkt00168p7l86kof13n","content":"<h1 id=\"Emacs性能问题排查\"><a href=\"#Emacs性能问题排查\" class=\"headerlink\" title=\"Emacs性能问题排查\"></a>Emacs性能问题排查</h1><h2 id=\"查看启动时间\"><a href=\"#查看启动时间\" class=\"headerlink\" title=\"查看启动时间\"></a>查看启动时间</h2><ul>\n<li>命令 <code>emacs --timed-requires</code></li>\n<li>输出<ul>\n<li>屏幕中央的位置显示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看内存和CPU占用\"><a href=\"#查看内存和CPU占用\" class=\"headerlink\" title=\"查看内存和CPU占用\"></a>查看内存和CPU占用</h2><ul>\n<li>命令 <code>emacs --profile</code></li>\n<li>输出<ul>\n<li>屏幕中央的位置显示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"换个思路，Emacs以服务的方式运行\"><a href=\"#换个思路，Emacs以服务的方式运行\" class=\"headerlink\" title=\"换个思路，Emacs以服务的方式运行\"></a>换个思路，Emacs以服务的方式运行</h2><ul>\n<li>启动服务<code>emacs --daemon</code></li>\n<li>启动客户端<code>emacsclient -t</code>，终端方式启动</li>\n<li>启动客户端的命令太长，在<code>/etc/bash.bashrc</code>设置别名<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ------------ 定义emacsclient的别名，Emacs后台服务模式启动，加快速度 -----------</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> et=<span class=\"string\">&#x27;emacsclient -t&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Emacs性能问题排查\"><a href=\"#Emacs性能问题排查\" class=\"headerlink\" title=\"Emacs性能问题排查\"></a>Emacs性能问题排查</h1><h2 id=\"查看启动时间\"><a href=\"#查看启动时间\" class=\"headerlink\" title=\"查看启动时间\"></a>查看启动时间</h2><ul>\n<li>命令 <code>emacs --timed-requires</code></li>\n<li>输出<ul>\n<li>屏幕中央的位置显示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看内存和CPU占用\"><a href=\"#查看内存和CPU占用\" class=\"headerlink\" title=\"查看内存和CPU占用\"></a>查看内存和CPU占用</h2><ul>\n<li>命令 <code>emacs --profile</code></li>\n<li>输出<ul>\n<li>屏幕中央的位置显示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"换个思路，Emacs以服务的方式运行\"><a href=\"#换个思路，Emacs以服务的方式运行\" class=\"headerlink\" title=\"换个思路，Emacs以服务的方式运行\"></a>换个思路，Emacs以服务的方式运行</h2><ul>\n<li>启动服务<code>emacs --daemon</code></li>\n<li>启动客户端<code>emacsclient -t</code>，终端方式启动</li>\n<li>启动客户端的命令太长，在<code>/etc/bash.bashrc</code>设置别名<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ------------ 定义emacsclient的别名，Emacs后台服务模式启动，加快速度 -----------</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> et=<span class=\"string\">&#x27;emacsclient -t&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"021-Linux系统剪贴板.md","time":"2020-01-01 23:10","notebook":"blog","_content":"\n# Linux系统剪贴板\n\n\n## 终端结果复制到系统剪贴板\n\n- 需要借助xclip命令行工具'xclip'\n- 安装`apt-get install -y xclip`\n\n## 命令结果终端共享\n\n- 结果输出到系统剪贴板'pwd | xclip -selection c'\n- 粘贴`Ctrl + Shift + v`\n\n\n## Docker和宿主机共享剪贴板\n\n- 在共享卷创建clipboard.md文件\n- 需要共享的写入到clipboard.md文件，相互读取就可以了\n","source":"_posts/021-Linux系统剪贴板.md","raw":"---\ntitle: 021-Linux系统剪贴板.md\ntime: 2020-01-01 23:10\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Linux系统剪贴板\n\n\n## 终端结果复制到系统剪贴板\n\n- 需要借助xclip命令行工具'xclip'\n- 安装`apt-get install -y xclip`\n\n## 命令结果终端共享\n\n- 结果输出到系统剪贴板'pwd | xclip -selection c'\n- 粘贴`Ctrl + Shift + v`\n\n\n## Docker和宿主机共享剪贴板\n\n- 在共享卷创建clipboard.md文件\n- 需要共享的写入到clipboard.md文件，相互读取就可以了\n","slug":"021-Linux系统剪贴板","published":1,"date":"2020-10-02T14:10:21.746Z","updated":"2020-10-02T14:10:21.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dku00188p7l4q2v7wyw","content":"<h1 id=\"Linux系统剪贴板\"><a href=\"#Linux系统剪贴板\" class=\"headerlink\" title=\"Linux系统剪贴板\"></a>Linux系统剪贴板</h1><h2 id=\"终端结果复制到系统剪贴板\"><a href=\"#终端结果复制到系统剪贴板\" class=\"headerlink\" title=\"终端结果复制到系统剪贴板\"></a>终端结果复制到系统剪贴板</h2><ul>\n<li>需要借助xclip命令行工具’xclip’</li>\n<li>安装<code>apt-get install -y xclip</code></li>\n</ul>\n<h2 id=\"命令结果终端共享\"><a href=\"#命令结果终端共享\" class=\"headerlink\" title=\"命令结果终端共享\"></a>命令结果终端共享</h2><ul>\n<li>结果输出到系统剪贴板’pwd | xclip -selection c’</li>\n<li>粘贴<code>Ctrl + Shift + v</code></li>\n</ul>\n<h2 id=\"Docker和宿主机共享剪贴板\"><a href=\"#Docker和宿主机共享剪贴板\" class=\"headerlink\" title=\"Docker和宿主机共享剪贴板\"></a>Docker和宿主机共享剪贴板</h2><ul>\n<li>在共享卷创建clipboard.md文件</li>\n<li>需要共享的写入到clipboard.md文件，相互读取就可以了</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux系统剪贴板\"><a href=\"#Linux系统剪贴板\" class=\"headerlink\" title=\"Linux系统剪贴板\"></a>Linux系统剪贴板</h1><h2 id=\"终端结果复制到系统剪贴板\"><a href=\"#终端结果复制到系统剪贴板\" class=\"headerlink\" title=\"终端结果复制到系统剪贴板\"></a>终端结果复制到系统剪贴板</h2><ul>\n<li>需要借助xclip命令行工具’xclip’</li>\n<li>安装<code>apt-get install -y xclip</code></li>\n</ul>\n<h2 id=\"命令结果终端共享\"><a href=\"#命令结果终端共享\" class=\"headerlink\" title=\"命令结果终端共享\"></a>命令结果终端共享</h2><ul>\n<li>结果输出到系统剪贴板’pwd | xclip -selection c’</li>\n<li>粘贴<code>Ctrl + Shift + v</code></li>\n</ul>\n<h2 id=\"Docker和宿主机共享剪贴板\"><a href=\"#Docker和宿主机共享剪贴板\" class=\"headerlink\" title=\"Docker和宿主机共享剪贴板\"></a>Docker和宿主机共享剪贴板</h2><ul>\n<li>在共享卷创建clipboard.md文件</li>\n<li>需要共享的写入到clipboard.md文件，相互读取就可以了</li>\n</ul>\n"},{"title":"Git使用技巧","time":"2020-01-04 11:04","notebook":"blog","_content":"\n# Git使用技巧\n\n\n## HTTPS和GIT协议转换\n\n- git协议，不用每次都输入用户名和密码\n```\ngit@github.com:jiftle/grocery.git\n```\n- https协议，服务器端不要做配置\n```\nhttps://git.dev.tencent.com/jiftle/grocery.git\n```\n\n## git本地仓库和远程仓库关联\n\n1. 创建远程仓库\n2. 初始化本地仓库`git init     git add .     git commit  -m \"desc\"`\n3. 关联远程仓库  `git remote add origin https://gitee.com/lp369/mypython.git`\n4. 第一次先拉取远程库中的README.md和.gitignore等文件     `git pull --rebase origin master`\n5. 提交本地代码`git push origin master`\n\n","source":"_posts/022-Git使用技巧.md","raw":"---\ntitle: Git使用技巧\ntime: 2020-01-04 11:04\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Git使用技巧\n\n\n## HTTPS和GIT协议转换\n\n- git协议，不用每次都输入用户名和密码\n```\ngit@github.com:jiftle/grocery.git\n```\n- https协议，服务器端不要做配置\n```\nhttps://git.dev.tencent.com/jiftle/grocery.git\n```\n\n## git本地仓库和远程仓库关联\n\n1. 创建远程仓库\n2. 初始化本地仓库`git init     git add .     git commit  -m \"desc\"`\n3. 关联远程仓库  `git remote add origin https://gitee.com/lp369/mypython.git`\n4. 第一次先拉取远程库中的README.md和.gitignore等文件     `git pull --rebase origin master`\n5. 提交本地代码`git push origin master`\n\n","slug":"022-Git使用技巧","published":1,"date":"2020-10-02T14:10:21.758Z","updated":"2020-10-02T14:10:21.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkv001a8p7l1fu7f5q2","content":"<h1 id=\"Git使用技巧\"><a href=\"#Git使用技巧\" class=\"headerlink\" title=\"Git使用技巧\"></a>Git使用技巧</h1><h2 id=\"HTTPS和GIT协议转换\"><a href=\"#HTTPS和GIT协议转换\" class=\"headerlink\" title=\"HTTPS和GIT协议转换\"></a>HTTPS和GIT协议转换</h2><ul>\n<li>git协议，不用每次都输入用户名和密码<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:jiftle&#x2F;grocery.git</span><br></pre></td></tr></table></figure></li>\n<li>https协议，服务器端不要做配置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;git.dev.tencent.com&#x2F;jiftle&#x2F;grocery.git</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"git本地仓库和远程仓库关联\"><a href=\"#git本地仓库和远程仓库关联\" class=\"headerlink\" title=\"git本地仓库和远程仓库关联\"></a>git本地仓库和远程仓库关联</h2><ol>\n<li>创建远程仓库</li>\n<li>初始化本地仓库<code>git init     git add .     git commit  -m &quot;desc&quot;</code></li>\n<li>关联远程仓库  <code>git remote add origin https://gitee.com/lp369/mypython.git</code></li>\n<li>第一次先拉取远程库中的README.md和.gitignore等文件     <code>git pull --rebase origin master</code></li>\n<li>提交本地代码<code>git push origin master</code></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git使用技巧\"><a href=\"#Git使用技巧\" class=\"headerlink\" title=\"Git使用技巧\"></a>Git使用技巧</h1><h2 id=\"HTTPS和GIT协议转换\"><a href=\"#HTTPS和GIT协议转换\" class=\"headerlink\" title=\"HTTPS和GIT协议转换\"></a>HTTPS和GIT协议转换</h2><ul>\n<li>git协议，不用每次都输入用户名和密码<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:jiftle&#x2F;grocery.git</span><br></pre></td></tr></table></figure></li>\n<li>https协议，服务器端不要做配置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;git.dev.tencent.com&#x2F;jiftle&#x2F;grocery.git</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"git本地仓库和远程仓库关联\"><a href=\"#git本地仓库和远程仓库关联\" class=\"headerlink\" title=\"git本地仓库和远程仓库关联\"></a>git本地仓库和远程仓库关联</h2><ol>\n<li>创建远程仓库</li>\n<li>初始化本地仓库<code>git init     git add .     git commit  -m &quot;desc&quot;</code></li>\n<li>关联远程仓库  <code>git remote add origin https://gitee.com/lp369/mypython.git</code></li>\n<li>第一次先拉取远程库中的README.md和.gitignore等文件     <code>git pull --rebase origin master</code></li>\n<li>提交本地代码<code>git push origin master</code></li>\n</ol>\n"},{"title":"Vim使用技巧","time":"2020-01-04 13:22","notebook":"blog","_content":"\n# Vim使用技巧-执行外部命令\n\n\n## 简介：\n\nvim 是十分强大的文本编辑工具，但有一些事它做不了。本文简单说说在不离开 vim 编辑器的情况下，执行 shell 命令、工具。\n\n## 进入shell\n\n- 在 vim 中执行 :shell 或 :sh，当退出当前 shell 时，就会回到 vim；\n- 也可以使用 ctr-z 进入 shell， 然后执行 fg 回到 vim。\n- 上述功能可用于下述场景：\n    - 如我们编辑了一个文件，但是发现无法保存（没有写权限），你可以先改变该文件读写权限，然后再回到 vim 保存刚刚的修改。\n\n## 在vim中执行 shell 命令!\n\n- 我们只需要在命令前 加上 ! 就可以。\n    - 如，`:! sort %`\n        - 该命令会对当前编辑的文件（％）内容进行排序，并输出。\n        - 但该命令仅对文件内容进行操作，命令不会缓存中的内容进行操作。\n        - ! 通常和非交互式命令结合使用。\n\n## 读取命令的输出\n\n- 很多人常用 vim read命令读取内容， 如：`:read textfile`\n- 但 read还可以用于读取 shell 命令的输出，如：`:read ! ls | sort`\n\n## 使用外部命令过滤文本\n\n- 进入 vim visual模式，选中你想操作的文本，然后执行 shell 命令。\n- 你选中的命令会被 shell 命令的输出替换。\n\n## 注：\n\n- 默认情况下，vim 使用系统默认使用的 shell。\n- 查看 vim 使用了哪一个 shell `:set shell ?`\n- 设置你想要试用的shell `:set shell=/path/to/shell`\n\n","source":"_posts/023-Vim使用技巧-执行外部命令.md","raw":"---\ntitle: Vim使用技巧\ntime: 2020-01-04 13:22\ntags: Markdown,blog-2020,blog-2020-01\nnotebook: blog\n---\n\n# Vim使用技巧-执行外部命令\n\n\n## 简介：\n\nvim 是十分强大的文本编辑工具，但有一些事它做不了。本文简单说说在不离开 vim 编辑器的情况下，执行 shell 命令、工具。\n\n## 进入shell\n\n- 在 vim 中执行 :shell 或 :sh，当退出当前 shell 时，就会回到 vim；\n- 也可以使用 ctr-z 进入 shell， 然后执行 fg 回到 vim。\n- 上述功能可用于下述场景：\n    - 如我们编辑了一个文件，但是发现无法保存（没有写权限），你可以先改变该文件读写权限，然后再回到 vim 保存刚刚的修改。\n\n## 在vim中执行 shell 命令!\n\n- 我们只需要在命令前 加上 ! 就可以。\n    - 如，`:! sort %`\n        - 该命令会对当前编辑的文件（％）内容进行排序，并输出。\n        - 但该命令仅对文件内容进行操作，命令不会缓存中的内容进行操作。\n        - ! 通常和非交互式命令结合使用。\n\n## 读取命令的输出\n\n- 很多人常用 vim read命令读取内容， 如：`:read textfile`\n- 但 read还可以用于读取 shell 命令的输出，如：`:read ! ls | sort`\n\n## 使用外部命令过滤文本\n\n- 进入 vim visual模式，选中你想操作的文本，然后执行 shell 命令。\n- 你选中的命令会被 shell 命令的输出替换。\n\n## 注：\n\n- 默认情况下，vim 使用系统默认使用的 shell。\n- 查看 vim 使用了哪一个 shell `:set shell ?`\n- 设置你想要试用的shell `:set shell=/path/to/shell`\n\n","slug":"023-Vim使用技巧-执行外部命令","published":1,"date":"2020-10-02T14:10:21.772Z","updated":"2020-10-02T14:10:21.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkw001c8p7leo183w45","content":"<h1 id=\"Vim使用技巧-执行外部命令\"><a href=\"#Vim使用技巧-执行外部命令\" class=\"headerlink\" title=\"Vim使用技巧-执行外部命令\"></a>Vim使用技巧-执行外部命令</h1><h2 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h2><p>vim 是十分强大的文本编辑工具，但有一些事它做不了。本文简单说说在不离开 vim 编辑器的情况下，执行 shell 命令、工具。</p>\n<h2 id=\"进入shell\"><a href=\"#进入shell\" class=\"headerlink\" title=\"进入shell\"></a>进入shell</h2><ul>\n<li>在 vim 中执行 :shell 或 :sh，当退出当前 shell 时，就会回到 vim；</li>\n<li>也可以使用 ctr-z 进入 shell， 然后执行 fg 回到 vim。</li>\n<li>上述功能可用于下述场景：<ul>\n<li>如我们编辑了一个文件，但是发现无法保存（没有写权限），你可以先改变该文件读写权限，然后再回到 vim 保存刚刚的修改。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在vim中执行-shell-命令\"><a href=\"#在vim中执行-shell-命令\" class=\"headerlink\" title=\"在vim中执行 shell 命令!\"></a>在vim中执行 shell 命令!</h2><ul>\n<li>我们只需要在命令前 加上 ! 就可以。<ul>\n<li>如，<code>:! sort %</code><ul>\n<li>该命令会对当前编辑的文件（％）内容进行排序，并输出。</li>\n<li>但该命令仅对文件内容进行操作，命令不会缓存中的内容进行操作。</li>\n<li>! 通常和非交互式命令结合使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"读取命令的输出\"><a href=\"#读取命令的输出\" class=\"headerlink\" title=\"读取命令的输出\"></a>读取命令的输出</h2><ul>\n<li>很多人常用 vim read命令读取内容， 如：<code>:read textfile</code></li>\n<li>但 read还可以用于读取 shell 命令的输出，如：<code>:read ! ls | sort</code></li>\n</ul>\n<h2 id=\"使用外部命令过滤文本\"><a href=\"#使用外部命令过滤文本\" class=\"headerlink\" title=\"使用外部命令过滤文本\"></a>使用外部命令过滤文本</h2><ul>\n<li>进入 vim visual模式，选中你想操作的文本，然后执行 shell 命令。</li>\n<li>你选中的命令会被 shell 命令的输出替换。</li>\n</ul>\n<h2 id=\"注：\"><a href=\"#注：\" class=\"headerlink\" title=\"注：\"></a>注：</h2><ul>\n<li>默认情况下，vim 使用系统默认使用的 shell。</li>\n<li>查看 vim 使用了哪一个 shell <code>:set shell ?</code></li>\n<li>设置你想要试用的shell <code>:set shell=/path/to/shell</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vim使用技巧-执行外部命令\"><a href=\"#Vim使用技巧-执行外部命令\" class=\"headerlink\" title=\"Vim使用技巧-执行外部命令\"></a>Vim使用技巧-执行外部命令</h1><h2 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h2><p>vim 是十分强大的文本编辑工具，但有一些事它做不了。本文简单说说在不离开 vim 编辑器的情况下，执行 shell 命令、工具。</p>\n<h2 id=\"进入shell\"><a href=\"#进入shell\" class=\"headerlink\" title=\"进入shell\"></a>进入shell</h2><ul>\n<li>在 vim 中执行 :shell 或 :sh，当退出当前 shell 时，就会回到 vim；</li>\n<li>也可以使用 ctr-z 进入 shell， 然后执行 fg 回到 vim。</li>\n<li>上述功能可用于下述场景：<ul>\n<li>如我们编辑了一个文件，但是发现无法保存（没有写权限），你可以先改变该文件读写权限，然后再回到 vim 保存刚刚的修改。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在vim中执行-shell-命令\"><a href=\"#在vim中执行-shell-命令\" class=\"headerlink\" title=\"在vim中执行 shell 命令!\"></a>在vim中执行 shell 命令!</h2><ul>\n<li>我们只需要在命令前 加上 ! 就可以。<ul>\n<li>如，<code>:! sort %</code><ul>\n<li>该命令会对当前编辑的文件（％）内容进行排序，并输出。</li>\n<li>但该命令仅对文件内容进行操作，命令不会缓存中的内容进行操作。</li>\n<li>! 通常和非交互式命令结合使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"读取命令的输出\"><a href=\"#读取命令的输出\" class=\"headerlink\" title=\"读取命令的输出\"></a>读取命令的输出</h2><ul>\n<li>很多人常用 vim read命令读取内容， 如：<code>:read textfile</code></li>\n<li>但 read还可以用于读取 shell 命令的输出，如：<code>:read ! ls | sort</code></li>\n</ul>\n<h2 id=\"使用外部命令过滤文本\"><a href=\"#使用外部命令过滤文本\" class=\"headerlink\" title=\"使用外部命令过滤文本\"></a>使用外部命令过滤文本</h2><ul>\n<li>进入 vim visual模式，选中你想操作的文本，然后执行 shell 命令。</li>\n<li>你选中的命令会被 shell 命令的输出替换。</li>\n</ul>\n<h2 id=\"注：\"><a href=\"#注：\" class=\"headerlink\" title=\"注：\"></a>注：</h2><ul>\n<li>默认情况下，vim 使用系统默认使用的 shell。</li>\n<li>查看 vim 使用了哪一个 shell <code>:set shell ?</code></li>\n<li>设置你想要试用的shell <code>:set shell=/path/to/shell</code></li>\n</ul>\n"},{"title":"Vim基本操作","time":"2020-01-08 23:46","notebook":"blog","_content":"\n# Vim基本操作\n\n## 文件操作\n\n- 只读方式打开文件 `-R` eg. `vim clipboard.md -R`\n","source":"_posts/025-Vim基本操作.md","raw":"---\ntitle: Vim基本操作\ntime: 2020-01-08 23:46\ntags: Markdown,GitMdNote,blog-2020-01\nnotebook: blog\n---\n\n# Vim基本操作\n\n## 文件操作\n\n- 只读方式打开文件 `-R` eg. `vim clipboard.md -R`\n","slug":"025-Vim基本操作","published":1,"date":"2020-10-02T14:10:21.809Z","updated":"2020-10-02T14:10:21.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dkx001e8p7ldy94ggv8","content":"<h1 id=\"Vim基本操作\"><a href=\"#Vim基本操作\" class=\"headerlink\" title=\"Vim基本操作\"></a>Vim基本操作</h1><h2 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><ul>\n<li>只读方式打开文件 <code>-R</code> eg. <code>vim clipboard.md -R</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vim基本操作\"><a href=\"#Vim基本操作\" class=\"headerlink\" title=\"Vim基本操作\"></a>Vim基本操作</h1><h2 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><ul>\n<li>只读方式打开文件 <code>-R</code> eg. <code>vim clipboard.md -R</code></li>\n</ul>\n"},{"title":"024-Vim脚本编写入门.md","time":"2020-01-05 16:42","notebook":"blog","_content":"\n# Vim脚本编写入门\n\n\n## 入门案例：\n\n- 冒号: 字符非必须，只有键入命令时需要，编写Vim脚本时可以省略\n```\n:let i = 1\n:while i < 5\n:\techo \"Hello,World!\" i\n:\tlet i += 1\n:endwhile\n```\n\n## 1.变量\n\n- 定义变量 :let\n:let {变量} = {表达式}\n表达式类型\n\n- ==vim脚本变量类型有9种==\t\n\n数值\t\t32位或64位带符号整数。\n\t\t64-位整数只有在编译时带  +num64  特性时才有效。\n\t    示例:  -123  0x10  0177  0b1011\n浮点数 \t带小数的数值。\n\t\t{仅当编译时加入  +float  特性才有效}\n\t\t示例: 123.456  1.15e-6  -1.1e3\n字符串  \n列表 \t项目的有序的序列。\n\t\t示例: [1, 2, ['a', 'b']]\n字典\t\t关联数组:每个项目包含一个键和一个值\n\t\t示例: {'blue': \"#0000ff\", 'red': \"#ff0000\"}\n函数引用 指向一个函数的引用\n\t\t示例: function(\"strlen\")\n特殊 \tv:false 、 v:true 、 v:none  和  v:null 。\n工作\t\t用于作业\n通道\t\t用于通道\n    数值和字符串类型之间会根据使用的情况自动转换\n    列表、字典、函数引用、作业和通道类型不会自动进行转换。\n\n变量有不同的命名空间，根据附加的前缀决定:\n\n (无) 函数内: 局部于函数；否则: 全局\n buffer-variable     b:   局部于当前缓冲区。\n window-variable     w:   局部于当前窗口。\n tabpage-variable    t:   局部于当前标签页。\n global-variable     g:   全局。\n local-variable      l:   局部于函数。\n script-variable     s:   局部于  :source  的 Vim 脚本。\n function-argument   a:   函数参数 (只限于函数内使用)。\n vim-variable        v:   Vim 预定义的全局变量\n\n\n删除变量 :unlet\n:unlet {变量}\n\n    例如:unlet s:count，这将删除count局部变量并释放其占用的内存。如果不确定这个变量是否存在，又不希望看到系统在它不存在时报错，可以在命令后面加!，即:unlet! s:count\n\n## 2. 表达式\n\n```\nexpr2 ? expr1 : expr1   if-then-else\nexpr3 || expr3 ..       逻辑或\nexpr4 && expr4 ..       逻辑与\nexpr5 == expr5          等于\nexpr5 != expr5          不等于\nexpr5 >  expr5          大于\nexpr5 >= expr5          大于等于\nexpr5 <  expr5          小于\nexpr5 <= expr5          小于等于\nexpr5 =~ expr5          匹配正规表达式\nexpr5 !~ expr5          不匹配正规表达式\nexpr5 ==? expr5         等于，忽略大小写\nexpr5 ==# expr5         等于，匹配大小写\n等等                    如上，? 忽略大小写，# 则匹配之\nexpr5 is expr5          相同的  List  实例\nexpr5 isnot expr5       不同的  List  实例\n**算术**\nexpr6 +  expr6 ..       数值加法或列表连接\nexpr6 -  expr6 ..       数值减法\nexpr6 .  expr6 ..       字符串连接\nexpr7 *  expr7 ..       数值乘法\nexpr7 /  expr7 ..       数值除法\nexpr7 %  expr7 ..       数值求余\n! expr7                 逻辑非\n- expr7                 一元减法: 取反\n+ expr7                 一元加法: 原值\nexpr8[expr1]            字符串里的字节或者  List  的项目\nexpr8[expr1 : expr1]    字符串子串或  List  的子列表\nexpr8.name               Dictionary  的项目\nexpr8(expr1, ...)       使用  Funcref  变量的函数调用\n\n\"string\"                字符串常数，反斜杠有特殊含义\n'string'                字符串常数，' 加倍\n[expr1, ...]             List \n{expr1: expr1, ...}      Dictionary \n&option                 选项值\n(expr1)                 嵌套表达式\nvariable                内部变量\nva{ria}ble              带花括号的内部变量\n$VAR                    环境变量\n@r                      寄存器 'r' 的值\nfunction(expr1, ...)    函数调用\nfunc{ti}on(expr1, ...)  带花括号的函数调用\n{args -> expr1}         匿名函数表达式\n\"..\" 标明这一层上的操作可以连接。比如: \n&nu || &list && &shell == \"csh\"\n同一层的表达式从左到右进行分析。\n```\n\n\n## 3.语句\n\n:if\n\n单分支：\n    :if 表达式\n \t\t代码块\n \t:endif\n双分支：\n\t:if 表达式\n\t\t代码块\n \t:else\n \t\t代码块2\n \t:endif\n \t多分支：\n \t\t:if 表达式1\n \t\t\t代码块\n \t\t:elseif 表达式2\n \t\t\t代码块2\n \t\t:else\n \t\t\t代码块3\n \t\t:endif\n\n:while\n\n\t:while 表达式\n\t\t代码块\n\t:endwhile\n:for\n\n\t:for {var} in {list}\n\t\t循环代码块\n\t:endfor\n\t:for [{var1},{var2},...] in {listlist}\n\t\t循环代码块\n\t:endfor\n\n\n:continue 跳回while循环的开始;继续循环。在 \":while\" 或 \":for\" 循环的内部，跳回循环开始的地方。\n:break  跳至:endwhile;循环结束 。在 \":while\" 或 \":for\" 循环的内部，跳到相匹配的  \":endwhile\" 或 \":endfor\" 之后的命令。\n\n执行单个表达式\n\n执行一个vim命令行命令\n\t:execute  \"vim命令\" . 参数\n\t参数可以是变量，如果不是变量，必须单引号引起来\n\t例如：:execute \"! \". 'ls -la'\n执行一个普通模式命令（快捷操作）\n参数不能是表达式，可以和:execute 配合使用来带参数\n\t:normal vim命令\n\t例如：:normal gt\n\n使用函数\n\n一个函数可以被:call命令调用,参数列表要用括号括起来，并用逗号分割\n:call search(\"Date:\",\"W\")\n\n\n自定义函数\n\n\t:function {name}({var1}, {var2}, ...)\n\t\t{函数体}\n\t:endfunction\n\t# 函数名必须以大写字母开始\n\t# 要重定义一个已经存在的函数，在 \"function\" 命令后加上 !\n\t# echo 可以输出函数结果 echo 函数\n\n\n## 引文\n\n- [原文链接](https://blog.csdn.net/karelcn/article/details/82963604)\n\n","source":"_posts/024-Vim脚本编写入门.md","raw":"---\ntitle: 024-Vim脚本编写入门.md\ntime: 2020-01-05 16:42\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Vim脚本编写入门\n\n\n## 入门案例：\n\n- 冒号: 字符非必须，只有键入命令时需要，编写Vim脚本时可以省略\n```\n:let i = 1\n:while i < 5\n:\techo \"Hello,World!\" i\n:\tlet i += 1\n:endwhile\n```\n\n## 1.变量\n\n- 定义变量 :let\n:let {变量} = {表达式}\n表达式类型\n\n- ==vim脚本变量类型有9种==\t\n\n数值\t\t32位或64位带符号整数。\n\t\t64-位整数只有在编译时带  +num64  特性时才有效。\n\t    示例:  -123  0x10  0177  0b1011\n浮点数 \t带小数的数值。\n\t\t{仅当编译时加入  +float  特性才有效}\n\t\t示例: 123.456  1.15e-6  -1.1e3\n字符串  \n列表 \t项目的有序的序列。\n\t\t示例: [1, 2, ['a', 'b']]\n字典\t\t关联数组:每个项目包含一个键和一个值\n\t\t示例: {'blue': \"#0000ff\", 'red': \"#ff0000\"}\n函数引用 指向一个函数的引用\n\t\t示例: function(\"strlen\")\n特殊 \tv:false 、 v:true 、 v:none  和  v:null 。\n工作\t\t用于作业\n通道\t\t用于通道\n    数值和字符串类型之间会根据使用的情况自动转换\n    列表、字典、函数引用、作业和通道类型不会自动进行转换。\n\n变量有不同的命名空间，根据附加的前缀决定:\n\n (无) 函数内: 局部于函数；否则: 全局\n buffer-variable     b:   局部于当前缓冲区。\n window-variable     w:   局部于当前窗口。\n tabpage-variable    t:   局部于当前标签页。\n global-variable     g:   全局。\n local-variable      l:   局部于函数。\n script-variable     s:   局部于  :source  的 Vim 脚本。\n function-argument   a:   函数参数 (只限于函数内使用)。\n vim-variable        v:   Vim 预定义的全局变量\n\n\n删除变量 :unlet\n:unlet {变量}\n\n    例如:unlet s:count，这将删除count局部变量并释放其占用的内存。如果不确定这个变量是否存在，又不希望看到系统在它不存在时报错，可以在命令后面加!，即:unlet! s:count\n\n## 2. 表达式\n\n```\nexpr2 ? expr1 : expr1   if-then-else\nexpr3 || expr3 ..       逻辑或\nexpr4 && expr4 ..       逻辑与\nexpr5 == expr5          等于\nexpr5 != expr5          不等于\nexpr5 >  expr5          大于\nexpr5 >= expr5          大于等于\nexpr5 <  expr5          小于\nexpr5 <= expr5          小于等于\nexpr5 =~ expr5          匹配正规表达式\nexpr5 !~ expr5          不匹配正规表达式\nexpr5 ==? expr5         等于，忽略大小写\nexpr5 ==# expr5         等于，匹配大小写\n等等                    如上，? 忽略大小写，# 则匹配之\nexpr5 is expr5          相同的  List  实例\nexpr5 isnot expr5       不同的  List  实例\n**算术**\nexpr6 +  expr6 ..       数值加法或列表连接\nexpr6 -  expr6 ..       数值减法\nexpr6 .  expr6 ..       字符串连接\nexpr7 *  expr7 ..       数值乘法\nexpr7 /  expr7 ..       数值除法\nexpr7 %  expr7 ..       数值求余\n! expr7                 逻辑非\n- expr7                 一元减法: 取反\n+ expr7                 一元加法: 原值\nexpr8[expr1]            字符串里的字节或者  List  的项目\nexpr8[expr1 : expr1]    字符串子串或  List  的子列表\nexpr8.name               Dictionary  的项目\nexpr8(expr1, ...)       使用  Funcref  变量的函数调用\n\n\"string\"                字符串常数，反斜杠有特殊含义\n'string'                字符串常数，' 加倍\n[expr1, ...]             List \n{expr1: expr1, ...}      Dictionary \n&option                 选项值\n(expr1)                 嵌套表达式\nvariable                内部变量\nva{ria}ble              带花括号的内部变量\n$VAR                    环境变量\n@r                      寄存器 'r' 的值\nfunction(expr1, ...)    函数调用\nfunc{ti}on(expr1, ...)  带花括号的函数调用\n{args -> expr1}         匿名函数表达式\n\"..\" 标明这一层上的操作可以连接。比如: \n&nu || &list && &shell == \"csh\"\n同一层的表达式从左到右进行分析。\n```\n\n\n## 3.语句\n\n:if\n\n单分支：\n    :if 表达式\n \t\t代码块\n \t:endif\n双分支：\n\t:if 表达式\n\t\t代码块\n \t:else\n \t\t代码块2\n \t:endif\n \t多分支：\n \t\t:if 表达式1\n \t\t\t代码块\n \t\t:elseif 表达式2\n \t\t\t代码块2\n \t\t:else\n \t\t\t代码块3\n \t\t:endif\n\n:while\n\n\t:while 表达式\n\t\t代码块\n\t:endwhile\n:for\n\n\t:for {var} in {list}\n\t\t循环代码块\n\t:endfor\n\t:for [{var1},{var2},...] in {listlist}\n\t\t循环代码块\n\t:endfor\n\n\n:continue 跳回while循环的开始;继续循环。在 \":while\" 或 \":for\" 循环的内部，跳回循环开始的地方。\n:break  跳至:endwhile;循环结束 。在 \":while\" 或 \":for\" 循环的内部，跳到相匹配的  \":endwhile\" 或 \":endfor\" 之后的命令。\n\n执行单个表达式\n\n执行一个vim命令行命令\n\t:execute  \"vim命令\" . 参数\n\t参数可以是变量，如果不是变量，必须单引号引起来\n\t例如：:execute \"! \". 'ls -la'\n执行一个普通模式命令（快捷操作）\n参数不能是表达式，可以和:execute 配合使用来带参数\n\t:normal vim命令\n\t例如：:normal gt\n\n使用函数\n\n一个函数可以被:call命令调用,参数列表要用括号括起来，并用逗号分割\n:call search(\"Date:\",\"W\")\n\n\n自定义函数\n\n\t:function {name}({var1}, {var2}, ...)\n\t\t{函数体}\n\t:endfunction\n\t# 函数名必须以大写字母开始\n\t# 要重定义一个已经存在的函数，在 \"function\" 命令后加上 !\n\t# echo 可以输出函数结果 echo 函数\n\n\n## 引文\n\n- [原文链接](https://blog.csdn.net/karelcn/article/details/82963604)\n\n","slug":"024-Vim脚本编写入门","published":1,"date":"2020-10-02T14:10:21.787Z","updated":"2020-10-02T14:10:21.793Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dky001h8p7lf74ne8se","content":"<h1 id=\"Vim脚本编写入门\"><a href=\"#Vim脚本编写入门\" class=\"headerlink\" title=\"Vim脚本编写入门\"></a>Vim脚本编写入门</h1><h2 id=\"入门案例：\"><a href=\"#入门案例：\" class=\"headerlink\" title=\"入门案例：\"></a>入门案例：</h2><ul>\n<li>冒号: 字符非必须，只有键入命令时需要，编写Vim脚本时可以省略<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:let i &#x3D; 1</span><br><span class=\"line\">:while i &lt; 5</span><br><span class=\"line\">:\techo &quot;Hello,World!&quot; i</span><br><span class=\"line\">:\tlet i +&#x3D; 1</span><br><span class=\"line\">:endwhile</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"1-变量\"><a href=\"#1-变量\" class=\"headerlink\" title=\"1.变量\"></a>1.变量</h2><ul>\n<li><p>定义变量 :let<br>:let {变量} = {表达式}<br>表达式类型</p>\n</li>\n<li><p>==vim脚本变量类型有9种==    </p>\n</li>\n</ul>\n<p>数值        32位或64位带符号整数。<br>        64-位整数只有在编译时带  +num64  特性时才有效。<br>        示例:  -123  0x10  0177  0b1011<br>浮点数     带小数的数值。<br>        {仅当编译时加入  +float  特性才有效}<br>        示例: 123.456  1.15e-6  -1.1e3<br>字符串<br>列表     项目的有序的序列。<br>        示例: [1, 2, [‘a’, ‘b’]]<br>字典        关联数组:每个项目包含一个键和一个值<br>        示例: {‘blue’: “#0000ff”, ‘red’: “#ff0000”}<br>函数引用 指向一个函数的引用<br>        示例: function(“strlen”)<br>特殊     v:false 、 v:true 、 v:none  和  v:null 。<br>工作        用于作业<br>通道        用于通道<br>    数值和字符串类型之间会根据使用的情况自动转换<br>    列表、字典、函数引用、作业和通道类型不会自动进行转换。</p>\n<p>变量有不同的命名空间，根据附加的前缀决定:</p>\n<p> (无) 函数内: 局部于函数；否则: 全局<br> buffer-variable     b:   局部于当前缓冲区。<br> window-variable     w:   局部于当前窗口。<br> tabpage-variable    t:   局部于当前标签页。<br> global-variable     g:   全局。<br> local-variable      l:   局部于函数。<br> script-variable     s:   局部于  :source  的 Vim 脚本。<br> function-argument   a:   函数参数 (只限于函数内使用)。<br> vim-variable        v:   Vim 预定义的全局变量</p>\n<p>删除变量 :unlet<br>:unlet {变量}</p>\n<pre><code>例如:unlet s:count，这将删除count局部变量并释放其占用的内存。如果不确定这个变量是否存在，又不希望看到系统在它不存在时报错，可以在命令后面加!，即:unlet! s:count</code></pre>\n<h2 id=\"2-表达式\"><a href=\"#2-表达式\" class=\"headerlink\" title=\"2. 表达式\"></a>2. 表达式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr2 ? expr1 : expr1   if-then-else</span><br><span class=\"line\">expr3 || expr3 ..       逻辑或</span><br><span class=\"line\">expr4 &amp;&amp; expr4 ..       逻辑与</span><br><span class=\"line\">expr5 &#x3D;&#x3D; expr5          等于</span><br><span class=\"line\">expr5 !&#x3D; expr5          不等于</span><br><span class=\"line\">expr5 &gt;  expr5          大于</span><br><span class=\"line\">expr5 &gt;&#x3D; expr5          大于等于</span><br><span class=\"line\">expr5 &lt;  expr5          小于</span><br><span class=\"line\">expr5 &lt;&#x3D; expr5          小于等于</span><br><span class=\"line\">expr5 &#x3D;~ expr5          匹配正规表达式</span><br><span class=\"line\">expr5 !~ expr5          不匹配正规表达式</span><br><span class=\"line\">expr5 &#x3D;&#x3D;? expr5         等于，忽略大小写</span><br><span class=\"line\">expr5 &#x3D;&#x3D;# expr5         等于，匹配大小写</span><br><span class=\"line\">等等                    如上，? 忽略大小写，# 则匹配之</span><br><span class=\"line\">expr5 is expr5          相同的  List  实例</span><br><span class=\"line\">expr5 isnot expr5       不同的  List  实例</span><br><span class=\"line\">**算术**</span><br><span class=\"line\">expr6 +  expr6 ..       数值加法或列表连接</span><br><span class=\"line\">expr6 -  expr6 ..       数值减法</span><br><span class=\"line\">expr6 .  expr6 ..       字符串连接</span><br><span class=\"line\">expr7 *  expr7 ..       数值乘法</span><br><span class=\"line\">expr7 &#x2F;  expr7 ..       数值除法</span><br><span class=\"line\">expr7 %  expr7 ..       数值求余</span><br><span class=\"line\">! expr7                 逻辑非</span><br><span class=\"line\">- expr7                 一元减法: 取反</span><br><span class=\"line\">+ expr7                 一元加法: 原值</span><br><span class=\"line\">expr8[expr1]            字符串里的字节或者  List  的项目</span><br><span class=\"line\">expr8[expr1 : expr1]    字符串子串或  List  的子列表</span><br><span class=\"line\">expr8.name               Dictionary  的项目</span><br><span class=\"line\">expr8(expr1, ...)       使用  Funcref  变量的函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;string&quot;                字符串常数，反斜杠有特殊含义</span><br><span class=\"line\">&#39;string&#39;                字符串常数，&#39; 加倍</span><br><span class=\"line\">[expr1, ...]             List </span><br><span class=\"line\">&#123;expr1: expr1, ...&#125;      Dictionary </span><br><span class=\"line\">&amp;option                 选项值</span><br><span class=\"line\">(expr1)                 嵌套表达式</span><br><span class=\"line\">variable                内部变量</span><br><span class=\"line\">va&#123;ria&#125;ble              带花括号的内部变量</span><br><span class=\"line\">$VAR                    环境变量</span><br><span class=\"line\">@r                      寄存器 &#39;r&#39; 的值</span><br><span class=\"line\">function(expr1, ...)    函数调用</span><br><span class=\"line\">func&#123;ti&#125;on(expr1, ...)  带花括号的函数调用</span><br><span class=\"line\">&#123;args -&gt; expr1&#125;         匿名函数表达式</span><br><span class=\"line\">&quot;..&quot; 标明这一层上的操作可以连接。比如: </span><br><span class=\"line\">&amp;nu || &amp;list &amp;&amp; &amp;shell &#x3D;&#x3D; &quot;csh&quot;</span><br><span class=\"line\">同一层的表达式从左到右进行分析。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-语句\"><a href=\"#3-语句\" class=\"headerlink\" title=\"3.语句\"></a>3.语句</h2><p>:if</p>\n<p>单分支：<br>    :if 表达式<br>         代码块<br>     :endif<br>双分支：<br>    :if 表达式<br>        代码块<br>     :else<br>         代码块2<br>     :endif<br>     多分支：<br>         :if 表达式1<br>             代码块<br>         :elseif 表达式2<br>             代码块2<br>         :else<br>             代码块3<br>         :endif</p>\n<p>:while</p>\n<pre><code>:while 表达式\n    代码块\n:endwhile</code></pre>\n<p>:for</p>\n<pre><code>:for &#123;var&#125; in &#123;list&#125;\n    循环代码块\n:endfor\n:for [&#123;var1&#125;,&#123;var2&#125;,...] in &#123;listlist&#125;\n    循环代码块\n:endfor</code></pre>\n<p>:continue 跳回while循环的开始;继续循环。在 “:while” 或 “:for” 循环的内部，跳回循环开始的地方。<br>:break  跳至:endwhile;循环结束 。在 “:while” 或 “:for” 循环的内部，跳到相匹配的  “:endwhile” 或 “:endfor” 之后的命令。</p>\n<p>执行单个表达式</p>\n<p>执行一个vim命令行命令<br>    :execute  “vim命令” . 参数<br>    参数可以是变量，如果不是变量，必须单引号引起来<br>    例如：:execute “! “. ‘ls -la’<br>执行一个普通模式命令（快捷操作）<br>参数不能是表达式，可以和:execute 配合使用来带参数<br>    :normal vim命令<br>    例如：:normal gt</p>\n<p>使用函数</p>\n<p>一个函数可以被:call命令调用,参数列表要用括号括起来，并用逗号分割<br>:call search(“Date:”,”W”)</p>\n<p>自定义函数</p>\n<pre><code>:function &#123;name&#125;(&#123;var1&#125;, &#123;var2&#125;, ...)\n    &#123;函数体&#125;\n:endfunction\n# 函数名必须以大写字母开始\n# 要重定义一个已经存在的函数，在 &quot;function&quot; 命令后加上 !\n# echo 可以输出函数结果 echo 函数</code></pre>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"https://blog.csdn.net/karelcn/article/details/82963604\">原文链接</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vim脚本编写入门\"><a href=\"#Vim脚本编写入门\" class=\"headerlink\" title=\"Vim脚本编写入门\"></a>Vim脚本编写入门</h1><h2 id=\"入门案例：\"><a href=\"#入门案例：\" class=\"headerlink\" title=\"入门案例：\"></a>入门案例：</h2><ul>\n<li>冒号: 字符非必须，只有键入命令时需要，编写Vim脚本时可以省略<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:let i &#x3D; 1</span><br><span class=\"line\">:while i &lt; 5</span><br><span class=\"line\">:\techo &quot;Hello,World!&quot; i</span><br><span class=\"line\">:\tlet i +&#x3D; 1</span><br><span class=\"line\">:endwhile</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"1-变量\"><a href=\"#1-变量\" class=\"headerlink\" title=\"1.变量\"></a>1.变量</h2><ul>\n<li><p>定义变量 :let<br>:let {变量} = {表达式}<br>表达式类型</p>\n</li>\n<li><p>==vim脚本变量类型有9种==    </p>\n</li>\n</ul>\n<p>数值        32位或64位带符号整数。<br>        64-位整数只有在编译时带  +num64  特性时才有效。<br>        示例:  -123  0x10  0177  0b1011<br>浮点数     带小数的数值。<br>        {仅当编译时加入  +float  特性才有效}<br>        示例: 123.456  1.15e-6  -1.1e3<br>字符串<br>列表     项目的有序的序列。<br>        示例: [1, 2, [‘a’, ‘b’]]<br>字典        关联数组:每个项目包含一个键和一个值<br>        示例: {‘blue’: “#0000ff”, ‘red’: “#ff0000”}<br>函数引用 指向一个函数的引用<br>        示例: function(“strlen”)<br>特殊     v:false 、 v:true 、 v:none  和  v:null 。<br>工作        用于作业<br>通道        用于通道<br>    数值和字符串类型之间会根据使用的情况自动转换<br>    列表、字典、函数引用、作业和通道类型不会自动进行转换。</p>\n<p>变量有不同的命名空间，根据附加的前缀决定:</p>\n<p> (无) 函数内: 局部于函数；否则: 全局<br> buffer-variable     b:   局部于当前缓冲区。<br> window-variable     w:   局部于当前窗口。<br> tabpage-variable    t:   局部于当前标签页。<br> global-variable     g:   全局。<br> local-variable      l:   局部于函数。<br> script-variable     s:   局部于  :source  的 Vim 脚本。<br> function-argument   a:   函数参数 (只限于函数内使用)。<br> vim-variable        v:   Vim 预定义的全局变量</p>\n<p>删除变量 :unlet<br>:unlet {变量}</p>\n<pre><code>例如:unlet s:count，这将删除count局部变量并释放其占用的内存。如果不确定这个变量是否存在，又不希望看到系统在它不存在时报错，可以在命令后面加!，即:unlet! s:count</code></pre>\n<h2 id=\"2-表达式\"><a href=\"#2-表达式\" class=\"headerlink\" title=\"2. 表达式\"></a>2. 表达式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expr2 ? expr1 : expr1   if-then-else</span><br><span class=\"line\">expr3 || expr3 ..       逻辑或</span><br><span class=\"line\">expr4 &amp;&amp; expr4 ..       逻辑与</span><br><span class=\"line\">expr5 &#x3D;&#x3D; expr5          等于</span><br><span class=\"line\">expr5 !&#x3D; expr5          不等于</span><br><span class=\"line\">expr5 &gt;  expr5          大于</span><br><span class=\"line\">expr5 &gt;&#x3D; expr5          大于等于</span><br><span class=\"line\">expr5 &lt;  expr5          小于</span><br><span class=\"line\">expr5 &lt;&#x3D; expr5          小于等于</span><br><span class=\"line\">expr5 &#x3D;~ expr5          匹配正规表达式</span><br><span class=\"line\">expr5 !~ expr5          不匹配正规表达式</span><br><span class=\"line\">expr5 &#x3D;&#x3D;? expr5         等于，忽略大小写</span><br><span class=\"line\">expr5 &#x3D;&#x3D;# expr5         等于，匹配大小写</span><br><span class=\"line\">等等                    如上，? 忽略大小写，# 则匹配之</span><br><span class=\"line\">expr5 is expr5          相同的  List  实例</span><br><span class=\"line\">expr5 isnot expr5       不同的  List  实例</span><br><span class=\"line\">**算术**</span><br><span class=\"line\">expr6 +  expr6 ..       数值加法或列表连接</span><br><span class=\"line\">expr6 -  expr6 ..       数值减法</span><br><span class=\"line\">expr6 .  expr6 ..       字符串连接</span><br><span class=\"line\">expr7 *  expr7 ..       数值乘法</span><br><span class=\"line\">expr7 &#x2F;  expr7 ..       数值除法</span><br><span class=\"line\">expr7 %  expr7 ..       数值求余</span><br><span class=\"line\">! expr7                 逻辑非</span><br><span class=\"line\">- expr7                 一元减法: 取反</span><br><span class=\"line\">+ expr7                 一元加法: 原值</span><br><span class=\"line\">expr8[expr1]            字符串里的字节或者  List  的项目</span><br><span class=\"line\">expr8[expr1 : expr1]    字符串子串或  List  的子列表</span><br><span class=\"line\">expr8.name               Dictionary  的项目</span><br><span class=\"line\">expr8(expr1, ...)       使用  Funcref  变量的函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;string&quot;                字符串常数，反斜杠有特殊含义</span><br><span class=\"line\">&#39;string&#39;                字符串常数，&#39; 加倍</span><br><span class=\"line\">[expr1, ...]             List </span><br><span class=\"line\">&#123;expr1: expr1, ...&#125;      Dictionary </span><br><span class=\"line\">&amp;option                 选项值</span><br><span class=\"line\">(expr1)                 嵌套表达式</span><br><span class=\"line\">variable                内部变量</span><br><span class=\"line\">va&#123;ria&#125;ble              带花括号的内部变量</span><br><span class=\"line\">$VAR                    环境变量</span><br><span class=\"line\">@r                      寄存器 &#39;r&#39; 的值</span><br><span class=\"line\">function(expr1, ...)    函数调用</span><br><span class=\"line\">func&#123;ti&#125;on(expr1, ...)  带花括号的函数调用</span><br><span class=\"line\">&#123;args -&gt; expr1&#125;         匿名函数表达式</span><br><span class=\"line\">&quot;..&quot; 标明这一层上的操作可以连接。比如: </span><br><span class=\"line\">&amp;nu || &amp;list &amp;&amp; &amp;shell &#x3D;&#x3D; &quot;csh&quot;</span><br><span class=\"line\">同一层的表达式从左到右进行分析。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-语句\"><a href=\"#3-语句\" class=\"headerlink\" title=\"3.语句\"></a>3.语句</h2><p>:if</p>\n<p>单分支：<br>    :if 表达式<br>         代码块<br>     :endif<br>双分支：<br>    :if 表达式<br>        代码块<br>     :else<br>         代码块2<br>     :endif<br>     多分支：<br>         :if 表达式1<br>             代码块<br>         :elseif 表达式2<br>             代码块2<br>         :else<br>             代码块3<br>         :endif</p>\n<p>:while</p>\n<pre><code>:while 表达式\n    代码块\n:endwhile</code></pre>\n<p>:for</p>\n<pre><code>:for &#123;var&#125; in &#123;list&#125;\n    循环代码块\n:endfor\n:for [&#123;var1&#125;,&#123;var2&#125;,...] in &#123;listlist&#125;\n    循环代码块\n:endfor</code></pre>\n<p>:continue 跳回while循环的开始;继续循环。在 “:while” 或 “:for” 循环的内部，跳回循环开始的地方。<br>:break  跳至:endwhile;循环结束 。在 “:while” 或 “:for” 循环的内部，跳到相匹配的  “:endwhile” 或 “:endfor” 之后的命令。</p>\n<p>执行单个表达式</p>\n<p>执行一个vim命令行命令<br>    :execute  “vim命令” . 参数<br>    参数可以是变量，如果不是变量，必须单引号引起来<br>    例如：:execute “! “. ‘ls -la’<br>执行一个普通模式命令（快捷操作）<br>参数不能是表达式，可以和:execute 配合使用来带参数<br>    :normal vim命令<br>    例如：:normal gt</p>\n<p>使用函数</p>\n<p>一个函数可以被:call命令调用,参数列表要用括号括起来，并用逗号分割<br>:call search(“Date:”,”W”)</p>\n<p>自定义函数</p>\n<pre><code>:function &#123;name&#125;(&#123;var1&#125;, &#123;var2&#125;, ...)\n    &#123;函数体&#125;\n:endfunction\n# 函数名必须以大写字母开始\n# 要重定义一个已经存在的函数，在 &quot;function&quot; 命令后加上 !\n# echo 可以输出函数结果 echo 函数</code></pre>\n<h2 id=\"引文\"><a href=\"#引文\" class=\"headerlink\" title=\"引文\"></a>引文</h2><ul>\n<li><a href=\"https://blog.csdn.net/karelcn/article/details/82963604\">原文链接</a></li>\n</ul>\n"},{"title":"Mac常用软件","time":"2020-01-14 13:42","notebook":"blog","_content":"\n# Mac系统常用软件\n\n## 简介\n\n收集常用的、好用的软件，顺序代表优先级\n\n## 知识管理体系\n\n- 整理思路，读书笔记归纳\n\t- 思维导图\n\t\t- [Xmind8](https://www.xmind.cn/download/xmind8)\n- 第二大脑\n\t- 印象笔记\n\t- 有道云笔记\n\t- git\n- 开发环境\n\t- devenv-vim 开发环境\n\n## 时间管理\n\n## 系统扩展\n\n- 网速监视(顶部工具栏扩展，显示当前网速)\n  - [Network Speed Monitor](https://www.macbl.com/app/internet/network-speed-monitor)\n\n## 娱乐休闲\n\n- 视频转换\n  - [UniConverter 11.6.1.1  万能视频格式转换器](https://www.macbl.com/app/multimedia-music/uniconverter)\n    - 破解版\n- 娱乐游戏\n  - [大富翁4（Rich4） 1.0](https://www.macbl.com/app/games/rich4)\n  - [红色警戒3：起义时刻（Red Alert 3） 1.00.4473](https://www.macbl.com/app/games/red-alert-3)\n  - [The SIM S4 模拟人生4](https://www.ea.com/games/the-sims/the-sims-4)\n\n","source":"_posts/026-Mac常用软件.md","raw":"---\ntitle: Mac常用软件\ntime: 2020-01-14 13:42\ntags: Markdown,GitMdNote,blog-2020-01\nnotebook: blog\n---\n\n# Mac系统常用软件\n\n## 简介\n\n收集常用的、好用的软件，顺序代表优先级\n\n## 知识管理体系\n\n- 整理思路，读书笔记归纳\n\t- 思维导图\n\t\t- [Xmind8](https://www.xmind.cn/download/xmind8)\n- 第二大脑\n\t- 印象笔记\n\t- 有道云笔记\n\t- git\n- 开发环境\n\t- devenv-vim 开发环境\n\n## 时间管理\n\n## 系统扩展\n\n- 网速监视(顶部工具栏扩展，显示当前网速)\n  - [Network Speed Monitor](https://www.macbl.com/app/internet/network-speed-monitor)\n\n## 娱乐休闲\n\n- 视频转换\n  - [UniConverter 11.6.1.1  万能视频格式转换器](https://www.macbl.com/app/multimedia-music/uniconverter)\n    - 破解版\n- 娱乐游戏\n  - [大富翁4（Rich4） 1.0](https://www.macbl.com/app/games/rich4)\n  - [红色警戒3：起义时刻（Red Alert 3） 1.00.4473](https://www.macbl.com/app/games/red-alert-3)\n  - [The SIM S4 模拟人生4](https://www.ea.com/games/the-sims/the-sims-4)\n\n","slug":"026-Mac常用软件","published":1,"date":"2020-10-02T14:10:21.836Z","updated":"2020-10-02T14:10:21.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl0001j8p7l044nep8l","content":"<h1 id=\"Mac系统常用软件\"><a href=\"#Mac系统常用软件\" class=\"headerlink\" title=\"Mac系统常用软件\"></a>Mac系统常用软件</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>收集常用的、好用的软件，顺序代表优先级</p>\n<h2 id=\"知识管理体系\"><a href=\"#知识管理体系\" class=\"headerlink\" title=\"知识管理体系\"></a>知识管理体系</h2><ul>\n<li>整理思路，读书笔记归纳<ul>\n<li>思维导图<ul>\n<li><a href=\"https://www.xmind.cn/download/xmind8\">Xmind8</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二大脑<ul>\n<li>印象笔记</li>\n<li>有道云笔记</li>\n<li>git</li>\n</ul>\n</li>\n<li>开发环境<ul>\n<li>devenv-vim 开发环境</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"时间管理\"><a href=\"#时间管理\" class=\"headerlink\" title=\"时间管理\"></a>时间管理</h2><h2 id=\"系统扩展\"><a href=\"#系统扩展\" class=\"headerlink\" title=\"系统扩展\"></a>系统扩展</h2><ul>\n<li>网速监视(顶部工具栏扩展，显示当前网速)<ul>\n<li><a href=\"https://www.macbl.com/app/internet/network-speed-monitor\">Network Speed Monitor</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"娱乐休闲\"><a href=\"#娱乐休闲\" class=\"headerlink\" title=\"娱乐休闲\"></a>娱乐休闲</h2><ul>\n<li>视频转换<ul>\n<li><a href=\"https://www.macbl.com/app/multimedia-music/uniconverter\">UniConverter 11.6.1.1  万能视频格式转换器</a><ul>\n<li>破解版</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>娱乐游戏<ul>\n<li><a href=\"https://www.macbl.com/app/games/rich4\">大富翁4（Rich4） 1.0</a></li>\n<li><a href=\"https://www.macbl.com/app/games/red-alert-3\">红色警戒3：起义时刻（Red Alert 3） 1.00.4473</a></li>\n<li><a href=\"https://www.ea.com/games/the-sims/the-sims-4\">The SIM S4 模拟人生4</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mac系统常用软件\"><a href=\"#Mac系统常用软件\" class=\"headerlink\" title=\"Mac系统常用软件\"></a>Mac系统常用软件</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>收集常用的、好用的软件，顺序代表优先级</p>\n<h2 id=\"知识管理体系\"><a href=\"#知识管理体系\" class=\"headerlink\" title=\"知识管理体系\"></a>知识管理体系</h2><ul>\n<li>整理思路，读书笔记归纳<ul>\n<li>思维导图<ul>\n<li><a href=\"https://www.xmind.cn/download/xmind8\">Xmind8</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二大脑<ul>\n<li>印象笔记</li>\n<li>有道云笔记</li>\n<li>git</li>\n</ul>\n</li>\n<li>开发环境<ul>\n<li>devenv-vim 开发环境</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"时间管理\"><a href=\"#时间管理\" class=\"headerlink\" title=\"时间管理\"></a>时间管理</h2><h2 id=\"系统扩展\"><a href=\"#系统扩展\" class=\"headerlink\" title=\"系统扩展\"></a>系统扩展</h2><ul>\n<li>网速监视(顶部工具栏扩展，显示当前网速)<ul>\n<li><a href=\"https://www.macbl.com/app/internet/network-speed-monitor\">Network Speed Monitor</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"娱乐休闲\"><a href=\"#娱乐休闲\" class=\"headerlink\" title=\"娱乐休闲\"></a>娱乐休闲</h2><ul>\n<li>视频转换<ul>\n<li><a href=\"https://www.macbl.com/app/multimedia-music/uniconverter\">UniConverter 11.6.1.1  万能视频格式转换器</a><ul>\n<li>破解版</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>娱乐游戏<ul>\n<li><a href=\"https://www.macbl.com/app/games/rich4\">大富翁4（Rich4） 1.0</a></li>\n<li><a href=\"https://www.macbl.com/app/games/red-alert-3\">红色警戒3：起义时刻（Red Alert 3） 1.00.4473</a></li>\n<li><a href=\"https://www.ea.com/games/the-sims/the-sims-4\">The SIM S4 模拟人生4</a></li>\n</ul>\n</li>\n</ul>\n"},{"_content":"# 网盘你真的需要吗？\n\n## 常用的同步工具\n\n- github\n- gitee\n- Coding.net\n\n## 网盘\n\n- 百度网盘\n- 一刻相册\n- 坚果云\n\n## 文档查看和看小说\n\n- 看云\n\n","source":"_posts/028-网盘你真的需要吗.md","raw":"# 网盘你真的需要吗？\n\n## 常用的同步工具\n\n- github\n- gitee\n- Coding.net\n\n## 网盘\n\n- 百度网盘\n- 一刻相册\n- 坚果云\n\n## 文档查看和看小说\n\n- 看云\n\n","slug":"028-网盘你真的需要吗","published":1,"date":"2020-10-02T14:10:21.874Z","updated":"2020-10-02T14:10:21.877Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl1001l8p7lc18wfehp","content":"<h1 id=\"网盘你真的需要吗？\"><a href=\"#网盘你真的需要吗？\" class=\"headerlink\" title=\"网盘你真的需要吗？\"></a>网盘你真的需要吗？</h1><h2 id=\"常用的同步工具\"><a href=\"#常用的同步工具\" class=\"headerlink\" title=\"常用的同步工具\"></a>常用的同步工具</h2><ul>\n<li>github</li>\n<li>gitee</li>\n<li>Coding.net</li>\n</ul>\n<h2 id=\"网盘\"><a href=\"#网盘\" class=\"headerlink\" title=\"网盘\"></a>网盘</h2><ul>\n<li>百度网盘</li>\n<li>一刻相册</li>\n<li>坚果云</li>\n</ul>\n<h2 id=\"文档查看和看小说\"><a href=\"#文档查看和看小说\" class=\"headerlink\" title=\"文档查看和看小说\"></a>文档查看和看小说</h2><ul>\n<li>看云</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"网盘你真的需要吗？\"><a href=\"#网盘你真的需要吗？\" class=\"headerlink\" title=\"网盘你真的需要吗？\"></a>网盘你真的需要吗？</h1><h2 id=\"常用的同步工具\"><a href=\"#常用的同步工具\" class=\"headerlink\" title=\"常用的同步工具\"></a>常用的同步工具</h2><ul>\n<li>github</li>\n<li>gitee</li>\n<li>Coding.net</li>\n</ul>\n<h2 id=\"网盘\"><a href=\"#网盘\" class=\"headerlink\" title=\"网盘\"></a>网盘</h2><ul>\n<li>百度网盘</li>\n<li>一刻相册</li>\n<li>坚果云</li>\n</ul>\n<h2 id=\"文档查看和看小说\"><a href=\"#文档查看和看小说\" class=\"headerlink\" title=\"文档查看和看小说\"></a>文档查看和看小说</h2><ul>\n<li>看云</li>\n</ul>\n"},{"_content":"# vagrant使用入门\n\n\n\n## vagrant官方网站\n\n![image-20200926003801062](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926003801062-1517007.png?lastModify=1601516992)\n\n## 官方镜像仓库\n\nhttps://app.vagrantup.com/boxes/search\n\n![image-20200926010712485](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926010712485-1517007.png?lastModify=1601516992)\n\n## 镜像离线下载或镜像加速\n\n- 官方网站，大陆访问非常慢7kb/s\n- http://www.vagrantbox.es/\n\n![image-20200926004328137](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926004328137-1517007.png?lastModify=1601516992)\n\n### 清华大学镜像 ubuntu 14.04 \n\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/\n\n- ubuntu 18\n\n```\nvagrant box add \\\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/bionic/current/bionic-server-cloudimg-amd64-vagrant.box \\\n--name ubuntu/bionic\nvagrant-disksize\n\nA Vagrant plugin to resize disks in VirtualBox\nInstallation\n\nvagrant plugin install vagrant-disksize\n\nUsage\n\nSet the size you want for your disk in your Vagrantfile. For example\n\nVagrant.configure('2') do |config|\n  config.vm.box = 'ubuntu/xenial64'\n  config.disksize.size = '50GB'\nend\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh -\n\n加入工作节点\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn K3S_URL=https://myserver:6443 K3S_TOKEN=mynodetoken sh -\n\n\nkubectl apply -f https://192.168.2.139:8443/v3/import/7pdpdmnj4qr5hrjn2m4djljnk5fnjb59ln8tvkbrwgdhgphlpmxgbh.yaml\n\n\n- 安装Docker(2020.9.26，最新版19.03)\nsudo apt install docker.io\n- 安装Docker-Compose\nsudo apt install docker-compose\n\n- 当前用户给予权限\nsudo usermod -aG docker your-user\n\ndocker-compose/bionic 1.17.1-2 all\n  Punctual, lightweight development environments using Docker\n\ndocker-containerd/bionic 0.2.3+git+docker1.13.1~ds1-1 amd64\n  daemon to control runC (Docker's version)\n\ndocker-doc/bionic-updates 19.03.6-0ubuntu1~18.04.1 all\n  Linux container runtime -- documentation\n\ndocker-registry/bionic 2.6.2~ds1-1 amd64\n  Docker toolset to pack, ship, store, and deliver content\n\ndocker-runc/bionic 1.0.0~rc2+git+docker1.13.1~ds1-3 amd64\n  Open Container Project - runtime (Docker's version)\n\ndocker.io/bionic-updates 19.03.6-0ubuntu1~18.04.1 amd64\n  Linux container runtime\n```\n\n## k3s安装\n\n## 虚拟机磁盘扩容","source":"_posts/027-vagrant使用入门.md","raw":"# vagrant使用入门\n\n\n\n## vagrant官方网站\n\n![image-20200926003801062](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926003801062-1517007.png?lastModify=1601516992)\n\n## 官方镜像仓库\n\nhttps://app.vagrantup.com/boxes/search\n\n![image-20200926010712485](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926010712485-1517007.png?lastModify=1601516992)\n\n## 镜像离线下载或镜像加速\n\n- 官方网站，大陆访问非常慢7kb/s\n- http://www.vagrantbox.es/\n\n![image-20200926004328137](file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926004328137-1517007.png?lastModify=1601516992)\n\n### 清华大学镜像 ubuntu 14.04 \n\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/\n\n- ubuntu 18\n\n```\nvagrant box add \\\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/bionic/current/bionic-server-cloudimg-amd64-vagrant.box \\\n--name ubuntu/bionic\nvagrant-disksize\n\nA Vagrant plugin to resize disks in VirtualBox\nInstallation\n\nvagrant plugin install vagrant-disksize\n\nUsage\n\nSet the size you want for your disk in your Vagrantfile. For example\n\nVagrant.configure('2') do |config|\n  config.vm.box = 'ubuntu/xenial64'\n  config.disksize.size = '50GB'\nend\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh -\n\n加入工作节点\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn K3S_URL=https://myserver:6443 K3S_TOKEN=mynodetoken sh -\n\n\nkubectl apply -f https://192.168.2.139:8443/v3/import/7pdpdmnj4qr5hrjn2m4djljnk5fnjb59ln8tvkbrwgdhgphlpmxgbh.yaml\n\n\n- 安装Docker(2020.9.26，最新版19.03)\nsudo apt install docker.io\n- 安装Docker-Compose\nsudo apt install docker-compose\n\n- 当前用户给予权限\nsudo usermod -aG docker your-user\n\ndocker-compose/bionic 1.17.1-2 all\n  Punctual, lightweight development environments using Docker\n\ndocker-containerd/bionic 0.2.3+git+docker1.13.1~ds1-1 amd64\n  daemon to control runC (Docker's version)\n\ndocker-doc/bionic-updates 19.03.6-0ubuntu1~18.04.1 all\n  Linux container runtime -- documentation\n\ndocker-registry/bionic 2.6.2~ds1-1 amd64\n  Docker toolset to pack, ship, store, and deliver content\n\ndocker-runc/bionic 1.0.0~rc2+git+docker1.13.1~ds1-3 amd64\n  Open Container Project - runtime (Docker's version)\n\ndocker.io/bionic-updates 19.03.6-0ubuntu1~18.04.1 amd64\n  Linux container runtime\n```\n\n## k3s安装\n\n## 虚拟机磁盘扩容","slug":"027-vagrant使用入门","published":1,"date":"2020-10-02T14:10:21.859Z","updated":"2020-10-02T14:10:21.864Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl2001o8p7l3di75qos","content":"<h1 id=\"vagrant使用入门\"><a href=\"#vagrant使用入门\" class=\"headerlink\" title=\"vagrant使用入门\"></a>vagrant使用入门</h1><h2 id=\"vagrant官方网站\"><a href=\"#vagrant官方网站\" class=\"headerlink\" title=\"vagrant官方网站\"></a>vagrant官方网站</h2><p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926003801062-1517007.png?lastModify=1601516992\" alt=\"image-20200926003801062\"></p>\n<h2 id=\"官方镜像仓库\"><a href=\"#官方镜像仓库\" class=\"headerlink\" title=\"官方镜像仓库\"></a>官方镜像仓库</h2><p><a href=\"https://app.vagrantup.com/boxes/search\">https://app.vagrantup.com/boxes/search</a></p>\n<p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926010712485-1517007.png?lastModify=1601516992\" alt=\"image-20200926010712485\"></p>\n<h2 id=\"镜像离线下载或镜像加速\"><a href=\"#镜像离线下载或镜像加速\" class=\"headerlink\" title=\"镜像离线下载或镜像加速\"></a>镜像离线下载或镜像加速</h2><ul>\n<li>官方网站，大陆访问非常慢7kb/s</li>\n<li><a href=\"http://www.vagrantbox.es/\">http://www.vagrantbox.es/</a></li>\n</ul>\n<p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926004328137-1517007.png?lastModify=1601516992\" alt=\"image-20200926004328137\"></p>\n<h3 id=\"清华大学镜像-ubuntu-14-04\"><a href=\"#清华大学镜像-ubuntu-14-04\" class=\"headerlink\" title=\"清华大学镜像 ubuntu 14.04\"></a>清华大学镜像 ubuntu 14.04</h3><p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/</a></p>\n<ul>\n<li>ubuntu 18</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add \\</span><br><span class=\"line\">https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;bionic&#x2F;current&#x2F;bionic-server-cloudimg-amd64-vagrant.box \\</span><br><span class=\"line\">--name ubuntu&#x2F;bionic</span><br><span class=\"line\">vagrant-disksize</span><br><span class=\"line\"></span><br><span class=\"line\">A Vagrant plugin to resize disks in VirtualBox</span><br><span class=\"line\">Installation</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant plugin install vagrant-disksize</span><br><span class=\"line\"></span><br><span class=\"line\">Usage</span><br><span class=\"line\"></span><br><span class=\"line\">Set the size you want for your disk in your Vagrantfile. For example</span><br><span class=\"line\"></span><br><span class=\"line\">Vagrant.configure(&#39;2&#39;) do |config|</span><br><span class=\"line\">  config.vm.box &#x3D; &#39;ubuntu&#x2F;xenial64&#39;</span><br><span class=\"line\">  config.disksize.size &#x3D; &#39;50GB&#39;</span><br><span class=\"line\">end</span><br><span class=\"line\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn sh -</span><br><span class=\"line\"></span><br><span class=\"line\">加入工作节点</span><br><span class=\"line\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn K3S_URL&#x3D;https:&#x2F;&#x2F;myserver:6443 K3S_TOKEN&#x3D;mynodetoken sh -</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;192.168.2.139:8443&#x2F;v3&#x2F;import&#x2F;7pdpdmnj4qr5hrjn2m4djljnk5fnjb59ln8tvkbrwgdhgphlpmxgbh.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- 安装Docker(2020.9.26，最新版19.03)</span><br><span class=\"line\">sudo apt install docker.io</span><br><span class=\"line\">- 安装Docker-Compose</span><br><span class=\"line\">sudo apt install docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">- 当前用户给予权限</span><br><span class=\"line\">sudo usermod -aG docker your-user</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose&#x2F;bionic 1.17.1-2 all</span><br><span class=\"line\">  Punctual, lightweight development environments using Docker</span><br><span class=\"line\"></span><br><span class=\"line\">docker-containerd&#x2F;bionic 0.2.3+git+docker1.13.1~ds1-1 amd64</span><br><span class=\"line\">  daemon to control runC (Docker&#39;s version)</span><br><span class=\"line\"></span><br><span class=\"line\">docker-doc&#x2F;bionic-updates 19.03.6-0ubuntu1~18.04.1 all</span><br><span class=\"line\">  Linux container runtime -- documentation</span><br><span class=\"line\"></span><br><span class=\"line\">docker-registry&#x2F;bionic 2.6.2~ds1-1 amd64</span><br><span class=\"line\">  Docker toolset to pack, ship, store, and deliver content</span><br><span class=\"line\"></span><br><span class=\"line\">docker-runc&#x2F;bionic 1.0.0~rc2+git+docker1.13.1~ds1-3 amd64</span><br><span class=\"line\">  Open Container Project - runtime (Docker&#39;s version)</span><br><span class=\"line\"></span><br><span class=\"line\">docker.io&#x2F;bionic-updates 19.03.6-0ubuntu1~18.04.1 amd64</span><br><span class=\"line\">  Linux container runtime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"k3s安装\"><a href=\"#k3s安装\" class=\"headerlink\" title=\"k3s安装\"></a>k3s安装</h2><h2 id=\"虚拟机磁盘扩容\"><a href=\"#虚拟机磁盘扩容\" class=\"headerlink\" title=\"虚拟机磁盘扩容\"></a>虚拟机磁盘扩容</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vagrant使用入门\"><a href=\"#vagrant使用入门\" class=\"headerlink\" title=\"vagrant使用入门\"></a>vagrant使用入门</h1><h2 id=\"vagrant官方网站\"><a href=\"#vagrant官方网站\" class=\"headerlink\" title=\"vagrant官方网站\"></a>vagrant官方网站</h2><p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926003801062-1517007.png?lastModify=1601516992\" alt=\"image-20200926003801062\"></p>\n<h2 id=\"官方镜像仓库\"><a href=\"#官方镜像仓库\" class=\"headerlink\" title=\"官方镜像仓库\"></a>官方镜像仓库</h2><p><a href=\"https://app.vagrantup.com/boxes/search\">https://app.vagrantup.com/boxes/search</a></p>\n<p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926010712485-1517007.png?lastModify=1601516992\" alt=\"image-20200926010712485\"></p>\n<h2 id=\"镜像离线下载或镜像加速\"><a href=\"#镜像离线下载或镜像加速\" class=\"headerlink\" title=\"镜像离线下载或镜像加速\"></a>镜像离线下载或镜像加速</h2><ul>\n<li>官方网站，大陆访问非常慢7kb/s</li>\n<li><a href=\"http://www.vagrantbox.es/\">http://www.vagrantbox.es/</a></li>\n</ul>\n<p><img src=\"file:///Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20200926004328137-1517007.png?lastModify=1601516992\" alt=\"image-20200926004328137\"></p>\n<h3 id=\"清华大学镜像-ubuntu-14-04\"><a href=\"#清华大学镜像-ubuntu-14-04\" class=\"headerlink\" title=\"清华大学镜像 ubuntu 14.04\"></a>清华大学镜像 ubuntu 14.04</h3><p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/</a></p>\n<ul>\n<li>ubuntu 18</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant box add \\</span><br><span class=\"line\">https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;bionic&#x2F;current&#x2F;bionic-server-cloudimg-amd64-vagrant.box \\</span><br><span class=\"line\">--name ubuntu&#x2F;bionic</span><br><span class=\"line\">vagrant-disksize</span><br><span class=\"line\"></span><br><span class=\"line\">A Vagrant plugin to resize disks in VirtualBox</span><br><span class=\"line\">Installation</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant plugin install vagrant-disksize</span><br><span class=\"line\"></span><br><span class=\"line\">Usage</span><br><span class=\"line\"></span><br><span class=\"line\">Set the size you want for your disk in your Vagrantfile. For example</span><br><span class=\"line\"></span><br><span class=\"line\">Vagrant.configure(&#39;2&#39;) do |config|</span><br><span class=\"line\">  config.vm.box &#x3D; &#39;ubuntu&#x2F;xenial64&#39;</span><br><span class=\"line\">  config.disksize.size &#x3D; &#39;50GB&#39;</span><br><span class=\"line\">end</span><br><span class=\"line\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn sh -</span><br><span class=\"line\"></span><br><span class=\"line\">加入工作节点</span><br><span class=\"line\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn K3S_URL&#x3D;https:&#x2F;&#x2F;myserver:6443 K3S_TOKEN&#x3D;mynodetoken sh -</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f https:&#x2F;&#x2F;192.168.2.139:8443&#x2F;v3&#x2F;import&#x2F;7pdpdmnj4qr5hrjn2m4djljnk5fnjb59ln8tvkbrwgdhgphlpmxgbh.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- 安装Docker(2020.9.26，最新版19.03)</span><br><span class=\"line\">sudo apt install docker.io</span><br><span class=\"line\">- 安装Docker-Compose</span><br><span class=\"line\">sudo apt install docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">- 当前用户给予权限</span><br><span class=\"line\">sudo usermod -aG docker your-user</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose&#x2F;bionic 1.17.1-2 all</span><br><span class=\"line\">  Punctual, lightweight development environments using Docker</span><br><span class=\"line\"></span><br><span class=\"line\">docker-containerd&#x2F;bionic 0.2.3+git+docker1.13.1~ds1-1 amd64</span><br><span class=\"line\">  daemon to control runC (Docker&#39;s version)</span><br><span class=\"line\"></span><br><span class=\"line\">docker-doc&#x2F;bionic-updates 19.03.6-0ubuntu1~18.04.1 all</span><br><span class=\"line\">  Linux container runtime -- documentation</span><br><span class=\"line\"></span><br><span class=\"line\">docker-registry&#x2F;bionic 2.6.2~ds1-1 amd64</span><br><span class=\"line\">  Docker toolset to pack, ship, store, and deliver content</span><br><span class=\"line\"></span><br><span class=\"line\">docker-runc&#x2F;bionic 1.0.0~rc2+git+docker1.13.1~ds1-3 amd64</span><br><span class=\"line\">  Open Container Project - runtime (Docker&#39;s version)</span><br><span class=\"line\"></span><br><span class=\"line\">docker.io&#x2F;bionic-updates 19.03.6-0ubuntu1~18.04.1 amd64</span><br><span class=\"line\">  Linux container runtime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"k3s安装\"><a href=\"#k3s安装\" class=\"headerlink\" title=\"k3s安装\"></a>k3s安装</h2><h2 id=\"虚拟机磁盘扩容\"><a href=\"#虚拟机磁盘扩容\" class=\"headerlink\" title=\"虚拟机磁盘扩容\"></a>虚拟机磁盘扩容</h2>"},{"_content":"# etcd初级入门\n\n## 简介\n\netcd是k-v键值对数据库，常用来作为微服务架构下注册配置中心\n\n## 常用组件\n\n- etcd\n\n  ```\n  https://hub.fastgit.org/etcd-io/etcd\n  1. 下载二进制文件，安装到系统目录下\n  2. 运行etcd\n  ```\n\n  \n\n- etcdkeeper\n\n  ````\n  1. 下载地址：\n  https://hub.fastgit.org/evildecay/etcdkeeper\n  \n  2. 安装二进制文件\n  \n  3. 运行etcdkeeper，浏览器浏览，可以看到etcd的所有键值对\n  ./etcdkeeper -p 8092 -h 127.0.0.1\n  ````\n\n![image-20201002160731886](/Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20201002160731886.png)\n\n## 免责条款\n\n以上内容来自于个人理解，可能有所偏驳。文章仅做参考，所产生的一切后果与作者无关。","source":"_posts/029-etcd初级入门.md","raw":"# etcd初级入门\n\n## 简介\n\netcd是k-v键值对数据库，常用来作为微服务架构下注册配置中心\n\n## 常用组件\n\n- etcd\n\n  ```\n  https://hub.fastgit.org/etcd-io/etcd\n  1. 下载二进制文件，安装到系统目录下\n  2. 运行etcd\n  ```\n\n  \n\n- etcdkeeper\n\n  ````\n  1. 下载地址：\n  https://hub.fastgit.org/evildecay/etcdkeeper\n  \n  2. 安装二进制文件\n  \n  3. 运行etcdkeeper，浏览器浏览，可以看到etcd的所有键值对\n  ./etcdkeeper -p 8092 -h 127.0.0.1\n  ````\n\n![image-20201002160731886](/Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20201002160731886.png)\n\n## 免责条款\n\n以上内容来自于个人理解，可能有所偏驳。文章仅做参考，所产生的一切后果与作者无关。","slug":"029-etcd初级入门","published":1,"date":"2020-10-02T14:10:21.886Z","updated":"2020-10-02T14:10:21.889Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl6001q8p7l1bkx5t18","content":"<h1 id=\"etcd初级入门\"><a href=\"#etcd初级入门\" class=\"headerlink\" title=\"etcd初级入门\"></a>etcd初级入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>etcd是k-v键值对数据库，常用来作为微服务架构下注册配置中心</p>\n<h2 id=\"常用组件\"><a href=\"#常用组件\" class=\"headerlink\" title=\"常用组件\"></a>常用组件</h2><ul>\n<li><p>etcd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hub.fastgit.org&#x2F;etcd-io&#x2F;etcd</span><br><span class=\"line\">1. 下载二进制文件，安装到系统目录下</span><br><span class=\"line\">2. 运行etcd</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<ul>\n<li><p>etcdkeeper</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 下载地址：</span><br><span class=\"line\">https:&#x2F;&#x2F;hub.fastgit.org&#x2F;evildecay&#x2F;etcdkeeper</span><br><span class=\"line\"></span><br><span class=\"line\">2. 安装二进制文件</span><br><span class=\"line\"></span><br><span class=\"line\">3. 运行etcdkeeper，浏览器浏览，可以看到etcd的所有键值对</span><br><span class=\"line\">.&#x2F;etcdkeeper -p 8092 -h 127.0.0.1</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20201002160731886.png\" alt=\"image-20201002160731886\"></p>\n<h2 id=\"免责条款\"><a href=\"#免责条款\" class=\"headerlink\" title=\"免责条款\"></a>免责条款</h2><p>以上内容来自于个人理解，可能有所偏驳。文章仅做参考，所产生的一切后果与作者无关。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"etcd初级入门\"><a href=\"#etcd初级入门\" class=\"headerlink\" title=\"etcd初级入门\"></a>etcd初级入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>etcd是k-v键值对数据库，常用来作为微服务架构下注册配置中心</p>\n<h2 id=\"常用组件\"><a href=\"#常用组件\" class=\"headerlink\" title=\"常用组件\"></a>常用组件</h2><ul>\n<li><p>etcd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hub.fastgit.org&#x2F;etcd-io&#x2F;etcd</span><br><span class=\"line\">1. 下载二进制文件，安装到系统目录下</span><br><span class=\"line\">2. 运行etcd</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<ul>\n<li><p>etcdkeeper</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 下载地址：</span><br><span class=\"line\">https:&#x2F;&#x2F;hub.fastgit.org&#x2F;evildecay&#x2F;etcdkeeper</span><br><span class=\"line\"></span><br><span class=\"line\">2. 安装二进制文件</span><br><span class=\"line\"></span><br><span class=\"line\">3. 运行etcdkeeper，浏览器浏览，可以看到etcd的所有键值对</span><br><span class=\"line\">.&#x2F;etcdkeeper -p 8092 -h 127.0.0.1</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/Users/mac/tg-git/coding_net/grocery/dailylog/attach/images/image-20201002160731886.png\" alt=\"image-20201002160731886\"></p>\n<h2 id=\"免责条款\"><a href=\"#免责条款\" class=\"headerlink\" title=\"免责条款\"></a>免责条款</h2><p>以上内容来自于个人理解，可能有所偏驳。文章仅做参考，所产生的一切后果与作者无关。</p>\n"},{"title":"EverSynClientTestMd","time":"2016-12-05 23:38","notebook":"blog","_content":"\n# EverSynClientTestMd 印象笔记同步测试\n\n## 原理简介\n\n## 主机配置\n\n- 安装\n```bash\nsudo apt-get install x11-xserver-utils\n```\n","source":"_posts/EverSynClientTestMd.md","raw":"---\ntitle: EverSynClientTestMd\ntime: 2016-12-05 23:38\ntags: Markdown,blog\nnotebook: blog\n---\n\n# EverSynClientTestMd 印象笔记同步测试\n\n## 原理简介\n\n## 主机配置\n\n- 安装\n```bash\nsudo apt-get install x11-xserver-utils\n```\n","slug":"EverSynClientTestMd","published":1,"date":"2020-10-02T14:10:21.912Z","updated":"2020-10-02T14:10:21.916Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl8001t8p7l4p9g57h8","content":"<h1 id=\"EverSynClientTestMd-印象笔记同步测试\"><a href=\"#EverSynClientTestMd-印象笔记同步测试\" class=\"headerlink\" title=\"EverSynClientTestMd 印象笔记同步测试\"></a>EverSynClientTestMd 印象笔记同步测试</h1><h2 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h2><h2 id=\"主机配置\"><a href=\"#主机配置\" class=\"headerlink\" title=\"主机配置\"></a>主机配置</h2><ul>\n<li>安装<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install x11-xserver-utils</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"EverSynClientTestMd-印象笔记同步测试\"><a href=\"#EverSynClientTestMd-印象笔记同步测试\" class=\"headerlink\" title=\"EverSynClientTestMd 印象笔记同步测试\"></a>EverSynClientTestMd 印象笔记同步测试</h1><h2 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h2><h2 id=\"主机配置\"><a href=\"#主机配置\" class=\"headerlink\" title=\"主机配置\"></a>主机配置</h2><ul>\n<li>安装<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install x11-xserver-utils</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-10-02T14:35:20.865Z","updated":"2020-10-02T14:35:20.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dl9001v8p7lf9yy0ulo","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Docker简易使用教程","time":"2019-12-17 14:00","notebook":"blog","_content":"\n# Docker简易使用教程\n\n## 配置注册处镜像\n\n- 配置阿里云的加速器，支持配置多个镜像\n```\n$ cat /etc/docker/daemon.json\n{\n    \"registry-mirrors\": [\n        \"https://registry.docker-cn.com\",\n        \"https://eqcxmbvw.mirror.aliyuncs.com\"\n    ]\n}\n```\n\n## 容器运行状态\n\n- `docker container stats`\n\n## 查看网络状态\n\n\n```\ndocker inspect mongo |grep IP\n```\n","source":"_posts/007-Docker简易使用教程.md","raw":"---\ntitle: Docker简易使用教程\ntime: 2019-12-17 14:00\ntags: Markdown,blog\nnotebook: blog\n---\n\n# Docker简易使用教程\n\n## 配置注册处镜像\n\n- 配置阿里云的加速器，支持配置多个镜像\n```\n$ cat /etc/docker/daemon.json\n{\n    \"registry-mirrors\": [\n        \"https://registry.docker-cn.com\",\n        \"https://eqcxmbvw.mirror.aliyuncs.com\"\n    ]\n}\n```\n\n## 容器运行状态\n\n- `docker container stats`\n\n## 查看网络状态\n\n\n```\ndocker inspect mongo |grep IP\n```\n","slug":"007-Docker简易使用教程","published":1,"date":"2020-10-02T14:10:21.500Z","updated":"2020-10-02T14:10:21.504Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfsg3dla001x8p7l5un9347i","content":"<h1 id=\"Docker简易使用教程\"><a href=\"#Docker简易使用教程\" class=\"headerlink\" title=\"Docker简易使用教程\"></a>Docker简易使用教程</h1><h2 id=\"配置注册处镜像\"><a href=\"#配置注册处镜像\" class=\"headerlink\" title=\"配置注册处镜像\"></a>配置注册处镜像</h2><ul>\n<li>配置阿里云的加速器，支持配置多个镜像<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">        &quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;,</span><br><span class=\"line\">        &quot;https:&#x2F;&#x2F;eqcxmbvw.mirror.aliyuncs.com&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"容器运行状态\"><a href=\"#容器运行状态\" class=\"headerlink\" title=\"容器运行状态\"></a>容器运行状态</h2><ul>\n<li><code>docker container stats</code></li>\n</ul>\n<h2 id=\"查看网络状态\"><a href=\"#查看网络状态\" class=\"headerlink\" title=\"查看网络状态\"></a>查看网络状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker inspect mongo |grep IP</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker简易使用教程\"><a href=\"#Docker简易使用教程\" class=\"headerlink\" title=\"Docker简易使用教程\"></a>Docker简易使用教程</h1><h2 id=\"配置注册处镜像\"><a href=\"#配置注册处镜像\" class=\"headerlink\" title=\"配置注册处镜像\"></a>配置注册处镜像</h2><ul>\n<li>配置阿里云的加速器，支持配置多个镜像<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">        &quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;,</span><br><span class=\"line\">        &quot;https:&#x2F;&#x2F;eqcxmbvw.mirror.aliyuncs.com&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"容器运行状态\"><a href=\"#容器运行状态\" class=\"headerlink\" title=\"容器运行状态\"></a>容器运行状态</h2><ul>\n<li><code>docker container stats</code></li>\n</ul>\n<h2 id=\"查看网络状态\"><a href=\"#查看网络状态\" class=\"headerlink\" title=\"查看网络状态\"></a>查看网络状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker inspect mongo |grep IP</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckfsg3djd00008p7lfhx75vdv","tag_id":"ckfsg3djy00028p7law0j3st1","_id":"ckfsg3dk800078p7l31hs42vs"},{"post_id":"ckfsg3djx00018p7lfbhr5cfq","tag_id":"ckfsg3djy00028p7law0j3st1","_id":"ckfsg3dkb000b8p7lfoldgj1z"},{"post_id":"ckfsg3dkb000c8p7les9j090y","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkf000f8p7lghlo9uam"},{"post_id":"ckfsg3dk000038p7l4qgq05k2","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkh000h8p7l9wshefeg"},{"post_id":"ckfsg3dkc000d8p7lcvt7fnpq","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkj000k8p7lb71xc7cp"},{"post_id":"ckfsg3dk100048p7l35k94oxs","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkk000m8p7lb5oj6ajt"},{"post_id":"ckfsg3dkh000i8p7l3d5rhlpt","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkl000p8p7lcosc8814"},{"post_id":"ckfsg3dkj000l8p7l2ajwbfvq","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkm000r8p7lfpdf150j"},{"post_id":"ckfsg3dk300058p7lc7rbccw0","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dko000u8p7laxej7ohn"},{"post_id":"ckfsg3dkk000n8p7ldfr898o7","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkp000w8p7l4uo4bgn8"},{"post_id":"ckfsg3dkl000q8p7ldj314zyt","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkq000z8p7ld7bs201n"},{"post_id":"ckfsg3dk800088p7lazfc2a9n","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkr00118p7lg4z5a6cm"},{"post_id":"ckfsg3dkm000s8p7l828q92pb","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dks00138p7lahm95nvn"},{"post_id":"ckfsg3dko000v8p7ld9kxang3","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkt00158p7l9tdydmb0"},{"post_id":"ckfsg3dka00098p7l3vffgs66","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dku00178p7lfk2v38ho"},{"post_id":"ckfsg3dkp000x8p7l1p0b93wv","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkv00198p7lad3dcqql"},{"post_id":"ckfsg3dkq00108p7l0yhefi2d","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkw001b8p7lbov928ju"},{"post_id":"ckfsg3dkg000g8p7lgllg3q4k","tag_id":"ckfsg3dkq000y8p7ldcika59a","_id":"ckfsg3dkx001d8p7l5mnh7e54"},{"post_id":"ckfsg3dkr00128p7l9fc94rnp","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dky001g8p7lexsg0gxa"},{"post_id":"ckfsg3dks00148p7lafv7dkfb","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dkz001i8p7lepthcyy2"},{"post_id":"ckfsg3dkt00168p7l86kof13n","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dl1001k8p7ld9358wgf"},{"post_id":"ckfsg3dku00188p7l4q2v7wyw","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dl2001n8p7lgdwt2604"},{"post_id":"ckfsg3dkv001a8p7l1fu7f5q2","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dl6001p8p7leullfmyr"},{"post_id":"ckfsg3dky001h8p7lf74ne8se","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dl8001s8p7l34c9535c"},{"post_id":"ckfsg3dkw001c8p7leo183w45","tag_id":"ckfsg3dky001f8p7l2sjygw3n","_id":"ckfsg3dl9001u8p7lhykb922a"},{"post_id":"ckfsg3dkx001e8p7ldy94ggv8","tag_id":"ckfsg3dl2001m8p7l90xtduei","_id":"ckfsg3dla001w8p7l6a2nf5go"},{"post_id":"ckfsg3dl8001t8p7l4p9g57h8","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dlb001y8p7l90vp6xsy"},{"post_id":"ckfsg3dl0001j8p7l044nep8l","tag_id":"ckfsg3dl2001m8p7l90xtduei","_id":"ckfsg3dlc001z8p7le0kv8b8x"},{"post_id":"ckfsg3dla001x8p7l5un9347i","tag_id":"ckfsg3dka000a8p7lbmiddzc9","_id":"ckfsg3dlc00208p7l520g52ru"}],"Tag":[{"name":"Markdown,blog-2019,blog-2019-12","_id":"ckfsg3djy00028p7law0j3st1"},{"name":"Markdown,blog","_id":"ckfsg3dka000a8p7lbmiddzc9"},{"name":"Markdown,daily","_id":"ckfsg3dkq000y8p7ldcika59a"},{"name":"Markdown,blog-2020,blog-2020-01","_id":"ckfsg3dky001f8p7l2sjygw3n"},{"name":"Markdown,GitMdNote,blog-2020-01","_id":"ckfsg3dl2001m8p7l90xtduei"}]}}